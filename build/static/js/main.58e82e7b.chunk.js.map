{"version":3,"sources":["misc/EqItems/Machine.module.css","misc/PakItems/PakItems.module.css","pages/Zvitu/Zvitu.module.css","pages/CreatePrices/CreatePrices.module.css","pages/Home/Home.js","store/api/_axios.js","store/api/api.js","misc/Button/Button.js","pages/Login/Login.js","store/actions/profileActions.js","store/actions/actionTypes.js","misc/Header/LogoutComponent.js","misc/Header/Header.js","pages/Profile/Profile.js","misc/Input/Input.js","utils/utils.js","pages/CreatePruhid/CreatePruhid.js","store/actions/skladActions.js","store/actions/workersActions.js","pages/Workers/Workers.js","store/actions/roztsinkaActions.js","pages/Prices/Prices.js","store/actions/Machine/modelActions.js","store/actions/Machine/duymuActions.js","misc/EqItems/MachineDuymu.js","store/actions/Machine/golkuActions.js","misc/EqItems/MachineGolku.js","store/actions/Machine/vyazalniActions.js","misc/EqItems/MachineVyazalni.js","store/actions/Machine/machineActions.js","misc/EqItems/Machines.js","pages/Equipment/Equipment.js","misc/PrajaItems/PrajaType.js","store/actions/Praja/typeActions.js","misc/PrajaItems/PrajaTovtshina.js","store/actions/Praja/tovtshinaActions.js","misc/PrajaItems/PrajaVendor.js","store/actions/Praja/vendorActions.js","misc/PrajaItems/PrajaRozhid.js","store/actions/Praja/rozhidActions.js","misc/PrajaItems/PrajaColor.js","store/actions/Praja/colorActions.js","pages/Praja/Praja.js","store/actions/Praja/surovunaActions.js","misc/PakItems/PakRozhid.js","store/actions/Material/dilankaRozhoduActions.js","misc/PakItems/PakParams.js","store/actions/Material/paramsActions.js","misc/PakItems/PakParamsValue.js","store/actions/Material/paramsValueActions.js","misc/PakItems/PakType.js","store/actions/Material/typeActions.js","pages/PakMaterials/PakMaterials.js","store/actions/Material/vendorActions.js","pages/Sklad1/Sklad1.js","pages/Edit/Edit.js","pages/ZpSklad/ZpSklad1/ZpSklad1.js","store/actions/zpSklad1Actions.js","store/actions/prodTypeArticleActions.js","store/actions/prodTypeAsortActions.js","misc/Prod/ProdAsort.js","store/actions/prodTypeClassActions.js","misc/Prod/ProdClass.js","store/actions/prodTypeColorActions.js","misc/Prod/ProdColor.js","store/actions/prodTypeImageActions.js","misc/Prod/ProdImg.js","store/actions/prodTypeSezonActions.js","misc/Prod/ProdSezon.js","store/actions/prodTypeSizeActions.js","misc/Prod/ProdSize.js","store/actions/prodTypeTypeActions.js","misc/Prod/ProdType.js","pages/Productcia/Productcia.js","store/actions/operationsAction.js","pages/Operations/Operations.js","pages/Zvitu/Zvitu.js","store/actions/Zvitu/zvituActions.js","store/actions/Zvitu/zvituRozhidActions.js","store/actions/Zvitu/zvituZalushokActions.js","pages/CreateWorker/CreateWorker.js","pages/CreatePrices/CreatePrices.js","pages/EditWorker/EditWorker.js","pages/EditPrice/EditPrice.js","pages/CreateMachine/CreateMachine.js","pages/EditMachine/EditMachine.js","pages/CreateZvitu/CreateZvitu.js","pages/CreateZvituRozxid/CreateZvituRozxid.js","pages/EditZvitu/EditZvitu.js","pages/EditZvituRozxid/EditZvituRozxid.js","App.js","store/reducers/operationsReducer.js","store/reducers/Machine/duymuReducer.js","store/reducers/Machine/golkuReducer.js","store/reducers/Machine/modelReducer.js","store/reducers/Machine/vyazalniReducer.js","store/reducers/Material/dilankaRozhoduReducer.js","store/reducers/Material/paramsReducer.js","store/reducers/Material/paramsValueReducer.js","store/reducers/Praja/colorReducer.js","store/reducers/Praja/rozhidReducer.js","store/reducers/Praja/surovunaReducer.js","store/reducers/Praja/tovtshinaReducer.js","store/reducers/Praja/typeReducer.js","store/reducers/Praja/vendorReducer.js","store/reducers/prodTypeAsortReducer.js","store/reducers/prodTypeClassReducer.js","store/reducers/prodTypeColorReducer.js","store/reducers/prodTypeImageReducer.js","store/reducers/prodTypeArticleReducer.js","store/reducers/prodTypeSezonReducer.js","store/reducers/prodTypeSizeReducer.js","store/reducers/prodTypeTypeReducer.js","store/reducers/profileReducer.js","store/reducers/roztsinkaReducer.js","store/reducers/skladReducer.js","store/reducers/workersReducer.js","store/reducers/zpSklad1Reducer.js","store/reducers/Zvitu/zvituReducer.js","store/reducers/Zvitu/zvituRozxidReducer.js","store/reducers/Material/typeMReducer.js","store/reducers/Material/vendorMReducer.js","store/reducers/Machine/machineReducer.js","store/reducers/Zvitu/zvituZalushokReducer.js","store/reducers/rootReducer.js","index.js","pages/EditPrice/EditPrice.module.css","pages/CreatePruhid/CreatePruhid.module.css","pages/Equipment/Equipment.module.css","pages/Praja/Praja.module.css","pages/PakMaterials/PakMaterials.module.css","pages/Productcia/Productcia.module.css","pages/Workers/Workers.module.css","pages/CreateMachine/CreateMachine.module.css","pages/EditMachine/EditMachine.module.css","pages/Operations/Operations.module.css","misc/Header/Header.module.css","pages/Prices/Prices.module.css","pages/CreateWorker/CreateWorker.module.css","pages/EditWorker/EditWorker.module.css","pages/CreateZvitu/CreateZvitu.module.css","pages/CreateZvituRozxid/CreateZvituRozxid.module.css","pages/EditZvitu/EditZvitu.module.css","pages/EditZvituRozxid/EditZvituRozxid.module.css","misc/Prod/Prod.module.css","pages/Login/Login.module.css","pages/ZpSklad/ZpSklad1.module.css","pages/Edit/Edit.module.css","misc/PrajaItems/PrajaItems.module.css","misc/Input/Input.module.css","misc/Button/Button.module.css","pages/Sklad1/Sklad1.module.css"],"names":["module","exports","Home","props","_axios","axios","create","baseURL","loginRequest","data","post","fetchSklad1","token","get","headers","Authorization","fetchFilteredSklad1","from","to","search","baseUrl","createSklad1","sklad1","deleteSklad1","id","delete","fetchWorkers","fetchWorker","fetchSearchWorkers","createWorker","workers","patchWorker","patch","deleteWorker","fetchZpSklad1","fetchProdArticle","fetchFilteredProdArticle","createProdArticle","prod","deleteProdArticle","fetchProdAsortument","fetchFilteredProdAsortument","createProdAsortument","prodAsortument","deleteProdAsortument","fetchProdClass","fetchFilteredProdClass","createProdClass","deleteProdClass","fetchProdColor","fetchFilteredProdColor","createProdColor","deleteProdColor","fetchProdImage","fetchFilteredProdImage","createProdImage","deleteProdImage","fetchProdSezon","fetchFilteredProdSezon","createProdSezon","deleteProdSezon","fetchProdSize","fetchFilteredProdSize","createProdSize","deleteProdSize","fetchProdType","fetchFilteredProdType","createProdType","deleteProdType","fetchPrajaColor","fetchSearchPrajaColor","createPrajaColor","prajaColor","patchPrajaColor","deletePrajaColor","fetchPrajaRozhid","fetchSearchPrajaRozhid","createPrajaRozhid","prajaRozhid","patchPrajaRozhid","deletePrajaRozhid","fetchPrajaSurovuna","fetchSearchPrajaSurovuna","createPrajaSurovuna","prajaSurovuna","patchPrajaSurovuna","deletePrajaSurovuna","fetchPrajaTovtshina","fetchSearchPrajaTovtshina","createPrajaTovtshina","prajaTovtshina","patchPrajaTovtshina","deletePrajaTovtshina","fetchPrajaType","fetchSearchPrajaType","createPrajaType","prajaType","patchPrajaType","deletePrajaType","fetchPrajaVendor","fetchSearchPrajaVendor","createPrajaVendor","prajaVendor","patchPrajaVendor","deletePrajaVendor","fetchMachine","fetchSingleMachine","fetchSearchMachine","createMachine","machines","patchMachine","deleteMachine","fetchMachineModel","fetchSearchMachineModel","createMachineModel","machineModel","deleteMachineModel","fetchMachineGolku","fetchSearchMachineGolku","createMachineGolku","machineGolku","deleteMachineGolku","fetchMachineDuymu","fetchSearchMachineDuymu","createMachineDuymu","machineDuymu","deleteMachineDuymu","fetchMachineVyazalni","fetchSearchMachineVyazalni","createMachineVyazalni","machineVyazalni","deleteMachineVyazalni","fetchRoztsinka","fetchSingleRoztsinka","fetchFilteredRoztsinka","createRoztsinka","roztsinka","patchRoztsinka","deleteRoztsinka","fetchMaterialVendor","fetchSearchMaterialVendor","createMaterialVendor","materialVendor","patchMaterialVendor","deleteMaterialVendor","fetchMaterialRozhid","fetchSearchMaterialRozhid","createMaterialRozhid","materialRozhid","patchMaterialRozhid","deleteMaterialRozhid","fetchMaterialType","fetchSearchMaterialType","createMaterialType","materialType","patchMaterialType","deleteMaterialType","fetchMaterialParams","fetchSearchMaterialParams","createMaterialParams","materialParams","patchMaterialParams","deleteMaterialParams","fetchMaterialParamsValue","fetchSearchMaterialParamsValue","createMaterialParamsValue","materialParamsValue","patchMaterialParamsValue","deleteMaterialParamsValue","fetchOperations","fetchSearchOperations","createOperations","operations","patchOperations","deleteOperations","fetchZvitu","fetchSingleZvitu","fetchFilteredZvitu","createZvitu","zvitu","patchZvitu","deleteZvitu","fetchZvituRozxid","fetchSingleZvituRozxid","fetchFilteredZvituRozxid","createZvituRozxid","zvituRozxid","patchZvituRozxid","deleteZvituRozxid","fetchZvituZalushok","fetchFilteredZvituZalushok","Button","title","onClick","rest","className","s","btn","form__submit__button","formikHOC","withFormik","mapPropsToValues","email","password","handleSubmit","values","a","login","history","push","alert","handleChange","touched","errors","handleBlur","main__container","header__title","login__container","label","input","placeholder","onChange","value","name","onBlur","у","type","connect","state","dispatch","response","status","document","cookie","loginAction","logout","h","useHistory","withRouter","pathname","location","startsWith","navbar","dropdown","dropbtn","dropdown_content","Profile","Input","isTextarea","input__container","getToken","includes","split","filter","vyazalId","masterId","machineId","gatynok1","gatynok2","gatynok3","typeId","asortumentId","imageId","colorId","sizeId","classId","articleId","date_prixod","CreatePruhid","resetForm","main","title__container","left","select__container","right","sum__container","sum","createSklad1Action","getWorkersAction","filteredWorkers","filtered","getWorkers","searchValue","searchWorkers","searchWorkersAction","deleteWorkers","responce","deleteWorkerAction","filetred","_id","useState","dataForFilter","setDataForFilter","useEffect","filter__container","search__container","target","create__worker","table","status__table","length","map","key","fName","sName","operationId","q","table__btn","del","worker","createRoztsinkaAction","filteredRoztsinka","filterRoztsinka","filterRoztsinkaAction","startDate","slice","endDate","price","asortument","seasonId","gatynok","changesId","firstName","getMachineModelAction","getMachineDuymuAction","filteredMachineDuymu","filterMachineDuymu","singleMachineDuymu","setsingleMachineDuymu","setDuymu","patchSingleMachineDuymu","patchMachineDuymu","then","res","prevState","golku","getSingleDuymu","fetchSingleMachineDuymu","e","filterMachineDuymuAction","getMachineGolkuAction","filteredMachineGolku","filterMachineGolku","singleMachineGolku","setsingleMachineGolku","setGolku","patchSingleMachineGolku","patchMachineGolku","getSingleGolku","fetchSingleMachineGolku","filterMachineGolkuAction","getMachineVyazalniAction","filteredMachineVyazalni","filterMachineVyazalni","singleMachineVyazalni","setsingleMachineVyazalni","setVyazalni","patchSingleMachineVyazalni","patchMachineVyazalni","getSingleVyazalni","fetchSingleMachineVyazalni","filterMachineVyazalniAction","getMachineAction","filteredMachine","filterMachine","searchMachineAction","modelId","golkuId","duymuId","vyazalniId","filteredMachineModel","filterMachineModel","activeTabIndex","setActiveTabIndex","singleMachineModel","setsingleMachineModel","setModel","patchSingleMachineModel","patchMachineModel","model","getSingleModel","fetchSingleMachineModel","tabs","item","i","classnames","tab","tab__active","filterMachineModelAction","filterPrajaType","filteredPrajaType","singlePrajaType","setsinglePrajaType","setType","getSinglePrajaType","fetchSinglePrajaType","patchSinglePrajaType","filterPrajaTypeAction","filterPrajaTovtshina","filteredPrajaTovtshina","singlePrajaTovtshina","setsinglePrajaTovtshina","setTovtshina","getSinglePrajaTovtshina","fetchSinglePrajaTovtshina","patchSinglePrajaTovtshina","filterPrajaTovtshinaAction","filterPrajaVendor","filteredPrajaVendor","singlePrajaVendor","setsinglePrajaVendor","setVendor","getSinglePrajaVendor","fetchSinglePrajaVendor","patchSinglePrajaVendor","filterPrajaVendorAction","filterPrajaRozhid","filteredPrajaRozhid","singlePrajaRozhid","setsinglePrajaRozhid","setRozhid","getSinglePrajaRozhid","fetchSinglePrajaRozhid","patchSinglePrajaRozhid","filterPrajaRozhidAction","filterPrajaColor","filteredPrajaColor","singlePrajaColor","setsinglePrajaColor","setColor","getSinglePrajaColor","fetchSinglePrajaColor","patchSinglePrajaColor","filterPrajaColorAction","filterPrajaSurovuna","filteredPrajaSurovuna","singlePrajaSurovuna","setsinglePrajaSurovuna","setSurovuna","getSinglePrajaSurovuna","fetchSinglePrajaSurovuna","patchSinglePrajaSurovuna","filterPrajaSurovunaAction","filterMaterialRozhid","filteredMaterialRozhid","singlePakMaterialRozhid","setSinglePakMaterialRozhid","getSingleRozhid","fetchSingleMaterialRozhid","roz","patchSingleMaterialRozhid","filterMaterialRozhidAction","filterMaterialParams","filteredMaterialParams","singlePakMaterialParams","setSinglePakMaterialParams","setParams","getSingleParams","fetchSingleMaterialParams","par","patchSingleMaterialParams","filterMaterialParamsAction","filterMaterialParamsValue","filteredMaterialParamsValue","singlePakMaterialParamsValue","setSinglePakMaterialParamsValue","setParamsValue","getSingleParamsValue","fetchSingleMaterialParamsValue","parVal","patchSingleMaterialParamsValue","filterMaterialParamsValueAction","filterMaterialType","filteredMaterialType","singlePakMaterialType","setSinglePakMaterialType","getSingleType","fetchSingleMaterialType","patchSingleMaterialType","filterMaterialTypeAction","filterMaterialVendor","filteredMaterialVendor","singlePakMaterialVendor","setSinglePakMaterialVendor","getSingleVendor","fetchSingleMaterialVendor","vendor","patchSingleMaterialVendor","PakRozhid","PakType","PakParams","PakParamsValue","filterMaterialVendorAction","filteredSklad1","getSklad1","filterSklad1","sort","filterSklad1Action","deleteSklad1Action","barcode","exel__wrapper","filename","sheet","buttonText","mishok","createdAt","sklad","Edit","edit__container","btn__container","zpsklad1","getZpSklad1","arrayOfWorkers","Object","keys","console","log","catch","zp","getProdArticleAction","prodArticle","getProdAsortumentAction","productciaAsortument","filterProdAsorument","filteredProdAsortument","singleAsortument","setsingleAsortument","setProdAsort","patchSingleProdAsortument","patchProdAsortument","getSingleProdAsort","fetchSingleProdAsortument","prodA","filterProdAsortumentAction","deleteProdAsortumentAction","getProdClassAction","prodClass","productciaClass","filteredProdClass","filterProdClass","singleClass","setSingleClass","setProdClass","patchSingleProdClass","patchProdClass","clas","getSingleProdClass","fetchSingleProdClass","filterProdClassAction","deleteProdClassAction","getProdColorAction","prodColor","filteredProdColor","filterProdColor","productciaColor","singleColor","setSingleColor","setProdColor","patchSingleProdColor","patchProdColor","color","getSingleProdColor","fetchSingleProdColor","filterProdColorAction","deleteProdColorAction","getProdImageAction","prodImage","productciaImage","filterProdImage","filteredProdImage","singleImage","setSingleImage","setProdImage","patchSingleProdImage","patchProdImage","img","getSingleProdImage","fetchSingleProdImage","filterProdImageAction","deleteProdImageAction","getProdSezonAction","prodSezon","productciaSezon","filteredProdSezon","filterProdSezon","singleSezon","setSingleSezon","setProdSezon","patchSingleProdSezon","patchProdSezon","sezon","getSingleProdSezon","fetchSingleProdSezon","filterProdSezonAction","deleteProdSezonAction","getProdSizeAction","prodSize","productciaSize","filteredProdSize","filterProdSize","singleSize","setSingleSize","setProdSize","patchSingleProdSize","patchProdSize","size","getSingleProdSize","fetchSingleProdSize","filterProdSizeAction","deleteProdSizeAction","getProdTypeAction","prodType","productciaType","filteredProdType","filterProdType","singleType","setSingleType","setProdType","patchSingleProdType","patchProdType","getSingleProdType","fetchSingleProdType","filterProdTypeAction","deleteProdTypeAction","filteredProdArticle","productciaArticle","filterProdArticle","singleArticle","setSingleArticle","setProdArticle","patchSingleProdArticle","patchProdArticle","article","getSingleProdArticle","fetchSingleProdArticle","prodArt","ProdImg","filterProdArticleAction","deleteProdArticleAction","getOperationsAction","searchOperations","filteredOperations","getOperations","singleOperation","setSingleOperation","setOperation","getSingleOperation","fetchSingleOperations","oper","patchSingleOperation","searchOperationsAction","deleteOperationsAction","filteredZvitu","filteredZvituRozxid","zvituZalushok","filteredZvituZalushok","getZvitu","filterZvitu","filterZvituAction","deleteZvituAction","getZvituRozxid","filterZvituRozxid","filterZvituRozxidAction","deleteZvituRozxidAction","getZvituZalushok","filterZvituZalushok","filterZvituZalushokAction","workerId","date_prixodu","lastName","zvit","date_rozxodu","zvitRozxid","zvitz","fatherName","validate","workerToSubmit","setValues","operationsOptions","setOperationsOptions","opt","span","options","disabled","createWorkerAction","createPrices","pricesToSubmit","articleOptions","setArticleOptions","typeOptions","setTypeOptions","sizeOptions","setSizeOptions","sezonOptions","setSezonOptions","asortumenOptions","setAsortumenOptions","imageOptions","setImageOptions","classOptions","setClassOptions","colorOptions","setColorOptions","machinesOptions","setMachinesOptions","asort","cls","col","art","sez","editWorker","singleWorker","getSingleWorker","useParams","operationName","single","getSingleWorkerAction","editWorkerAction","editRoztsinka","singleRoztsinka","getSingleRoztsinka","asortumentName","machineName","articleName","typeName","sizeName","seasonName","imageName","classN","colorName","getSingleRoztsinkaAction","editRoztsinkaAction","machineToSubmit","modelOptions","setModelOptions","duymuOptions","setDuymuOptions","golkuOptions","setGolkuOptions","vyazalniOptions","setVyazalniOptions","mod","machine","editMachine","singleMachine","getSingleMachine","getSingleMachineAction","editMachineAction","zvituToSubmit","workersOptions","setWorkersOptions","createZvituAction","editZvitu","singleZvitu","getSingleZvitu","getSingleZvituAction","editZvituAction","editZvituRozxid","singleZvituRozxid","getSingleZvituRozxid","getSingleZvituRozxidAction","editZvituRozxidAction","App","style","padding","path","component","exact","Login","Workers","Prices","Equipment","Praja","PakMaterials","Sklad1","ZpSklad1","Productcia","Operations","Zvitu","CreateWorker","CreatePrices","EditWorker","EditPrice","CreateMachine","EditMachine","CreateZvitu","CreateZvituRozxid","EditZvitu","EditZvituRozxid","initialState","date_rozsxodu","changesID","deletedAt","updatedAt","combineReducers","profile","action","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.58e82e7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Machine_title__container__1m37T\",\"title\":\"Machine_title__1dVHS\",\"table\":\"Machine_table__1BuXJ\",\"search__container\":\"Machine_search__container__2fUt1\",\"table__btn\":\"Machine_table__btn__1hOK-\",\"del\":\"Machine_del__3m8n3\",\"filter__container\":\"Machine_filter__container__3Y59-\",\"tab\":\"Machine_tab__1zniY\",\"tab__active\":\"Machine_tab__active__u4J2B\",\"tabs\":\"Machine_tabs__1Y7m5\",\"create__worker\":\"Machine_create__worker__1D442\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"PakItems_title__container__38FKq\",\"title\":\"PakItems_title__3lj2i\",\"table\":\"PakItems_table__fFY32\",\"search__container\":\"PakItems_search__container__1pv34\",\"table__btn\":\"PakItems_table__btn__3Dhgy\",\"del\":\"PakItems_del__1yS7y\",\"filter__container\":\"PakItems_filter__container__3kP_X\",\"tab\":\"PakItems_tab__3l_NC\",\"tab__active\":\"PakItems_tab__active__2Id_s\",\"tabs\":\"PakItems_tabs__3oIsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Zvitu_title__container__3V-of\",\"title\":\"Zvitu_title__10OP1\",\"table\":\"Zvitu_table__1VBqY\",\"search__container\":\"Zvitu_search__container__arvuQ\",\"table__btn\":\"Zvitu_table__btn__iBtA7\",\"del\":\"Zvitu_del__W-skB\",\"filter__container\":\"Zvitu_filter__container__24bxS\",\"tab\":\"Zvitu_tab__WNac-\",\"tab__active\":\"Zvitu_tab__active__kxMxY\",\"tabs\":\"Zvitu_tabs__3dU62\",\"i\":\"Zvitu_i__sP8fX\",\"create__worker\":\"Zvitu_create__worker__W7UsN\",\"exel__wrapper\":\"Zvitu_exel__wrapper__Sdnb6\",\"btn__container\":\"Zvitu_btn__container__juL-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"CreatePrices_title__container__29uC5\",\"title\":\"CreatePrices_title__1dkqU\",\"span\":\"CreatePrices_span__Ugq9y\",\"main\":\"CreatePrices_main__XqqQN\",\"main__container\":\"CreatePrices_main__container__1z7y_\",\"sum__container\":\"CreatePrices_sum__container__2wWMh\",\"left\":\"CreatePrices_left__1QxUN\",\"btn__container\":\"CreatePrices_btn__container__28kFB\"};","import React from \"react\";\r\nimport s from \"./Home.module.css\";\r\n\r\nconst Home = (props) => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\nconst _axios = axios.create({\r\n  baseURL: \"https://andriy-xuy.herokuapp.com/api/v1\",\r\n});\r\n\r\nexport default _axios;\r\n","import _axios from \"./_axios\";\r\n\r\nexport const loginRequest = (data) => {\r\n  return _axios.post(\"/login\", data);\r\n};\r\n\r\nexport const fetchSklad1 = (token) => {\r\n  return _axios.get(\"/sklad1\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredSklad1 = (from, to, search, token) => {\r\n  let baseUrl = \"/sklad1?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  if (from) {\r\n    baseUrl += `&from=${from}`;\r\n  }\r\n  if (to) {\r\n    baseUrl += `&to=${to}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createSklad1 = (sklad1, token) => {\r\n  return _axios.post(\"/sklad1\", sklad1, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchSklad1 = (sklad1, id, token) => {\r\n  return _axios.patch(`/sklad1/${id}`, sklad1, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteSklad1 = (id, token) => {\r\n  return _axios.delete(`/sklad1/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchWorkers = (token) => {\r\n  return _axios.get(\"/workers\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchWorker = (id, token) => {\r\n  return _axios.get(`/workers/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchWorkers = (search, token) => {\r\n  let baseUrl = \"/workers?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createWorker = (workers, token) => {\r\n  return _axios.post(\"/workers\", workers, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchWorker = (workers, token, id) => {\r\n  return _axios.patch(`/workers/${id}`, workers, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteWorker = (id, token) => {\r\n  return _axios.delete(`/workers/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchZpSklad1 = (token) => {\r\n  return _axios.get(\"/zp_sklad1\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchZpSklad2 = (token) => {\r\n  return _axios.get(\"/zp_sklad2\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchZpSklad3 = (token) => {\r\n  return _axios.get(\"/zp_sklad3\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchZpSklad4 = (token) => {\r\n  return _axios.get(\"/zp_sklad4\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchProdArticle = (token) => {\r\n  return _axios.get(\"/prod_article\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleProdArticle = (id, token) => {\r\n  return _axios.get(`/prod_article/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredProdArticle = (search, token) => {\r\n  let baseUrl = \"/prod_article?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createProdArticle = (prod, token) => {\r\n  return _axios.post(\"/prod_article\", prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchProdArticle = (id, token, prod) => {\r\n  return _axios.patch(`/prod_article/${id}`, prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProdArticle = (id, token) => {\r\n  return _axios.delete(`/prod_article/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchProdAsortument = (token) => {\r\n  return _axios.get(\"/prod_asortument\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleProdAsortument = (id, token) => {\r\n  return _axios.get(`/prod_asortument/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredProdAsortument = (search, token) => {\r\n  let baseUrl = \"/prod_asortument?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createProdAsortument = (prodAsortument, token) => {\r\n  return _axios.post(\"/prod_asortument\", prodAsortument, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchProdAsortument = (id, token, prod) => {\r\n  return _axios.patch(`/prod_asortument/${id}`, prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProdAsortument = (id, token) => {\r\n  return _axios.delete(`/prod_asortument/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchProdClass = (token) => {\r\n  return _axios.get(\"/prod_class\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleProdClass = (id, token) => {\r\n  return _axios.get(`/prod_class/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredProdClass = (search, token) => {\r\n  let baseUrl = \"/prod_class?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createProdClass = (prod, token) => {\r\n  return _axios.post(\"/prod_class\", prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchProdClass = (id, token, prod) => {\r\n  return _axios.patch(`/prod_class/${id}`, prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProdClass = (id, token) => {\r\n  return _axios.delete(`/prod_class/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchProdColor = (token) => {\r\n  return _axios.get(\"/prod_color\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleProdColor = (id, token) => {\r\n  return _axios.get(`/prod_color/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredProdColor = (search, token) => {\r\n  let baseUrl = \"/prod_color?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createProdColor = (prod, token) => {\r\n  return _axios.post(\"/prod_color\", prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchProdColor = (id, token, prod) => {\r\n  return _axios.patch(`/prod_color/${id}`, prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProdColor = (id, token) => {\r\n  return _axios.delete(`/prod_color/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchProdImage = (token) => {\r\n  return _axios.get(\"/prod_image\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleProdImage = (id, token) => {\r\n  return _axios.get(`/prod_image/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchFilteredProdImage = (search, token) => {\r\n  let baseUrl = \"/prod_image?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createProdImage = (prod, token) => {\r\n  return _axios.post(\"/prod_image\", prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchProdImage = (id, token, prod) => {\r\n  return _axios.patch(`/prod_image/${id}`, prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProdImage = (id, token) => {\r\n  return _axios.delete(`/prod_image/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchProdSezon = (token) => {\r\n  return _axios.get(\"/prod_season\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleProdSezon = (id, token) => {\r\n  return _axios.get(`/prod_season/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredProdSezon = (search, token) => {\r\n  let baseUrl = \"/prod_season?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createProdSezon = (prod, token) => {\r\n  return _axios.post(\"/prod_season\", prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchProdSezon = (id, token, prod) => {\r\n  return _axios.patch(`/prod_season/${id}`, prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProdSezon = (id, token) => {\r\n  return _axios.delete(`/prod_season/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchProdSize = (token) => {\r\n  return _axios.get(\"/prod_size\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleProdSize = (id, token) => {\r\n  return _axios.get(`/prod_size/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchFilteredProdSize = (search, token) => {\r\n  let baseUrl = \"/prod_size?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createProdSize = (prod, token) => {\r\n  return _axios.post(\"/prod_size\", prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchProdSize = (id, token, prod) => {\r\n  return _axios.patch(`/prod_size/${id}`, prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProdSize = (id, token) => {\r\n  return _axios.delete(`/prod_size/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchProdType = (token) => {\r\n  return _axios.get(\"/prod_type\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleProdType = (id, token) => {\r\n  return _axios.get(`/prod_type/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredProdType = (search, token) => {\r\n  let baseUrl = \"/prod_type?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createProdType = (prod, token) => {\r\n  return _axios.post(\"/prod_type\", prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchProdType = (id, token, prod) => {\r\n  return _axios.patch(`/prod_type/${id}`, prod, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProdType = (id, token) => {\r\n  return _axios.delete(`/prod_type/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchPrajaColor = (token) => {\r\n  return _axios.get(\"/priaga_color\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSinglePrajaColor = (id, token) => {\r\n  return _axios.get(`/priaga_color/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchPrajaColor = (search, token) => {\r\n  let baseUrl = \"/priaga_color?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createPrajaColor = (prajaColor, token) => {\r\n  return _axios.post(\"/priaga_color\", prajaColor, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchPrajaColor = (id, token, prajaColor) => {\r\n  return _axios.patch(`/priaga_color/${id}`, prajaColor, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deletePrajaColor = (id, token) => {\r\n  return _axios.delete(`/priaga_color/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchPrajaRozhid = (token) => {\r\n  return _axios.get(\"/priaga_dilanka_rozxody\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSinglePrajaRozhid = (id, token) => {\r\n  return _axios.get(`/priaga_dilanka_rozxody/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchPrajaRozhid = (search, token) => {\r\n  let baseUrl = \"/priaga_dilanka_rozxody?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createPrajaRozhid = (prajaRozhid, token) => {\r\n  return _axios.post(\"/priaga_dilanka_rozxody\", prajaRozhid, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchPrajaRozhid = (id, token, prajaRozhid) => {\r\n  return _axios.patch(`/priaga_dilanka_rozxody/${id}`, prajaRozhid, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deletePrajaRozhid = (id, token) => {\r\n  return _axios.delete(`/priaga_dilanka_rozxody/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchPrajaSurovuna = (token) => {\r\n  return _axios.get(\"/priaga_surovuna\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSinglePrajaSurovuna = (id, token) => {\r\n  return _axios.get(`/priaga_surovuna/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSearchPrajaSurovuna = (search, token) => {\r\n  let baseUrl = \"/priaga_surovuna?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createPrajaSurovuna = (prajaSurovuna, token) => {\r\n  return _axios.post(\"/priaga_surovuna\", prajaSurovuna, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchPrajaSurovuna = (id, token, prajaSurovuna) => {\r\n  return _axios.patch(`/priaga_surovuna/${id}`, prajaSurovuna, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deletePrajaSurovuna = (id, token) => {\r\n  return _axios.delete(`/priaga_surovuna/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchPrajaTovtshina = (token) => {\r\n  return _axios.get(\"/priaga_tovtshina\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSinglePrajaTovtshina = (id, token) => {\r\n  return _axios.get(`/priaga_tovtshina/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchPrajaTovtshina = (search, token) => {\r\n  let baseUrl = \"/priaga_tovtshina?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createPrajaTovtshina = (prajaTovtshina, token) => {\r\n  return _axios.post(\"/priaga_tovtshina\", prajaTovtshina, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchPrajaTovtshina = (id, token, prajaTovtshina) => {\r\n  return _axios.patch(`/priaga_tovtshina/${id}`, prajaTovtshina, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deletePrajaTovtshina = (id, token) => {\r\n  return _axios.delete(`/priaga_tovtshina/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchPrajaType = (token) => {\r\n  return _axios.get(\"/priaga_type\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSinglePrajaType = (id, token) => {\r\n  return _axios.get(`/priaga_type/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchPrajaType = (search, token) => {\r\n  let baseUrl = \"/priaga_type?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createPrajaType = (prajaType, token) => {\r\n  return _axios.post(\"/priaga_type\", prajaType, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchPrajaType = (id, token, prajaType) => {\r\n  return _axios.patch(`/priaga_type/${id}`, prajaType, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deletePrajaType = (id, token) => {\r\n  return _axios.delete(`/priaga_type/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchPrajaVendor = (token) => {\r\n  return _axios.get(\"/priaga_vendor\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSinglePrajaVendor = (id, token) => {\r\n  return _axios.get(`/priaga_vendor/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSearchPrajaVendor = (search, token) => {\r\n  let baseUrl = \"/priaga_vendor?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createPrajaVendor = (prajaVendor, token) => {\r\n  return _axios.post(\"/priaga_vendor\", prajaVendor, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchPrajaVendor = (id, token, prajaVendor) => {\r\n  return _axios.patch(`/priaga_vendor/${id}`, prajaVendor, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deletePrajaVendor = (id, token) => {\r\n  return _axios.delete(`/priaga_vendor/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMachine = (token) => {\r\n  return _axios.get(\"/machines\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleMachine = (id, token) => {\r\n  return _axios.get(`/machines/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchMachine = (search, token) => {\r\n  let baseUrl = \"/machines?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMachine = (machines, token) => {\r\n  return _axios.post(\"/machines\", machines, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMachine = (id, machines, token) => {\r\n  return _axios.patch(`/machines/${id}`, machines, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMachine = (id, token) => {\r\n  return _axios.delete(`/machines/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMachineModel = (token) => {\r\n  return _axios.get(\"/machines_model\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleMachineModel = (id, token) => {\r\n  return _axios.get(`/machines_model/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchMachineModel = (search, token) => {\r\n  let baseUrl = \"/machines_model?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMachineModel = (machineModel, token) => {\r\n  return _axios.post(\"/machines_model\", machineModel, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMachineModel = (id, token, machineModel) => {\r\n  return _axios.patch(`/machines_model/${id}`, machineModel, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMachineModel = (id, token) => {\r\n  return _axios.delete(`/machines_model/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMachineGolku = (token) => {\r\n  return _axios.get(\"/machines_golku\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleMachineGolku = (id, token) => {\r\n  return _axios.get(`/machines_golku/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchMachineGolku = (search, token) => {\r\n  let baseUrl = \"/machines_golku?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMachineGolku = (machineGolku, token) => {\r\n  return _axios.post(\"/machines_golku\", machineGolku, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMachineGolku = (id, token, machineGolku) => {\r\n  return _axios.patch(`/machines_golku/${id}`, machineGolku, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMachineGolku = (id, token) => {\r\n  return _axios.delete(`/machines_golku/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMachineDuymu = (token) => {\r\n  return _axios.get(\"/machines_duymu\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleMachineDuymu = (id, token) => {\r\n  return _axios.get(`/machines_duymu/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchMachineDuymu = (search, token) => {\r\n  let baseUrl = \"/machines_duymu?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMachineDuymu = (machineDuymu, token) => {\r\n  return _axios.post(\"/machines_duymu\", machineDuymu, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMachineDuymu = (id, token, machineDuymu) => {\r\n  return _axios.patch(`/machines_duymu/${id}`, machineDuymu, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMachineDuymu = (id, token) => {\r\n  return _axios.delete(`/machines_duymu/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMachineVyazalni = (token) => {\r\n  return _axios.get(\"/machines_vyazalni\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleMachineVyazalni = (id, token) => {\r\n  return _axios.get(`/machines_vyazalni/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchMachineVyazalni = (search, token) => {\r\n  let baseUrl = \"/machines_vyazalni?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMachineVyazalni = (machineVyazalni, token) => {\r\n  return _axios.post(\"/machines_vyazalni\", machineVyazalni, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMachineVyazalni = (id, token, machineVyazalni) => {\r\n  return _axios.patch(`/machines_vyazalni/${id}`, machineVyazalni, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMachineVyazalni = (id, token) => {\r\n  return _axios.delete(`/machines_vyazalni/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchRoztsinka = (token) => {\r\n  return _axios.get(\"/roztsinka\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleRoztsinka = (id, token) => {\r\n  return _axios.get(`/roztsinka/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredRoztsinka = (search, token) => {\r\n  let baseUrl = \"/roztsinka?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createRoztsinka = (roztsinka, token) => {\r\n  return _axios.post(\"/roztsinka\", roztsinka, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchRoztsinka = (id, token, roztsinka) => {\r\n  return _axios.patch(`/roztsinka/${id}`, roztsinka, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteRoztsinka = (id, token) => {\r\n  return _axios.delete(`/roztsinka/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMaterialVendor = (token) => {\r\n  return _axios.get(\"/materials_vendor\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleMaterialVendor = (id, token) => {\r\n  return _axios.get(`/materials_vendor/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchMaterialVendor = (search, token) => {\r\n  let baseUrl = \"/materials_vendor?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMaterialVendor = (materialVendor, token) => {\r\n  return _axios.post(\"/materials_vendor\", materialVendor, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMaterialVendor = (id, token, materialVendor) => {\r\n  return _axios.patch(`/materials_vendor/${id}`, materialVendor, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMaterialVendor = (id, token) => {\r\n  return _axios.delete(`/materials_vendor/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMaterialRozhid = (token) => {\r\n  return _axios.get(\"/materials_dilanka_rozxody\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleMaterialRozhid = (id, token) => {\r\n  return _axios.get(`/materials_dilanka_rozxody/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchMaterialRozhid = (search, token) => {\r\n  let baseUrl = \"/materials_dilanka_rozxody?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMaterialRozhid = (materialRozhid, token) => {\r\n  return _axios.post(\"/materials_dilanka_rozxody\", materialRozhid, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMaterialRozhid = (id, token, materialRozhid) => {\r\n  return _axios.patch(`/materials_dilanka_rozxody/${id}`, materialRozhid, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMaterialRozhid = (id, token) => {\r\n  return _axios.delete(`/materials_dilanka_rozxody/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchMaterialType = (token) => {\r\n  return _axios.get(\"/materials_type\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleMaterialType = (id, token) => {\r\n  return _axios.get(`/materials_type/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSearchMaterialType = (search, token) => {\r\n  let baseUrl = \"/materials_type?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMaterialType = (materialType, token) => {\r\n  return _axios.post(\"/materials_type\", materialType, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMaterialType = (id, token, materialType) => {\r\n  return _axios.patch(`/materials_type/${id}`, materialType, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMaterialType = (id, token) => {\r\n  return _axios.delete(`/materials_type/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMaterialParams = (token) => {\r\n  return _axios.get(\"/materials_params\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleMaterialParams = (id, token) => {\r\n  return _axios.get(`/materials_params/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSearchMaterialParams = (search, token) => {\r\n  let baseUrl = \"/materials_params?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMaterialParams = (materialParams, token) => {\r\n  return _axios.post(\"/materials_params\", materialParams, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMaterialParams = (id, token, materialParams) => {\r\n  return _axios.patch(`/materials_params/${id}`, materialParams, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMaterialParams = (id, token) => {\r\n  return _axios.delete(`/materials_params/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchMaterialParamsValue = (token) => {\r\n  return _axios.get(\"/materials_params_value\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleMaterialParamsValue = (id, token) => {\r\n  return _axios.get(`/materials_params_value/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSearchMaterialParamsValue = (search, token) => {\r\n  let baseUrl = \"/materials_params_value?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createMaterialParamsValue = (materialParamsValue, token) => {\r\n  return _axios.post(\"/materials_params_value\", materialParamsValue, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchMaterialParamsValue = (id, token, materialParamsValue) => {\r\n  return _axios.patch(`/materials_params_value/${id}`, materialParamsValue, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMaterialParamsValue = (id, token) => {\r\n  return _axios.delete(`/materials_params_value/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchOperations = (token) => {\r\n  return _axios.get(\"/operations\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleOperations = (id, token) => {\r\n  return _axios.get(`/operations/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchOperations = (search, token) => {\r\n  let baseUrl = \"/operations?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Baer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createOperations = (operations, token) => {\r\n  return _axios.post(\"/operations\", operations, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchOperations = (id, token, operations) => {\r\n  return _axios.patch(`/operations/${id}`, operations, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteOperations = (id, token) => {\r\n  return _axios.delete(`/operations/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchZvitu = (token) => {\r\n  return _axios.get(\"/zvitu\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSingleZvitu = (id, token) => {\r\n  return _axios.get(`/zvitu/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredZvitu = (from, to, search, token) => {\r\n  let baseUrl = \"/zvitu?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  if (from) {\r\n    baseUrl += `&from=${from}`;\r\n  }\r\n  if (to) {\r\n    baseUrl += `&to=${to}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createZvitu = (zvitu, token) => {\r\n  return _axios.post(\"/zvitu\", zvitu, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchZvitu = (id, token, zvitu) => {\r\n  return _axios.patch(`/zvitu/${id}`, zvitu, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteZvitu = (id, token) => {\r\n  return _axios.delete(`/zvitu/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchZvituRozxid = (token) => {\r\n  return _axios.get(\"/zvitu_rozxid\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchSingleZvituRozxid = (id, token) => {\r\n  return _axios.get(`/zvitu_rozxid/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchFilteredZvituRozxid = (from, to, search, token) => {\r\n  let baseUrl = \"/zvitu_rozxid?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  if (from) {\r\n    baseUrl += `&from=${from}`;\r\n  }\r\n  if (to) {\r\n    baseUrl += `&to=${to}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createZvituRozxid = (zvituRozxid, token) => {\r\n  return _axios.post(\"/zvitu_rozxid\", zvituRozxid, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const patchZvituRozxid = (id, token, zvituRozxid) => {\r\n  return _axios.patch(`/zvitu_rozxid/${id}`, zvituRozxid, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteZvituRozxid = (id, token) => {\r\n  return _axios.delete(`/zvitu_rozxid/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchZvituZalushok = (token) => {\r\n  return _axios.get(\"/zvitu_zalushok\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\nexport const fetchFilteredZvituZalushok = (from, to, search, token) => {\r\n  let baseUrl = \"/zvitu_zalushok?\";\r\n  if (search) {\r\n    baseUrl += `search=${search}`;\r\n  }\r\n  if (from) {\r\n    baseUrl += `&from=${from}`;\r\n  }\r\n  if (to) {\r\n    baseUrl += `&to=${to}`;\r\n  }\r\n  return _axios.get(baseUrl, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Button.module.css\";\r\n\r\nconst Button = ({ title, onClick, ...rest }) => {\r\n  return (\r\n    <div className={s.btn}>\r\n      <button className={s.form__submit__button} {...rest} {...{ onClick }}>\r\n        {!!title && <span>{title}</span>}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./Login.module.css\";\r\nimport { loginAction } from \"../../store/actions/profileActions\";\r\nimport Button from \"../../misc/Button/Button\";\r\n\r\nconst Login = ({\r\n  values,\r\n  touched,\r\n  errors,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n}) => {\r\n  return (\r\n    <div className={s.main__container}>\r\n      <div className={s.header__title}>Логін</div>\r\n      <div className={s.login}>\r\n        <div className={s.login__container}>\r\n          <label className={s.label}>логін</label>\r\n          <input\r\n            className={s.input}\r\n            placeholder=\"caster\"\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            name=\"email\"\r\n            onBlur={handleBlur}\r\n            у\r\n          />\r\n          <label className={s.label}>пароь</label>\r\n          <input\r\n            placeholder=\"123123123\"\r\n            type=\"password\"\r\n            className={s.input}\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n          />\r\n          <div className={s.btn}>\r\n            <Button title=\"Увійти\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { login, history } }) => {\r\n    const isSuccess = await login(values);\r\n    if (isSuccess) {\r\n      history.push(\"/sklad_1\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n  },\r\n})(Login);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { login: (data) => dispatch(loginAction(data)) };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n// export default Login;\r\n","import { loginRequest } from \"../api/api\";\r\nimport { LOGOUT, SET_PROFILE } from \"./actionTypes\";\r\n\r\nexport const loginAction = (data) => {\r\n  return async (dispatch) => {\r\n    const response = await loginRequest(data);\r\n    const { token } = response.data;\r\n    if (response.status === 200) {\r\n      document.cookie = `token=${token} `;\r\n      dispatch({\r\n        type: SET_PROFILE,\r\n        token: response.data.token,\r\n        // user: { ...response.data.user }\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_PROFILE,\r\n        token: \"\",\r\n        // user: {}\r\n      });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const logoutAction = () => {\r\n  document.cookie = \"token=''; expires=Thu, 18 Dec 2013 12:00:00 UTC\";\r\n  document.cookie = \"aToken=''; expires=Thu, 18 Dec 2013 12:00:00 UTC\";\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n};\r\n","export const SET_PROFILE = \" SET_PROFILE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const SET_SKLAD1 = \" SET_SKLAD1\";\r\nexport const SET_FILTERED_SKLAD1 = \"SET_FILTERED_SKLAD1\";\r\nexport const ADD_SKLAD1 = \"ADD_SKLAD1\";\r\nexport const DELETE_SKLAD1 = \"DELETE_SKLAD1\";\r\nexport const SET_WORKERS = \"SET_WORKERS\";\r\nexport const SET_SINGLE_WORKER = \"SET_SINGLE_WORKER\";\r\nexport const SET_FILTERED_WORKERS = \"SET_FILTERED_WORKERS\";\r\nexport const ADD_WORKER = \"ADD_WORKER\";\r\nexport const DELETE_WORKER = \"DELETE_WORKER\";\r\nexport const SET_ZP_SKLAD1 = \"SET_ZP_SKLAD1\";\r\nexport const SET_FILTERED_ZP_SKLAD1 = \"SET_FILTERED_ZP_SKLAD1\";\r\nexport const ADD_ZP_SKLAD1 = \"ADD_ZP_SKLAD1\";\r\nexport const DELETE_ZP_SKLAD1 = \"DELETE_ZP_SKLAD1\";\r\nexport const SET_ZP_SKLAD2 = \"SET_ZP_SKLAD2\";\r\nexport const SET_FILTERED_ZP_SKLAD2 = \"SET_FILTERED_ZP_SKLAD2\";\r\nexport const ADD_ZP_SKLAD2 = \"ADD_ZP_SKLAD2\";\r\nexport const DELETE_ZP_SKLAD2 = \"DELETE_ZP_SKLAD2\";\r\nexport const SET_ZP_SKLAD3 = \"SET_ZP_SKLAD3\";\r\nexport const SET_FILTERED_ZP_SKLAD3 = \"SET_FILTERED_ZP_SKLAD3\";\r\nexport const ADD_ZP_SKLAD3 = \"ADD_ZP_SKLAD3\";\r\nexport const DELETE_ZP_SKLAD3 = \"DELETE_ZP_SKLAD3\";\r\nexport const SET_ZP_SKLAD4 = \"SET_ZP_SKLAD4\";\r\nexport const SET_FILTERED_ZP_SKLAD4 = \"SET_FILTERED_ZP_SKLAD4\";\r\nexport const ADD_ZP_SKLAD4 = \"ADD_ZP_SKLAD4\";\r\nexport const DELETE_ZP_SKLAD4 = \"DELETE_ZP_SKLAD4\";\r\nexport const SET_PROD_ARTICLE = \"SET_PROD_ARTICLE\";\r\nexport const SET_SINGLE_PROD_ARTICLE = \"SET_SINGLE_PROD_ARTICLE\";\r\nexport const SET_FILTERED_PROD_ARTICLE = \"SET_FILTERED_PROD_ARTICLE\";\r\nexport const ADD_PROD_ARTICLE = \"ADD_PROD_ARTICLE\";\r\nexport const DELETE_PROD_ARTICLE = \"DELETE_PROD_ARTICLE\";\r\nexport const SET_PROD_ASORTUMENT = \"SET_PROD_ASORTUMENT\";\r\nexport const SET_FILTERED_PROD_ASORTUMENT = \"SET_FILTERED_PROD_ASORTUMENT\";\r\nexport const ADD_PROD_ASORTUMENT = \"ADD_PROD_ASORTUMENT\";\r\nexport const DELETE_PROD_ASORTUMENT = \"DELETE_PROD_ASORTUMENT\";\r\nexport const SET_PROD_CLASS = \"SET_PROD_CLASS\";\r\nexport const SET_FILTERED_PROD_CLASS = \"SET_FILTERED_PROD_CLASS\";\r\nexport const ADD_PROD_CLASS = \"ADD_PROD_CLASS\";\r\nexport const DELETE_PROD_CLASS = \"DELETE_PROD_CLASS\";\r\nexport const SET_PROD_SEZON = \"SET_PROD_SEZON\";\r\nexport const SET_FILTERED_PROD_SEZON = \"SET_FILTERED_PROD_SEZON\";\r\nexport const ADD_PROD_SEZON = \"ADD_PROD_SEZON\";\r\nexport const DELETE_PROD_SEZON = \"DELETE_PROD_SEZON\";\r\nexport const SET_PROD_SIZE = \"SET_PROD_SIZE\";\r\nexport const SET_FILTERED_PROD_SIZE = \"SET_FILTERED_PROD_SIZE\";\r\nexport const ADD_PROD_SIZE = \"ADD_PROD_SIZE\";\r\nexport const DELETE_PROD_SIZE = \"DELETE_PROD_SIZE\";\r\nexport const SET_PROD_TYPE = \"SET_PROD_TYPE\";\r\nexport const SET_FILTERED_PROD_TYPE = \"SET_FILTERED_PROD_TYPE\";\r\nexport const ADD_PROD_TYPE = \"ADD_PROD_TYPE\";\r\nexport const DELETE_PROD_TYPE = \"DELETE_PROD_TYPE\";\r\nexport const SET_PROD_COLOR = \"SET_PROD_COLOR\";\r\nexport const SET_FILTERED_PROD_COLOR = \"SET_FILTERED_PROD_COLOR\";\r\nexport const ADD_PROD_COLOR = \"ADD_PROD_COLOR\";\r\nexport const DELETE_PROD_COLOR = \"DELETE_PROD_COLOR\";\r\nexport const SET_PROD_IMAGE = \"SET_PROD_IMAGE\";\r\nexport const SET_FILTERED_PROD_IMAGE = \"SET_FILTERED_PROD_IMAGE\";\r\nexport const ADD_PROD_IMAGE = \"ADD_PROD_IMAGE\";\r\nexport const DELETE_PROD_IMAGE = \"DELETE_PROD_IMAGE\";\r\nexport const SET_PRAJA_SUROVUNA = \"SET_PRAJA_SUROVUNA\";\r\nexport const SET_FILTER_PRAJA_SUROVUNA = \"SET_FILTER_PRAJA_SUROVUNA\";\r\nexport const ADD_PRAJA_SUROVUNA = \"ADD_PRAJA_SUROVUNA\";\r\nexport const DELETE_PRAJA_SUROVUNA = \"DELETE_PRAJA_SUROVUNA\";\r\nexport const SET_PRAJA_TYPE = \"SET_PRAJA_TYPE\";\r\nexport const SET_FILTER_PRAJA_TYPE = \"SET_FILTER_PRAJA_TYPE\";\r\nexport const ADD_PRAJA_TYPE = \"ADD_PRAJA_TYPE\";\r\nexport const DELETE_PRAJA_TYPE = \"DELETE_PRAJA_TYPE\";\r\nexport const SET_PRAJA_TOVTSHINA = \"SET_PRAJA_TOVTSHINA\";\r\nexport const SET_FILTER_PRAJA_TOVTSHINA = \"SET_FILTER_PRAJA_TOVTSHINA\";\r\nexport const ADD_PRAJA_TOVTSHINA = \"ADD_PRAJA_TOVTSHINA\";\r\nexport const DELETE_PRAJA_TOVTSHINA = \"DELETE_PRAJA_TOVTSHINA\";\r\nexport const SET_PRAJA_VENDOR = \"SET_PRAJA_VENDOR\";\r\nexport const SET_FILTER_PRAJA_VENDOR = \"SET_FILTER_PRAJA_VENDOR\";\r\nexport const ADD_PRAJA_VENDOR = \"ADD_PRAJA_VENDOR\";\r\nexport const DELETE_PRAJA_VENDOR = \"DELETE_PRAJA_VENDOR\";\r\nexport const SET_PRAJA_ROZHID = \"SET_PRAJA_ROZHID\";\r\nexport const SET_FILTER_PRAJA_ROZHID = \"SET_FILTER_PRAJA_ROZHID\";\r\nexport const ADD_PRAJA_ROZHID = \"ADD_PRAJA_ROZHID\";\r\nexport const DELETE_PRAJA_ROZHID = \"DELETE_PRAJA_ROZHID\";\r\nexport const SET_PRAJA_COLOR = \"SET_PRAJA_COLOR\";\r\nexport const SET_FILTER_PRAJA_COLOR = \"SET_FILTER_PRAJA_COLOR\";\r\nexport const ADD_PRAJA_COLOR = \"ADD_PRAJA_COLOR\";\r\nexport const DELETE_PRAJA_COLOR = \"DELETE_PRAJA_COLOR\";\r\nexport const SET_MACHINE = \"SET_MACHINE\";\r\nexport const SET_SINGLE_MACHINE = \"SET_SINGLE_MACHINE\";\r\nexport const SET_FILTER_MACHINE = \"SET_FILTER_MACHINE\";\r\nexport const ADD_MACHINE = \"ADD_MACHINE\";\r\nexport const DELETE_MACHINE = \"DELETE_MACHINE\";\r\nexport const SET_MACHINE_MODEL = \"SET_MACHINE_MODEL\";\r\nexport const SET_FILTER_MACHINE_MODEL = \"SET_FILTER_MACHINE_MODEL\";\r\nexport const ADD_MACHINE_MODEL = \"ADD_MACHINE_MODEL\";\r\nexport const DELETE_MACHINE_MODEL = \"DELETE_MACHINE_MODEL\";\r\nexport const SET_MACHINE_GOLKU = \"SET_MACHINE_GOLKU\";\r\nexport const SET_FILTER_MACHINE_GOLKU = \"SET_FILTER_MACHINE_GOLKU\";\r\nexport const ADD_MACHINE_GOLKU = \"ADD_MACHINE_GOLKU\";\r\nexport const DELETE_MACHINE_GOLKU = \"DELETE_MACHINE_GOLKU\";\r\nexport const SET_MACHINE_DYUMU = \"SET_MACHINE_DYUMU\";\r\nexport const SET_FILTER_MACHINE_DYUMU = \"SET_FILTER_MACHINE_DYUMU\";\r\nexport const ADD_MACHINE_DYUMU = \"ADD_MACHINE_DYUMU\";\r\nexport const DELETE_MACHINE_DYUMU = \"DELETE_MACHINE_DYUMU\";\r\nexport const SET_MACHINE_VYAZALNI = \"SET_MACHINE_VYAZALNI\";\r\nexport const SET_FILTER_MACHINE_VYAZALNI = \"SET_FILTER_MACHINE_VYAZALNI\";\r\nexport const ADD_MACHINE_VYAZALNI = \"ADD_MACHINE_VYAZALNI\";\r\nexport const DELETE_MACHINE_VYAZALNI = \"DELETE_MACHINE_VYAZALNI\";\r\nexport const SET_ROZTSINKA = \"SET_ROZTSINKA\";\r\nexport const SET_SINGLE_ROZTSINKA = \"SET_SINGLE_ROZTSINKA\";\r\nexport const SET_FILTER_ROZTSINKA = \"SET_FILTER_ROZTSINKA\";\r\nexport const ADD_ROZTSINKA = \"ADD_ROZTSINKA\";\r\nexport const DELETE_ROZTSINKA = \"DELETE_ROZTSINKA\";\r\nexport const SET_MATERIALS_VENDOR = \"SET_MATERIALS_VENDOR\";\r\nexport const SET_FILTER_MATERIALS_VENDOR = \"SET_FILTER_MATERIALS_VENDOR\";\r\nexport const ADD_MATERIALS_VENDOR = \"ADD_MATERIALS_VENDOR\";\r\nexport const DELETE_MATERIALS_VENDOR = \"DELETE_MATERIALS_VENDOR\";\r\nexport const SET_MATERIALS_TYPE = \"SET_MATERIALS_TYPE\";\r\nexport const SET_FILTER_MATERIALS_TYPE = \"SET_FILTER_MATERIALS_TYPE\";\r\nexport const ADD_MATERIALS_TYPE = \"ADD_MATERIALS_TYPE\";\r\nexport const DELETE_MATERIALS_TYPE = \"DELETE_MATERIALS_TYPE\";\r\nexport const SET_MATERIALS_ROZHID = \"SET_MATERIALS_ROZHID\";\r\nexport const SET_FILTER_MATERIALS_ROZHID = \"SET_FILTER_MATERIALS_ROZHID\";\r\nexport const ADD_MATERIALS_ROZHID = \"ADD_MATERIALS_ROZHID\";\r\nexport const DELETE_MATERIALS_ROZHID = \"DELETE_MATERIALS_ROZHID\";\r\nexport const SET_MATERIALS_PARAMS = \"SET_MATERIALS_PARAMS\";\r\nexport const SET_FILTER_MATERIALS_PARAMS = \"SET_FILTER_MATERIALS_PARAMS\";\r\nexport const ADD_MATERIALS_PARAMS = \"ADD_MATERIALS_PARAMS\";\r\nexport const DELETE_MATERIALS_PARAMS = \"DELETE_MATERIALS_PARAMS\";\r\nexport const SET_MATERIALS_PARAMS_VALUE = \"SET_MATERIALS_PARAMS_VALUE\";\r\nexport const SET_FILTER_MATERIALS_PARAMS_VALUE =\r\n  \"SET_FILTER_MATERIALS_PARAMS_VALUE\";\r\nexport const ADD_MATERIALS_PARAMS_VALUE = \"ADD_MATERIALS_PARAMS_VALUE\";\r\nexport const DELETE_MATERIALS_PARAMS_VALUE = \"DELETE_MATERIALS_PARAMS_VALUE\";\r\nexport const SET_OPERATIONS = \"SET_OPERATIONS\";\r\nexport const SET_FILTERED_OPERATIONS = \"SET_FILTERED_OPERATIONS\";\r\nexport const ADD_OPERATIONS = \"ADD_OPERATIONS\";\r\nexport const DELETE_OPERATIONS = \"DELETE_OPERATIONS\";\r\nexport const SET_ZVITU = \"SET_ZVITU\";\r\nexport const SET_SINGLE_ZVITU = \"SET_SINGLE_ZVITU\";\r\nexport const ADD_ZVITU = \"ADD_ZVITU\";\r\nexport const SET_FILTERED_ZVITU = \"SET_FILTERED_ZVITU\";\r\nexport const DELETE_ZVITU = \"DELETE_ZVITU\";\r\nexport const SET_ZVITU_ROZXID = \"SET_ZVITU_ROZXID\";\r\nexport const SET_SINGLE_ZVITU_ROZXID = \"SET_SINGLE_ZVITU_ROZXID\";\r\nexport const ADD_ZVITU_ROZXID = \"ADD_ZVITU_ROZXID\";\r\nexport const SET_FILTERED_ZVITU_ROZXID = \"SET_FILTERED_ZVITU_ROZXID\";\r\nexport const DELETE_ZVITU_ROZXID = \"DELETE_ZVITU_ROZXID\";\r\nexport const SET_ZVITU_ZALUSHOK = \"SET_ZVITU_ZALUSHOK\";\r\nexport const SET_FILTERED_ZVITU_ZALUSHOK = \"SET_FILTERED_ZVITU_ZALUSHOK\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logoutAction } from \"../../store/actions/profileActions\";\r\nimport Button from \"../Button/Button\";\r\n// import s from './Logout.module.css';\r\n\r\nconst LogoutComponent = ({ logout }) => {\r\n  const h = useHistory();\r\n  const Logout = () => {\r\n    logout();\r\n    h.push(\"/login\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Button title=\"Logout\" onClick={Logout} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(logoutAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutComponent);\r\n","import React, { useState } from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport LogoutComponent from \"./LogoutComponent\";\r\n\r\nconst Header = ({ history: h }) => {\r\n  const { pathname } = h.location;\r\n\r\n  return (\r\n    <>\r\n      {pathname.startsWith(\"/login\") ? null : (\r\n        <div className={s.navbar}>\r\n          <div className={s.dropdown}>\r\n            <button className={s.dropbtn}>Склади</button>\r\n            <div className={s.dropdown_content}>\r\n              <Link to=\"/create-pruhid\">Створити прихід</Link>\r\n              <Link to=\"/sklad_1\">Склад 1</Link>\r\n            </div>\r\n          </div>\r\n          <div className={s.dropdown}>\r\n            <button className={s.dropbtn}>Зарплата</button>\r\n            <div className={s.dropdown_content}>\r\n              <Link to=\"/zp-sklad1\">Склад 1</Link>\r\n              <Link to=\"/zp-sklad2\">Склад 2</Link>\r\n              <Link to=\"/zp-sklad3\">Склад 3</Link>\r\n              <Link to=\"/zp-sklad4\">Склад 4</Link>\r\n            </div>\r\n          </div>\r\n          <div className={s.dropdown}>\r\n            <Link to=\"/zvitu\">Звіти</Link>\r\n          </div>\r\n          <div className={s.dropdown}>\r\n            <button className={s.dropbtn}>Довідник</button>\r\n            <div className={s.dropdown_content}>\r\n              <Link to=\"/workers\">Працівники</Link>\r\n              <Link to=\"/productcia\">Продукція</Link>\r\n              <Link to=\"/prices\">Розцінки</Link>\r\n              <Link to=\"/equipment\">Обладннення</Link>\r\n              <Link to=\"/praja\">Пряжа</Link>\r\n              <Link to=\"/pak_materials\">Пакувальні матеріали</Link>\r\n              <Link to=\"/operations\">Операції</Link>\r\n            </div>\r\n          </div>\r\n          <div className={s.logout}>\r\n            <LogoutComponent />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst Profile = (props) => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nimport s from \"./Input.module.css\";\r\n\r\nconst Input = ({\r\n  type = \"text\",\r\n  placeholder,\r\n  label,\r\n  value,\r\n  onChange,\r\n  isTextarea,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className={s.input__container}>\r\n      {!!label && <span className={s.label}>{label}</span>}\r\n      {/* <label className={s.label}>123</label> */}\r\n      <input\r\n        className={s.input}\r\n        {...{ type }}\r\n        {...{ value }}\r\n        {...{ onChange }}\r\n        {...{ placeholder }}\r\n        {...rest}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","export const getToken = () => {\r\n  return document.cookie.includes(\"token\")\r\n    ? document.cookie\r\n        .split(\"; \")\r\n        .filter((value) => value.startsWith(\"token\"))[0]\r\n        .split(\"=\")[1]\r\n    : null;\r\n};\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./CreatePruhid.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { createSklad1Action } from \"../../store/actions/skladActions\";\r\nimport { withFormik } from \"formik\";\r\n\r\nconst CreatePruhid = ({\r\n  CreatePruhid,\r\n  values,\r\n  touched,\r\n  errors,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n}) => {\r\n  const options = [\r\n    { value: \"sklad1\", label: \"Склад 1\" },\r\n    { value: \"sklad2\", label: \"Склад 2\" },\r\n    { value: \"sklad3\", label: \"Склад 3\" },\r\n    { value: \"sklad4\", label: \"Склад 4\" },\r\n  ];\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Створити прихід</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            type=\"date\"\r\n            label=\"Дата\"\r\n            value={values.date_prixod}\r\n            name=\"date_prixod\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"В'язальниця\"\r\n              value={values.vyazalId}\r\n              name=\"vyazalId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Майстр\"\r\n              value={values.masterId}\r\n              name=\"masterId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Машина\"\r\n              value={values.machineId}\r\n              name=\"machineId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 1\"\r\n              value={values.gatynok1}\r\n              name=\"gatynok1\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 2\"\r\n              value={values.gatynok2}\r\n              name=\"gatynok2\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={s.right}>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 3\"\r\n              value={values.gatynok3}\r\n              name=\"gatynok3\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Асортимент\"\r\n              value={values.asortumentId}\r\n              name=\"asortumentId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Зображення\"\r\n              value={values.imageId}\r\n              name=\"imageId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Колір\"\r\n              value={values.colorId}\r\n              name=\"colorId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            {/* <Select options={options} /> */}\r\n            <Input\r\n              label=\"Розмір\"\r\n              value={values.sizeId}\r\n              name=\"sizeId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            {/* <Select options={options} /> */}\r\n            <Input\r\n              label=\"Клас\"\r\n              value={values.classId}\r\n              name=\"classId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            {/* <Select options={options} /> */}\r\n            <Input\r\n              label=\"Артикуль\"\r\n              value={values.articleId}\r\n              name=\"articleId\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.sum__container}>\r\n        <span className={s.sum}>Кількість гатунку разом:</span>\r\n      </div>\r\n      <Button title=\"Створити\" onClick={handleSubmit} />\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    vyazalId: null,\r\n    masterId: null,\r\n    machineId: null,\r\n    gatynok1: \"\",\r\n    gatynok2: \"\",\r\n    gatynok3: \"\",\r\n    typeId: null,\r\n    asortumentId: null,\r\n    imageId: null,\r\n    colorId: null,\r\n    sizeId: null,\r\n    classId: null,\r\n    articleId: null,\r\n    date_prixod: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { CreatePruhid }, resetForm }) => {\r\n    const isSuccess = await CreatePruhid(values);\r\n    if (isSuccess) {\r\n      alert(\"Success\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({\r\n      vyazalId: \"\",\r\n      masterId: \"\",\r\n      machineId: \"\",\r\n      gatynok1: \"\",\r\n      gatynok2: \"\",\r\n      gatynok3: \"\",\r\n      typeId: \"\",\r\n      asortumentId: \"\",\r\n      imageId: \"\",\r\n      colorId: \"\",\r\n      sizeId: \"\",\r\n      classId: \"\",\r\n      articleId: \"\",\r\n      date_prixod: \"\",\r\n    });\r\n  },\r\n})(CreatePruhid);\r\nconst mapStateToProps = (props) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { CreatePruhid: (sklad1) => dispatch(createSklad1Action(sklad1)) };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createSklad1,\r\n  deleteSklad1,\r\n  fetchFilteredSklad1,\r\n  fetchSklad1,\r\n  patchSklad1,\r\n} from \"../api/api\";\r\nimport {\r\n  SET_SKLAD1,\r\n  SET_FILTERED_SKLAD1,\r\n  ADD_SKLAD1,\r\n  DELETE_SKLAD1,\r\n} from \"./actionTypes\";\r\n\r\nexport const getSklad1Action = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSklad1(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_SKLAD1, sklad1: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterSklad1Action = ({ sort, from, to, search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken()\r\n    const response = await fetchFilteredSklad1(sort, from, to, search, token);\r\n    if (response?.data?.history) {\r\n      dispatch({\r\n        type: SET_FILTERED_SKLAD1,\r\n        filtered: response.data.history,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_SKLAD1,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createSklad1Action = (sklad1) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createSklad1(sklad1, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_SKLAD1, token });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editSklad1ction = (sklad1, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchSklad1(sklad1, token, id);\r\n    dispatch({ type: ADD_SKLAD1, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteSklad1Action = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteSklad1(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_SKLAD1, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  fetchSearchWorkers,\r\n  fetchWorkers,\r\n  createWorker,\r\n  patchWorker,\r\n  deleteWorker,\r\n  fetchWorker,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_WORKER,\r\n  DELETE_WORKER,\r\n  SET_FILTERED_WORKERS,\r\n  SET_SINGLE_WORKER,\r\n  SET_WORKERS,\r\n} from \"./actionTypes\";\r\n\r\nexport const getWorkersAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchWorkers(token, id);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_WORKERS, workers: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const getSingleWorkerAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchWorker(id, token);\r\n    dispatch({ type: SET_SINGLE_WORKER, singleWorker: response.data });\r\n  };\r\n};\r\n\r\nexport const searchWorkersAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchWorkers(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_WORKERS,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_WORKERS,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createWorkerAction = (workers) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createWorker(workers, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_WORKER, token, workers: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editWorkerAction = (workers, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchWorker(workers, token, id);\r\n    dispatch({ type: ADD_WORKER, token, workers: response.data });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteWorkerAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteWorker(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_WORKER, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./Workers.module.css\";\r\nimport {\r\n  deleteWorkerAction,\r\n  getWorkersAction,\r\n  searchWorkersAction,\r\n} from \"../../store/actions/workersActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Workers = ({\r\n  getWorkers,\r\n  filteredWorkers,\r\n  workers,\r\n  filetred,\r\n  searchWorkers,\r\n  deleteWorkers,\r\n  _id,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const h = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getWorkers();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Працівники</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук працівника\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await searchWorkers(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <Link to=\"create-worker\" className={s.create__worker}>\r\n            <Button title=\"Створити працівника\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Ім'я</th>\r\n            <th className={s.status__table}>Статус</th>\r\n            <th className={s.status__table}>ID операції</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredWorkers.length\r\n            ? workers &&\r\n              workers?.map((worker) => {\r\n                return (\r\n                  <tr key={worker._id}>\r\n                    <td>{worker?.fName + \" \" + worker?.sName}</td>\r\n                    <td>{worker?.status}</td>\r\n                    <td>\r\n                      {worker?.operationId?.map((q) => {\r\n                        return q.name;\r\n                      })}\r\n                    </td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => h.push(`/edit-worker/${worker._id}`)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteWorkers(worker._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredWorkers.length &&\r\n              filteredWorkers.map((filtered) => {\r\n                return (\r\n                  <tr key={workers._id}>\r\n                    <td>{filetred.fName + \" \" + filetred.sName}</td>\r\n                    <td>{filetred.status}</td>\r\n                    <td>\r\n                      {filetred?.operationId?.map((q) => {\r\n                        return q.name;\r\n                      })}\r\n                    </td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => h.push(`/edit-worker/${filetred._id}`)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteWorkers(filtered._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    workers: state.workers.workers,\r\n    filteredWorkers: state.workers.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getWorkers: (searchValue, id) =>\r\n      dispatch(getWorkersAction(searchValue, id)),\r\n    searchWorkers: (data) => dispatch(searchWorkersAction(data)),\r\n    deleteWorkers: (id) => dispatch(deleteWorkerAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Workers);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createRoztsinka,\r\n  deleteRoztsinka,\r\n  fetchFilteredRoztsinka,\r\n  fetchRoztsinka,\r\n  fetchSingleRoztsinka,\r\n  patchRoztsinka,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_ROZTSINKA,\r\n  DELETE_ROZTSINKA,\r\n  SET_FILTER_ROZTSINKA,\r\n  SET_ROZTSINKA,\r\n  SET_SINGLE_ROZTSINKA,\r\n} from \"./actionTypes\";\r\n\r\nexport const getRoztsinkaAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchRoztsinka(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_ROZTSINKA, roztsinka: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSingleRoztsinkaAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSingleRoztsinka(id, token);\r\n    dispatch({ type: SET_SINGLE_ROZTSINKA, singleRoztsinka: response.data });\r\n  };\r\n};\r\n\r\nexport const filterRoztsinkaAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredRoztsinka(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_ROZTSINKA,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_ROZTSINKA,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createRoztsinkaAction = (roztsinka) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createRoztsinka(roztsinka, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_ROZTSINKA,\r\n        token,\r\n        roztsinka: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editRoztsinkaAction = (roztsinka, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchRoztsinka(id, token, roztsinka);\r\n    dispatch({ type: ADD_ROZTSINKA, token, roztsinka: response.data });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteRoztsinkaAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteRoztsinka(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_ROZTSINKA, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Prices.module.css\";\r\nimport {\r\n  deleteRoztsinkaAction,\r\n  filterRoztsinkaAction,\r\n  getRoztsinkaAction,\r\n} from \"../../store/actions/roztsinkaActions\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst Prices = ({\r\n  fetchRoztsinka,\r\n  roztsinka,\r\n  filterRoztsinka,\r\n  filteredRoztsinka,\r\n  deleteRoztsinka,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const h = useHistory();\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchRoztsinka();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Розцінка</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterRoztsinka(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.create__worker}>\r\n          <Link to=\"create-prices\" className={s.create__worker}>\r\n            <Button title=\"Створити розцінку\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th>Назва</th>\r\n            <th>Початок</th>\r\n            <th>Завершення</th>\r\n            <th>Ціна</th>\r\n            <th>ID Обладнання</th>\r\n            <th>ID операції</th>\r\n            <th>Тип</th>\r\n            <th>Колір</th>\r\n            <th>Асортимент</th>\r\n            <th>Клас</th>\r\n            <th>Сезон</th>\r\n            <th>Малюнок</th>\r\n            <th>Розмір</th>\r\n            <th>Артикул</th>\r\n            <th>Гатунок</th>\r\n            <th>ID працівника</th>\r\n            <th></th>\r\n          </tr>\r\n          {!filteredRoztsinka.length\r\n            ? roztsinka &&\r\n              roztsinka.map((roztsinka) => {\r\n                return (\r\n                  <tr key={roztsinka._id}>\r\n                    <td>{roztsinka.name}</td>\r\n                    <td>{roztsinka.startDate?.slice(0, 10)}</td>\r\n                    <td>{roztsinka.endDate?.slice(0, 10)}</td>\r\n                    <td>{roztsinka.price}</td>\r\n                    <td>{roztsinka.machineId?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.operationId?.name}</td>\r\n                    <td>{roztsinka.typeId?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.colorId?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.asortument?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.classId?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.seasonId?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.imageId?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.sizeId?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.articleId?.name || \"err===\"}</td>\r\n                    <td>{roztsinka.gatynok || \"err===\"}</td>\r\n                    <td>{roztsinka.changesId?.firstName || \"err===\"}</td>\r\n                    <div className={s.table__btn}>\r\n                      <button\r\n                        className={s.del}\r\n                        onClick={() => h.push(`/edit-price/${roztsinka._id}`)}\r\n                      >\r\n                        Редагувати\r\n                      </button>\r\n                      <button onClick={() => deleteRoztsinka(roztsinka._id)}>\r\n                        Видалити\r\n                      </button>\r\n                    </div>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredRoztsinka.length &&\r\n              filteredRoztsinka.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name}</td>\r\n                    <td>{filter.startDate?.slice(0, 10)}</td>\r\n                    <td>{filter.endDate?.slice(0, 10)}</td>\r\n                    <td>{filter.price}</td>\r\n                    <td>{filter.machineId?.name || \"err===\"}</td>\r\n                    <td>{filter.operationId?.name}</td>\r\n                    <td>{filter.typeId?.name || \"err===\"}</td>\r\n                    <td>{filter.colorId?.name || \"err===\"}</td>\r\n                    <td>{filter.asortument?.name || \"err===\"}</td>\r\n                    <td>{filter.classId?.name || \"err===\"}</td>\r\n                    <td>{filter.seasonId?.name || \"err===\"}</td>\r\n                    <td>{filter.imageId?.name || \"err===\"}</td>\r\n                    <td>{filter.sizeId?.name || \"err===\"}</td>\r\n                    <td>{filter.articleId?.name || \"err===\"}</td>\r\n                    <td>{filter.gatynok || \"err===\"}</td>\r\n                    <td>{filter.changesId.fName?.name || \"err===\"}</td>\r\n\r\n                    <div className={s.table__btn}>\r\n                      <button\r\n                        className={s.del}\r\n                        onClick={() => h.push(`/edit-price/${filter._id}`)}\r\n                      >\r\n                        Редагувати\r\n                      </button>\r\n                      <button onClick={() => deleteRoztsinka(filter._id)}>\r\n                        Видалити\r\n                      </button>\r\n                    </div>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    roztsinka: state.roztsinka.roztsinka,\r\n    filteredRoztsinka: state.roztsinka.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchRoztsinka: (search) => dispatch(getRoztsinkaAction(search)),\r\n    filterRoztsinka: (data) => dispatch(filterRoztsinkaAction(data)),\r\n    deleteRoztsinka: (data) => dispatch(deleteRoztsinkaAction(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Prices);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMachineModel,\r\n  deleteMachineModel,\r\n  fetchMachineModel,\r\n  fetchSearchMachineModel,\r\n  patchMachineModel,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_MACHINE_MODEL,\r\n  DELETE_MACHINE_MODEL,\r\n  SET_FILTER_MACHINE_MODEL,\r\n  SET_MACHINE_MODEL,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMachineModelAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMachineModel(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_MACHINE_MODEL, machineModel: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMachineModelAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMachineModel(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE_MODEL,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE_MODEL,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMachineModelAction = (machineModel) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMachineModel(machineModel, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_MACHINE_MODEL, token, machineModel: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const deleteMachineModelAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMachineModel(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MACHINE_MODEL, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMachineDuymu,\r\n  deleteMachineDuymu,\r\n  fetchMachineDuymu,\r\n  fetchSearchMachineDuymu,\r\n  patchMachineDuymu,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_MACHINE_DYUMU,\r\n  DELETE_MACHINE_DYUMU,\r\n  SET_FILTER_MACHINE_DYUMU,\r\n  SET_MACHINE_DYUMU,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMachineDuymuAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMachineDuymu(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_MACHINE_DYUMU, machineDuymu: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMachineDuymuAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMachineDuymu(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE_DYUMU,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE_DYUMU,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMachineDuymuAction = (machineDuymu) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMachineDuymu(machineDuymu, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_MACHINE_DYUMU, token, machineDuymu: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteMachineDuymuAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMachineDuymu(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MACHINE_DYUMU, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Machine.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createMachineDuymuAction,\r\n  deleteMachineDuymuAction,\r\n  getMachineDuymuAction,\r\n} from \"../../store/actions/Machine/duymuActions\";\r\nimport { filterMachineDuymuAction } from \"../../store/actions/Machine/duymuActions\";\r\nimport {\r\n  fetchSingleMachineDuymu,\r\n  patchMachineDuymu,\r\n} from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst MachineDuymu = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchMachineDuymu,\r\n  machineDuymu,\r\n  filteredMachineDuymu,\r\n  filterMachineDuymu,\r\n  deleteMachineDuymu,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singleMachineDuymu, setsingleMachineDuymu] = useState({});\r\n  const [duymu, setDuymu] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsingleMachineDuymu({\r\n      ...singleMachineDuymu,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMachineDuymu = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMachineDuymu(singleMachineDuymu._id, token, singleMachineDuymu).then(\r\n      (res) => {\r\n        res.status === 200 &&\r\n          setDuymu((prevState) =>\r\n            prevState.filter((golku) =>\r\n              golku._id === singleMachineDuymu._id\r\n                ? (golku.name = singleMachineDuymu.name)\r\n                : golku\r\n            )\r\n          );\r\n      }\r\n    );\r\n  };\r\n\r\n  const getSingleDuymu = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMachineDuymu(id, token).then((res) => {\r\n      setsingleMachineDuymu(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDuymu(machineDuymu);\r\n  }, [machineDuymu]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMachineDuymu();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Дюйми</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterMachineDuymu(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleMachineDuymu.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleMachineDuymu()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredMachineDuymu.length\r\n            ? machineDuymu &&\r\n              machineDuymu.map((machineDuymu) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{machineDuymu.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleDuymu(machineDuymu._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deleteMachineDuymu(machineDuymu._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredMachineDuymu.length &&\r\n              filteredMachineDuymu.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleDuymu(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteMachineDuymu(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMachineDuymu }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMachineDuymu(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(MachineDuymu);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    machineDuymu: state.machineDuymu.machineDuymu,\r\n    filteredMachineDuymu: state.machineDuymu.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMachineDuymu: (search) => dispatch(getMachineDuymuAction(search)),\r\n    filterMachineDuymu: (data) => dispatch(filterMachineDuymuAction(data)),\r\n    createMachineDuymu: (data) => dispatch(createMachineDuymuAction(data)),\r\n    deleteMachineDuymu: (data) => dispatch(deleteMachineDuymuAction(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMachineGolku,\r\n  deleteMachineGolku,\r\n  fetchMachineGolku,\r\n  fetchSearchMachineGolku,\r\n  patchMachineGolku,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_MACHINE_GOLKU,\r\n  DELETE_MACHINE_GOLKU,\r\n  SET_FILTER_MACHINE_GOLKU,\r\n  SET_MACHINE_GOLKU,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMachineGolkuAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMachineGolku(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_MACHINE_GOLKU, machineGolku: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMachineGolkuAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMachineGolku(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE_GOLKU,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE_GOLKU,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMachineGolkuAction = (machineGolku) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMachineGolku(machineGolku, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_MACHINE_GOLKU, token, machineGolku: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteMachineGolkuAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMachineGolku(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MACHINE_GOLKU, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Machine.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { filterMachineGolkuAction } from \"../../store/actions/Machine/golkuActions\";\r\nimport {\r\n  createMachineGolkuAction,\r\n  deleteMachineGolkuAction,\r\n  getMachineGolkuAction,\r\n} from \"../../store/actions/Machine/golkuActions\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport {\r\n  fetchSingleMachineGolku,\r\n  patchMachineGolku,\r\n} from \"../../store/api/api\";\r\n\r\nconst MachineGolku = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchMachineGolku,\r\n  machineGolku,\r\n  filteredMachineGolku,\r\n  filterMachineGolku,\r\n  deleteMachineGolku,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singleMachineGolku, setsingleMachineGolku] = useState({});\r\n  const [golku, setGolku] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsingleMachineGolku({\r\n      ...singleMachineGolku,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMachineGolku = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMachineGolku(singleMachineGolku._id, token, singleMachineGolku).then(\r\n      (res) => {\r\n        res.status === 200 &&\r\n          setGolku((prevState) =>\r\n            prevState.filter((golku) =>\r\n              golku._id === singleMachineGolku._id\r\n                ? (golku.name = singleMachineGolku.name)\r\n                : golku\r\n            )\r\n          );\r\n      }\r\n    );\r\n  };\r\n\r\n  const getSingleGolku = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMachineGolku(id, token).then((res) => {\r\n      setsingleMachineGolku(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setGolku(machineGolku);\r\n  }, [machineGolku]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMachineGolku();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Голки</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterMachineGolku(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleMachineGolku.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleMachineGolku()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredMachineGolku.length\r\n            ? machineGolku &&\r\n              machineGolku.map((machineGolku) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{machineGolku.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleGolku(machineGolku._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deleteMachineGolku(machineGolku._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredMachineGolku.length &&\r\n              filteredMachineGolku.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleGolku(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteMachineGolku(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMachineGolku }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMachineGolku(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(MachineGolku);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    machineGolku: state.machineGolku.machineGolku,\r\n    filteredMachineGolku: state.machineGolku.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMachineGolku: (search) => dispatch(getMachineGolkuAction(search)),\r\n    filterMachineGolku: (data) => dispatch(filterMachineGolkuAction(data)),\r\n    createMachineGolku: (data) => dispatch(createMachineGolkuAction(data)),\r\n    deleteMachineGolku: (data) => dispatch(deleteMachineGolkuAction(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMachineVyazalni,\r\n  deleteMachineVyazalni,\r\n  fetchMachineVyazalni,\r\n  fetchSearchMachineVyazalni,\r\n  patchMachineVyazalni,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_MACHINE_VYAZALNI,\r\n  DELETE_MACHINE_VYAZALNI,\r\n  SET_FILTER_MACHINE_VYAZALNI,\r\n  SET_MACHINE_VYAZALNI,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMachineVyazalniAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMachineVyazalni(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_MACHINE_VYAZALNI, machineVyazalni: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMachineVyazalniAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMachineVyazalni(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE_VYAZALNI,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE_VYAZALNI,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMachineVyazalniAction = (machineVyazalni) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMachineVyazalni(machineVyazalni, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_MACHINE_VYAZALNI,\r\n        token,\r\n        machineVyazalni: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteMachineVyazalniAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMachineVyazalni(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MACHINE_VYAZALNI, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Machine.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createMachineVyazalniAction,\r\n  deleteMachineVyazalniAction,\r\n  getMachineVyazalniAction,\r\n} from \"../../store/actions/Machine/vyazalniActions\";\r\nimport { filterMachineVyazalniAction } from \"../../store/actions/Machine/vyazalniActions\";\r\nimport {\r\n  fetchSingleMachineVyazalni,\r\n  patchMachineVyazalni,\r\n} from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst MachineVyazalni = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchMachineVyazalni,\r\n  machineVyazalni,\r\n  filteredMachineVyazalni,\r\n  filterMachineVyazalni,\r\n  deleteMachineVyazalni,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singleMachineVyazalni, setsingleMachineVyazalni] = useState({});\r\n  const [vyazalni, setVyazalni] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsingleMachineVyazalni({\r\n      ...singleMachineVyazalni,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMachineVyazalni = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMachineVyazalni(\r\n      singleMachineVyazalni._id,\r\n      token,\r\n      singleMachineVyazalni\r\n    ).then((res) => {\r\n      res.status === 200 &&\r\n        setVyazalni((prevState) =>\r\n          prevState.filter((golku) =>\r\n            golku._id === singleMachineVyazalni._id\r\n              ? (golku.name = singleMachineVyazalni.name)\r\n              : golku\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleVyazalni = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMachineVyazalni(id, token).then((res) => {\r\n      setsingleMachineVyazalni(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVyazalni(machineVyazalni);\r\n  }, [machineVyazalni]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMachineVyazalni();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Машини в'язальні</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterMachineVyazalni(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleMachineVyazalni.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button\r\n              title=\"Змінити\"\r\n              onClick={() => patchSingleMachineVyazalni()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredMachineVyazalni.length\r\n            ? machineVyazalni &&\r\n              machineVyazalni.map((machineVyazalni) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{machineVyazalni.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleVyazalni(machineVyazalni._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() =>\r\n                            deleteMachineVyazalni(machineVyazalni._id)\r\n                          }\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredMachineVyazalni.length &&\r\n              filteredMachineVyazalni.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleVyazalni(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deleteMachineVyazalni(filter._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMachineVyazalni }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMachineVyazalni(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(MachineVyazalni);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    machineVyazalni: state.machineVyazalni.machineVyazalni,\r\n    filteredMachineVyazalni: state.machineVyazalni.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMachineVyazalni: (search) =>\r\n      dispatch(getMachineVyazalniAction(search)),\r\n    filterMachineVyazalni: (data) =>\r\n      dispatch(filterMachineVyazalniAction(data)),\r\n    createMachineVyazalni: (data) =>\r\n      dispatch(createMachineVyazalniAction(data)),\r\n    deleteMachineVyazalni: (data) =>\r\n      dispatch(deleteMachineVyazalniAction(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMachine,\r\n  deleteMachine,\r\n  fetchMachine,\r\n  fetchSearchMachine,\r\n  fetchSingleMachine,\r\n  patchMachine,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_MACHINE,\r\n  DELETE_MACHINE,\r\n  SET_MACHINE,\r\n  SET_SINGLE_MACHINE,\r\n  SET_FILTER_MACHINE,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMachineAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMachine(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_MACHINE, machines: response.data });\r\n      return response.status === 200;\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSingleMachineAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSingleMachine(id, token);\r\n    dispatch({ type: SET_SINGLE_MACHINE, singleMachine: response.data });\r\n  };\r\n};\r\n\r\nexport const searchMachineAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMachine(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MACHINE,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMachineAction = (machine) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMachine(machine, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_MACHINE, token, machine: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMachineAction = (machines, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchMachine(id, machines, token);\r\n    dispatch({ type: ADD_MACHINE, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteMachineAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMachine(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MACHINE, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Machine.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteMachineAction,\r\n  getMachineAction,\r\n  searchMachineAction,\r\n} from \"../../store/actions/Machine/machineActions\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Machines = ({\r\n  filterMachine,\r\n  filteredMachine,\r\n  fetchMachine,\r\n  machines,\r\n  deleteMachine,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const h = useHistory();\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMachine();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Машини</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterMachine(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Link to=\"create-machine\" className={s.create__worker}>\r\n            <Button title=\"Створити машину\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}>Модель</th>\r\n            <th className={s.status__table}>Голка</th>\r\n            <th className={s.status__table}>Дюйми</th>\r\n            <th className={s.status__table}>Машини в'язальні</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredMachine.length\r\n            ? machines &&\r\n              machines.map((machines) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{machines?.name || \"err\"}</td>\r\n                    <td>{machines?.golkuId?.name || \"err\"}</td>\r\n                    <td>{machines?.modelId?.name || \"err\"}</td>\r\n                    <td>{machines?.duymuId?.name || \"err\"}</td>\r\n                    <td>{machines?.vyazalniId?.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() =>\r\n                            h.push(`/edit-machine/${machines._id}`)\r\n                          }\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteMachine(machines._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredMachine.length &&\r\n              filteredMachine.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>{filter?.modelId?.name || \"err\"}</td>\r\n                    <td>{filter?.golkuId?.name || \"err\"}</td>\r\n                    <td>{filter?.duymuId?.name || \"err\"}</td>\r\n                    <td>{filter?.vyazalniId?.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => h.push(`/edit-machine/${filter._id}`)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteMachine(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    machines: state.machines.machines,\r\n    filteredMachine: state.machines.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMachine: (search) => dispatch(getMachineAction(search)),\r\n    filterMachine: (data) => dispatch(searchMachineAction(data)),\r\n    deleteMachine: (data) => dispatch(deleteMachineAction(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Machines);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Equipment.module.css\";\r\nimport classnames from \"classnames\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createMachineModelAction,\r\n  deleteMachineModelAction,\r\n  filterMachineModelAction,\r\n  getMachineModelAction,\r\n} from \"../../store/actions/Machine/modelActions\";\r\nimport MachineDuymu from \"../../misc/EqItems/MachineDuymu\";\r\nimport MachineGolku from \"../../misc/EqItems/MachineGolku\";\r\nimport MachineVyazalni from \"../../misc/EqItems/MachineVyazalni\";\r\nimport {\r\n  fetchSingleMachineModel,\r\n  patchMachineModel,\r\n} from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport Machines from \"../../misc/EqItems/Machines\";\r\n\r\nconst Equipment = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchMachineModel,\r\n  machineModel,\r\n  filteredMachineModel,\r\n  filterMachineModel,\r\n  deleteMachineModel,\r\n}) => {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singleMachineModel, setsingleMachineModel] = useState({});\r\n  const [model, setModel] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsingleMachineModel({\r\n      ...singleMachineModel,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMachineModel = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMachineModel(singleMachineModel._id, token, singleMachineModel).then(\r\n      (res) => {\r\n        res.status === 200 &&\r\n          setModel((prevState) =>\r\n            prevState.filter((model) =>\r\n              model._id === singleMachineModel._id\r\n                ? (model.name = singleMachineModel.name)\r\n                : model\r\n            )\r\n          );\r\n      }\r\n    );\r\n  };\r\n\r\n  const getSingleModel = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMachineModel(id, token).then((res) => {\r\n      setsingleMachineModel(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setModel(machineModel);\r\n  }, [machineModel]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMachineModel();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <Tabs>\r\n      <div className={s.main}>\r\n        <TabList className={s.tabs}>\r\n          {[\"Машини\", \"Моделі\", \"Голки\", \"Дюйми\", \"Машини в'язальні\"].map(\r\n            (item, i) => (\r\n              <Tab\r\n                onClick={() => setActiveTabIndex(i)}\r\n                key={item}\r\n                className={classnames(s.tab, {\r\n                  [s.tab__active]: activeTabIndex === i,\r\n                })}\r\n              >\r\n                {item}\r\n              </Tab>\r\n            )\r\n          )}\r\n        </TabList>\r\n        <TabPanel>\r\n          <Machines />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <div className={s.title__container}>\r\n            <span className={s.title}>Моделі</span>\r\n            <hr></hr>\r\n          </div>\r\n          <div className={s.filter__container}>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Пошук\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, search: target.value })\r\n                }\r\n              />\r\n              <Button\r\n                title=\"Пошук\"\r\n                onClick={async () => {\r\n                  await filterMachineModel(dataForFilter);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={s.filter__container}>\r\n              <div className={s.search__container}>\r\n                <Input\r\n                  label=\"Створити\"\r\n                  value={values.name}\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                />\r\n                <Button title=\"Створити\" onClick={handleSubmit} />\r\n              </div>\r\n            </div>\r\n            <div className={s.filter__container}>\r\n              <div className={s.search__container}>\r\n                <Input\r\n                  label=\"Редагувати\"\r\n                  value={singleMachineModel.name}\r\n                  name=\"name\"\r\n                  onChange={change}\r\n                />\r\n                <Button\r\n                  title=\"Змінити\"\r\n                  onClick={() => patchSingleMachineModel()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table>\r\n              <tr>\r\n                <th className={s.status__table}>Назва</th>\r\n                <th className={s.status__table}></th>\r\n              </tr>\r\n              {!filteredMachineModel.length\r\n                ? machineModel &&\r\n                  machineModel.map((machineModel) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{machineModel.name || \"err\"}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => getSingleModel(machineModel._id)}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() =>\r\n                                deleteMachineModel(machineModel._id)\r\n                              }\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : filteredMachineModel.length &&\r\n                  filteredMachineModel.map((filter) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{filter.name || \"err\"}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => getSingleModel(filter._id)}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deleteMachineModel(filter._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <MachineGolku />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <MachineDuymu />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <MachineVyazalni />\r\n        </TabPanel>\r\n      </div>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMachineModel }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMachineModel(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(Equipment);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    machineModel: state.machineModel.machineModel,\r\n    filteredMachineModel: state.machineModel.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMachineModel: (search) => dispatch(getMachineModelAction(search)),\r\n    filterMachineModel: (data) => dispatch(filterMachineModelAction(data)),\r\n    createMachineModel: (data) => dispatch(createMachineModelAction(data)),\r\n    deleteMachineModel: (data) => dispatch(deleteMachineModelAction(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PrajaItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createPrajaTypeAction,\r\n  deletePrajaTypeAction,\r\n  filterPrajaTypeAction,\r\n  getPrajaTypeAction,\r\n} from \"../../store/actions/Praja/typeActions\";\r\nimport { withFormik } from \"formik\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport { fetchSinglePrajaType, patchPrajaType } from \"../../store/api/api\";\r\n\r\nconst PrajaType = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchPrajaType,\r\n  prajaType,\r\n  filterPrajaType,\r\n  filteredPrajaType,\r\n  deletePrajaType,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePrajaType, setsinglePrajaType] = useState({});\r\n  const [type, setType] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsinglePrajaType({\r\n      ...singlePrajaType,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSinglePrajaType = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchPrajaType(singlePrajaType._id, token, singlePrajaType).then((res) => {\r\n      res.status === 200 &&\r\n        setType((prevState) =>\r\n          prevState.filter((golku) =>\r\n            golku._id === singlePrajaType._id\r\n              ? (golku.name = singlePrajaType.name)\r\n              : golku\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSinglePrajaType = (id) => {\r\n    const token = getToken();\r\n    fetchSinglePrajaType(id, token).then((res) => {\r\n      setsinglePrajaType(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setType(prajaType);\r\n  }, [prajaType]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchPrajaType();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Тип пряжі</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterPrajaType(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePrajaType.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSinglePrajaType()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredPrajaType.length\r\n            ? prajaType &&\r\n              prajaType.map((prajaType) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prajaType.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaType(prajaType._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deletePrajaType(prajaType._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredPrajaType.length &&\r\n              filteredPrajaType.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaType(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deletePrajaType(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createPrajaType }, resetForm }) => {\r\n    const isSuccess = await createPrajaType(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(PrajaType);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    prajaType: state.prajaType.prajaType,\r\n    filteredPrajaType: state.prajaType.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPrajaType: (search) => dispatch(getPrajaTypeAction(search)),\r\n    filterPrajaType: (data) => dispatch(filterPrajaTypeAction(data)),\r\n    createPrajaType: (data) => dispatch(createPrajaTypeAction(data)),\r\n    deletePrajaType: (data) => dispatch(deletePrajaTypeAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createPrajaType,\r\n  deletePrajaType,\r\n  fetchPrajaType,\r\n  fetchSearchPrajaType,\r\n  patchPrajaType,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_PRAJA_TYPE,\r\n  DELETE_PRAJA_TYPE,\r\n  SET_FILTER_PRAJA_TYPE,\r\n  SET_PRAJA_TYPE,\r\n} from \"../actionTypes\";\r\n\r\nexport const getPrajaTypeAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchPrajaType(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PRAJA_TYPE, prajaType: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterPrajaTypeAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchPrajaType(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_TYPE,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_TYPE,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createPrajaTypeAction = (prajaType) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createPrajaType(prajaType, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_PRAJA_TYPE,\r\n        token,\r\n        prajaType: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPrajaTypeAction = (prajaType, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchPrajaType(prajaType, token, id);\r\n    dispatch({ type: ADD_PRAJA_TYPE, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deletePrajaTypeAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deletePrajaType(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PRAJA_TYPE, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PrajaItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createPrajaTovtshinaAction,\r\n  deletePrajaTovtshinaAction,\r\n  filterPrajaTovtshinaAction,\r\n  getPrajaTovtshinaAction,\r\n} from \"../../store/actions/Praja/tovtshinaActions\";\r\nimport { withFormik } from \"formik\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport {\r\n  fetchSinglePrajaTovtshina,\r\n  patchPrajaTovtshina,\r\n} from \"../../store/api/api\";\r\n\r\nconst PrajaTovtshina = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchPrajaTovtshina,\r\n  prajaTovtshina,\r\n  filterPrajaTovtshina,\r\n  filteredPrajaTovtshina,\r\n  deletePrajaTovtshina,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePrajaTovtshina, setsinglePrajaTovtshina] = useState({});\r\n  const [tovtshina, setTovtshina] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsinglePrajaTovtshina({\r\n      ...singlePrajaTovtshina,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSinglePrajaTovtshina = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchPrajaTovtshina(\r\n      singlePrajaTovtshina._id,\r\n      token,\r\n      singlePrajaTovtshina\r\n    ).then((res) => {\r\n      res.status === 200 &&\r\n        setTovtshina((prevState) =>\r\n          prevState.filter((golku) =>\r\n            golku._id === singlePrajaTovtshina._id\r\n              ? (golku.name = singlePrajaTovtshina.name)\r\n              : golku\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSinglePrajaTovtshina = (id) => {\r\n    const token = getToken();\r\n    fetchSinglePrajaTovtshina(id, token).then((res) => {\r\n      setsinglePrajaTovtshina(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTovtshina(prajaTovtshina);\r\n  }, [prajaTovtshina]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchPrajaTovtshina();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Товщина пряжі</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterPrajaTovtshina(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePrajaTovtshina.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button\r\n              title=\"Змінити\"\r\n              onClick={() => patchSinglePrajaTovtshina()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredPrajaTovtshina.length\r\n            ? prajaTovtshina &&\r\n              prajaTovtshina.map((prajaTovtshina) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prajaTovtshina.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() =>\r\n                            getSinglePrajaTovtshina(prajaTovtshina._id)\r\n                          }\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() =>\r\n                            deletePrajaTovtshina(prajaTovtshina._id)\r\n                          }\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredPrajaTovtshina.length &&\r\n              filteredPrajaTovtshina.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaTovtshina(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deletePrajaTovtshina(filter._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createPrajaTovtshina }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createPrajaTovtshina(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(PrajaTovtshina);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    prajaTovtshina: state.prajaTovtshina.prajaTovtshina,\r\n    filteredPrajaTovtshina: state.prajaTovtshina.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPrajaTovtshina: (search) => dispatch(getPrajaTovtshinaAction(search)),\r\n    filterPrajaTovtshina: (data) => dispatch(filterPrajaTovtshinaAction(data)),\r\n    createPrajaTovtshina: (data) => dispatch(createPrajaTovtshinaAction(data)),\r\n    deletePrajaTovtshina: (data) => dispatch(deletePrajaTovtshinaAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createPrajaTovtshina,\r\n  deletePrajaTovtshina,\r\n  fetchPrajaTovtshina,\r\n  fetchSearchPrajaTovtshina,\r\n  patchPrajaTovtshina,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_PRAJA_TOVTSHINA,\r\n  DELETE_PRAJA_TOVTSHINA,\r\n  SET_FILTER_PRAJA_TOVTSHINA,\r\n  SET_PRAJA_TOVTSHINA,\r\n} from \"../actionTypes\";\r\n\r\nexport const getPrajaTovtshinaAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchPrajaTovtshina(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PRAJA_TOVTSHINA, prajaTovtshina: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterPrajaTovtshinaAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchPrajaTovtshina(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_TOVTSHINA,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_TOVTSHINA,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createPrajaTovtshinaAction = (prajaTovtshina) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createPrajaTovtshina(prajaTovtshina, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_PRAJA_TOVTSHINA,\r\n        token,\r\n        prajaTovtshina: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPrajaTovtshinaAction = (prajaTovtshina, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchPrajaTovtshina(prajaTovtshina, token, id);\r\n    dispatch({ type: ADD_PRAJA_TOVTSHINA, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deletePrajaTovtshinaAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deletePrajaTovtshina(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PRAJA_TOVTSHINA, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PrajaItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createPrajaVendorAction,\r\n  deletePrajaVendorAction,\r\n  filterPrajaVendorAction,\r\n  getPrajaVendorAction,\r\n} from \"../../store/actions/Praja/vendorActions\";\r\nimport { withFormik } from \"formik\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport { fetchSinglePrajaVendor, patchPrajaVendor } from \"../../store/api/api\";\r\n\r\nconst PrajaVendor = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchPrajaVendor,\r\n  prajaVendor,\r\n  filterPrajaVendor,\r\n  filteredPrajaVendor,\r\n  deletePrajaVendor,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePrajaVendor, setsinglePrajaVendor] = useState({});\r\n  const [vendor, setVendor] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsinglePrajaVendor({\r\n      ...singlePrajaVendor,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSinglePrajaVendor = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchPrajaVendor(singlePrajaVendor._id, token, singlePrajaVendor).then(\r\n      (res) => {\r\n        res.status === 200 &&\r\n          setVendor((prevState) =>\r\n            prevState.filter((golku) =>\r\n              golku._id === singlePrajaVendor._id\r\n                ? (golku.name = singlePrajaVendor.name)\r\n                : golku\r\n            )\r\n          );\r\n      }\r\n    );\r\n  };\r\n\r\n  const getSinglePrajaVendor = (id) => {\r\n    const token = getToken();\r\n    fetchSinglePrajaVendor(id, token).then((res) => {\r\n      setsinglePrajaVendor(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVendor(prajaVendor);\r\n  }, [prajaVendor]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchPrajaVendor();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Постачальники</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterPrajaVendor(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePrajaVendor.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSinglePrajaVendor()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredPrajaVendor.length\r\n            ? prajaVendor &&\r\n              prajaVendor.map((prajaVendor) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prajaVendor.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaVendor(prajaVendor._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deletePrajaVendor(prajaVendor._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredPrajaVendor.length &&\r\n              filteredPrajaVendor.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaVendor(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deletePrajaVendor(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createPrajaVendor }, resetForm }) => {\r\n    const isSuccess = await createPrajaVendor(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(PrajaVendor);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    prajaVendor: state.prajaVendor.prajaVendor,\r\n    filteredPrajaVendor: state.prajaVendor.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPrajaVendor: (search) => dispatch(getPrajaVendorAction(search)),\r\n    filterPrajaVendor: (data) => dispatch(filterPrajaVendorAction(data)),\r\n    createPrajaVendor: (data) => dispatch(createPrajaVendorAction(data)),\r\n    deletePrajaVendor: (data) => dispatch(deletePrajaVendorAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createPrajaVendor,\r\n  deletePrajaVendor,\r\n  fetchPrajaVendor,\r\n  fetchSearchPrajaVendor,\r\n  patchPrajaVendor,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_PRAJA_VENDOR,\r\n  DELETE_PRAJA_VENDOR,\r\n  SET_FILTER_PRAJA_VENDOR,\r\n  SET_PRAJA_VENDOR,\r\n} from \"../actionTypes\";\r\n\r\nexport const getPrajaVendorAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchPrajaVendor(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PRAJA_VENDOR, prajaVendor: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterPrajaVendorAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchPrajaVendor(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_VENDOR,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_VENDOR,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createPrajaVendorAction = (prajaVendor) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createPrajaVendor(prajaVendor, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_PRAJA_VENDOR,\r\n        token,\r\n        prajaVendor: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPrajaVendorAction = (prajaVendor, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchPrajaVendor(prajaVendor, token, id);\r\n    dispatch({ type: ADD_PRAJA_VENDOR, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deletePrajaVendorAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deletePrajaVendor(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PRAJA_VENDOR, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PrajaItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createPrajaRozhidAction,\r\n  deletePrajaRozhidAction,\r\n  filterPrajaRozhidAction,\r\n  getPrajaRozhidAction,\r\n} from \"../../store/actions/Praja/rozhidActions\";\r\nimport { withFormik } from \"formik\";\r\nimport { fetchSinglePrajaRozhid, patchPrajaRozhid } from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst PrajaRozhid = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchPrajaRozhid,\r\n  prajaRozhid,\r\n  filterPrajaRozhid,\r\n  filteredPrajaRozhid,\r\n  deletePrajaRozhid,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePrajaRozhid, setsinglePrajaRozhid] = useState({});\r\n  const [rozhid, setRozhid] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsinglePrajaRozhid({\r\n      ...singlePrajaRozhid,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSinglePrajaRozhid = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchPrajaRozhid(singlePrajaRozhid._id, token, singlePrajaRozhid).then(\r\n      (res) => {\r\n        res.status === 200 &&\r\n          setRozhid((prevState) =>\r\n            prevState.filter((golku) =>\r\n              golku._id === singlePrajaRozhid._id\r\n                ? (golku.name = singlePrajaRozhid.name)\r\n                : golku\r\n            )\r\n          );\r\n      }\r\n    );\r\n  };\r\n\r\n  const getSinglePrajaRozhid = (id) => {\r\n    const token = getToken();\r\n    fetchSinglePrajaRozhid(id, token).then((res) => {\r\n      setsinglePrajaRozhid(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRozhid(prajaRozhid);\r\n  }, [prajaRozhid]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchPrajaRozhid();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Ділянки розходу</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterPrajaRozhid(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePrajaRozhid.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSinglePrajaRozhid()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredPrajaRozhid.length\r\n            ? prajaRozhid &&\r\n              prajaRozhid.map((prajaRozhid) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prajaRozhid.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaRozhid(prajaRozhid._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deletePrajaRozhid(prajaRozhid._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredPrajaRozhid.length &&\r\n              filteredPrajaRozhid.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaRozhid(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deletePrajaRozhid(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createPrajaRozhid }, resetForm }) => {\r\n    const isSuccess = await createPrajaRozhid(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(PrajaRozhid);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    prajaRozhid: state.prajaRozhid.prajaRozhid,\r\n    filteredPrajaRozhid: state.prajaRozhid.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPrajaRozhid: (search) => dispatch(getPrajaRozhidAction(search)),\r\n    filterPrajaRozhid: (data) => dispatch(filterPrajaRozhidAction(data)),\r\n    createPrajaRozhid: (data) => dispatch(createPrajaRozhidAction(data)),\r\n    deletePrajaRozhid: (data) => dispatch(deletePrajaRozhidAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createPrajaRozhid,\r\n  deletePrajaRozhid,\r\n  fetchPrajaRozhid,\r\n  fetchSearchPrajaRozhid,\r\n  patchPrajaRozhid,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_PRAJA_ROZHID,\r\n  DELETE_PRAJA_ROZHID,\r\n  SET_FILTER_PRAJA_ROZHID,\r\n  SET_PRAJA_ROZHID,\r\n} from \"../actionTypes\";\r\n\r\nexport const getPrajaRozhidAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchPrajaRozhid(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PRAJA_ROZHID, prajaRozhid: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterPrajaRozhidAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchPrajaRozhid(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_ROZHID,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_ROZHID,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createPrajaRozhidAction = (prajaRozhid) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createPrajaRozhid(prajaRozhid, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_PRAJA_ROZHID,\r\n        token,\r\n        prajaRozhid: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPrajaRozhidAction = (prajaRozhid, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchPrajaRozhid(prajaRozhid, token, id);\r\n    dispatch({ type: ADD_PRAJA_ROZHID, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deletePrajaRozhidAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deletePrajaRozhid(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PRAJA_ROZHID, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PrajaItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createPrajaColorAction,\r\n  deletePrajaColorAction,\r\n  filterPrajaColorAction,\r\n  getPrajaColorAction,\r\n} from \"../../store/actions/Praja/colorActions\";\r\nimport { withFormik } from \"formik\";\r\nimport { fetchSinglePrajaColor, patchPrajaColor } from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst PrajaColor = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchPrajaColor,\r\n  prajaColor,\r\n  filterPrajaColor,\r\n  filteredPrajaColor,\r\n  deletePrajaColor,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePrajaColor, setsinglePrajaColor] = useState({});\r\n  const [color, setColor] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsinglePrajaColor({\r\n      ...singlePrajaColor,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSinglePrajaColor = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchPrajaColor(singlePrajaColor._id, token, singlePrajaColor).then(\r\n      (res) => {\r\n        res.status === 200 &&\r\n          setColor((prevState) =>\r\n            prevState.filter((golku) =>\r\n              golku._id === singlePrajaColor._id\r\n                ? (golku.name = singlePrajaColor.name)\r\n                : golku\r\n            )\r\n          );\r\n      }\r\n    );\r\n  };\r\n\r\n  const getSinglePrajaColor = (id) => {\r\n    const token = getToken();\r\n    fetchSinglePrajaColor(id, token).then((res) => {\r\n      setsinglePrajaColor(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setColor(prajaColor);\r\n  }, [prajaColor]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchPrajaColor();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Католожні кольори</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterPrajaColor(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePrajaColor.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSinglePrajaColor()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredPrajaColor.length\r\n            ? prajaColor &&\r\n              prajaColor.map((prajaColor) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prajaColor.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaColor(prajaColor._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deletePrajaColor(prajaColor._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredPrajaColor.length &&\r\n              filteredPrajaColor.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSinglePrajaColor(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deletePrajaColor(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createPrajaColor }, resetForm }) => {\r\n    const isSuccess = await createPrajaColor(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(PrajaColor);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    prajaColor: state.prajaColor.prajaColor,\r\n    filteredPrajaColor: state.prajaColor.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPrajaColor: (search) => dispatch(getPrajaColorAction(search)),\r\n    filterPrajaColor: (data) => dispatch(filterPrajaColorAction(data)),\r\n    createPrajaColor: (data) => dispatch(createPrajaColorAction(data)),\r\n    deletePrajaColor: (data) => dispatch(deletePrajaColorAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createPrajaColor,\r\n  deletePrajaColor,\r\n  fetchPrajaColor,\r\n  fetchSearchPrajaColor,\r\n  patchPrajaColor,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_PRAJA_COLOR,\r\n  DELETE_PRAJA_COLOR,\r\n  SET_FILTER_PRAJA_COLOR,\r\n  SET_PRAJA_COLOR,\r\n} from \"../actionTypes\";\r\n\r\nexport const getPrajaColorAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchPrajaColor(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PRAJA_COLOR, prajaColor: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterPrajaColorAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchPrajaColor(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_COLOR,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_COLOR,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createPrajaColorAction = (prajaColor) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createPrajaColor(prajaColor, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_PRAJA_COLOR,\r\n        token,\r\n        prajaColor: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPrajaColorAction = (prajaColor, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchPrajaColor(prajaColor, token, id);\r\n    dispatch({ type: ADD_PRAJA_COLOR, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deletePrajaColorAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deletePrajaColor(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PRAJA_COLOR, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Praja.module.css\";\r\nimport classnames from \"classnames\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createPrajaSurovunaAction,\r\n  deletePrajaSurovunaAction,\r\n  filterPrajaSurovunaAction,\r\n  getPrajaSurovunaAction,\r\n} from \"../../store/actions/Praja/surovunaActions\";\r\nimport { withFormik } from \"formik\";\r\nimport PrajaType from \"../../misc/PrajaItems/PrajaType\";\r\nimport PrajaTovtshina from \"../../misc/PrajaItems/PrajaTovtshina\";\r\nimport PrajaVendor from \"../../misc/PrajaItems/PrajaVendor\";\r\nimport PrajaRozhid from \"../../misc/PrajaItems/PrajaRozhid\";\r\nimport PrajaColor from \"../../misc/PrajaItems/PrajaColor\";\r\nimport {\r\n  fetchSinglePrajaSurovuna,\r\n  patchPrajaSurovuna,\r\n} from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst Praja = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchPrajaSurovuna,\r\n  prajaSurovuna,\r\n  filterPrajaSurovuna,\r\n  filteredPrajaSurovuna,\r\n  deletePrajaSurovuna,\r\n}) => {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePrajaSurovuna, setsinglePrajaSurovuna] = useState({});\r\n  const [surovuna, setSurovuna] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsinglePrajaSurovuna({\r\n      ...singlePrajaSurovuna,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSinglePrajaSurovuna = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchPrajaSurovuna(\r\n      singlePrajaSurovuna._id,\r\n      token,\r\n      singlePrajaSurovuna\r\n    ).then((res) => {\r\n      res.status === 200 &&\r\n        setSurovuna((prevState) =>\r\n          prevState.filter((golku) =>\r\n            golku._id === singlePrajaSurovuna._id\r\n              ? (golku.name = singlePrajaSurovuna.name)\r\n              : golku\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSinglePrajaSurovuna = (id) => {\r\n    const token = getToken();\r\n    fetchSinglePrajaSurovuna(id, token).then((res) => {\r\n      setsinglePrajaSurovuna(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSurovuna(prajaSurovuna);\r\n  }, [prajaSurovuna]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchPrajaSurovuna();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Tabs>\r\n      <div className={s.main}>\r\n        <TabList className={s.tabs}>\r\n          {[\r\n            \"Назва сировини\",\r\n            \"Тип пряжі\",\r\n            \"Товщина пряжі\",\r\n            \"Постачальники\",\r\n            \"Ділянки розходу\",\r\n            \"Католожні кольори\",\r\n          ].map((item, i) => (\r\n            <Tab\r\n              onClick={() => setActiveTabIndex(i)}\r\n              key={item}\r\n              className={classnames(s.tab, {\r\n                [s.tab__active]: activeTabIndex === i,\r\n              })}\r\n            >\r\n              {item}\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n        <TabPanel>\r\n          <div className={s.title__container}>\r\n            <span className={s.title}>Назва сировини</span>\r\n            <hr></hr>\r\n          </div>\r\n          <div className={s.filter__container}>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Пошук\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, search: target.value })\r\n                }\r\n              />\r\n              <Button\r\n                title=\"Пошук\"\r\n                onClick={async () => {\r\n                  await filterPrajaSurovuna(dataForFilter);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={s.filter__container}>\r\n              <div className={s.search__container}>\r\n                <Input\r\n                  label=\"Створити\"\r\n                  value={values.name}\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                />\r\n                <Button title=\"Створити\" onClick={handleSubmit} />\r\n              </div>\r\n            </div>\r\n            <div className={s.filter__container}>\r\n              <div className={s.search__container}>\r\n                <Input\r\n                  label=\"Редагувати\"\r\n                  value={singlePrajaSurovuna.name}\r\n                  name=\"name\"\r\n                  onChange={change}\r\n                />\r\n                <Button\r\n                  title=\"Змінити\"\r\n                  onClick={() => patchSinglePrajaSurovuna()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table>\r\n              <tr>\r\n                <th className={s.status__table}>Назва</th>\r\n                <th className={s.status__table}></th>\r\n              </tr>\r\n              {!filteredPrajaSurovuna.length\r\n                ? prajaSurovuna &&\r\n                  prajaSurovuna.map((prajaSurovuna) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{prajaSurovuna.name || \"err\"}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() =>\r\n                                getSinglePrajaSurovuna(prajaSurovuna._id)\r\n                              }\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() =>\r\n                                deletePrajaSurovuna(prajaSurovuna._id)\r\n                              }\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : filteredPrajaSurovuna.length &&\r\n                  filteredPrajaSurovuna.map((filter) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{filter.name || \"err\"}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => getSinglePrajaSurovuna(filter._id)}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deletePrajaSurovuna(filter._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PrajaType />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PrajaTovtshina />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PrajaVendor />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PrajaRozhid />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PrajaColor />\r\n        </TabPanel>\r\n      </div>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createPrajaSurovuna }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createPrajaSurovuna(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(Praja);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    prajaSurovuna: state.prajaSurovuna.prajaSurovuna,\r\n    filteredPrajaSurovuna: state.prajaSurovuna.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPrajaSurovuna: (search) => dispatch(getPrajaSurovunaAction(search)),\r\n    filterPrajaSurovuna: (data) => dispatch(filterPrajaSurovunaAction(data)),\r\n    createPrajaSurovuna: (data) => dispatch(createPrajaSurovunaAction(data)),\r\n    deletePrajaSurovuna: (data) => dispatch(deletePrajaSurovunaAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createPrajaSurovuna,\r\n  deletePrajaSurovuna,\r\n  fetchPrajaSurovuna,\r\n  fetchSearchPrajaSurovuna,\r\n  patchPrajaSurovuna,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_PRAJA_SUROVUNA,\r\n  DELETE_PRAJA_SUROVUNA,\r\n  SET_FILTER_PRAJA_SUROVUNA,\r\n  SET_PRAJA_SUROVUNA,\r\n} from \"../actionTypes\";\r\n\r\nexport const getPrajaSurovunaAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchPrajaSurovuna(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PRAJA_SUROVUNA, prajaSurovuna: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterPrajaSurovunaAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchPrajaSurovuna(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_SUROVUNA,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_PRAJA_SUROVUNA,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createPrajaSurovunaAction = (prajaSurovuna) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createPrajaSurovuna(prajaSurovuna, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_PRAJA_SUROVUNA,\r\n        token,\r\n        prajaSurovuna: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPrajaSurovunaAction = (prajaSurovuna, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchPrajaSurovuna(prajaSurovuna, token, id);\r\n    dispatch({ type: ADD_PRAJA_SUROVUNA, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deletePrajaSurovunaAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deletePrajaSurovuna(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PRAJA_SUROVUNA, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PakItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createMaterialRozhidAction,\r\n  deleteMaterialRozhidAction,\r\n  filterMaterialRozhidAction,\r\n  getMaterialRozhidAction,\r\n} from \"../../store/actions/Material/dilankaRozhoduActions\";\r\nimport { withFormik } from \"formik\";\r\nimport {\r\n  fetchSingleMaterialRozhid,\r\n  patchMaterialRozhid,\r\n} from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst MaterialRozhid = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchMaterialRozhid,\r\n  materialRozhid,\r\n  filterMaterialRozhid,\r\n  filteredMaterialRozhid,\r\n  deleteMaterialRozhid,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePakMaterialRozhid, setSinglePakMaterialRozhid] = useState({});\r\n  const [rozhid, setRozhid] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSinglePakMaterialRozhid({\r\n      ...singlePakMaterialRozhid,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMaterialRozhid = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMaterialRozhid(\r\n      singlePakMaterialRozhid._id,\r\n      token,\r\n      singlePakMaterialRozhid\r\n    ).then((res) => {\r\n      res.status === 200 &&\r\n        setRozhid((prevState) =>\r\n          prevState.filter((roz) =>\r\n            roz._id === singlePakMaterialRozhid._id\r\n              ? (roz.name = singlePakMaterialRozhid.name)\r\n              : roz\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleRozhid = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMaterialRozhid(id, token).then((res) => {\r\n      setSinglePakMaterialRozhid(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRozhid(materialRozhid);\r\n  }, [materialRozhid]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMaterialRozhid();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Ділянки розходу</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterMaterialRozhid(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePakMaterialRozhid.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button\r\n              title=\"Змінити\"\r\n              onClick={() => patchSingleMaterialRozhid()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredMaterialRozhid.length\r\n            ? materialRozhid &&\r\n              materialRozhid.map((materialRozhid) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{materialRozhid.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleRozhid(materialRozhid._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() =>\r\n                            deleteMaterialRozhid(materialRozhid._id)\r\n                          }\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredMaterialRozhid.length &&\r\n              filteredMaterialRozhid.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleRozhid(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deleteMaterialRozhid(filter._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMaterialRozhid }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMaterialRozhid(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(MaterialRozhid);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    materialRozhid: state.materialRozhid.materialRozhid,\r\n    filteredMaterialRozhid: state.materialRozhid.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMaterialRozhid: (search) => dispatch(getMaterialRozhidAction(search)),\r\n    filterMaterialRozhid: (data) => dispatch(filterMaterialRozhidAction(data)),\r\n    createMaterialRozhid: (data) => dispatch(createMaterialRozhidAction(data)),\r\n    deleteMaterialRozhid: (data) => dispatch(deleteMaterialRozhidAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMaterialRozhid,\r\n  deleteMaterialRozhid,\r\n  fetchMaterialRozhid,\r\n  fetchSearchMaterialRozhid,\r\n  patchMaterialRozhid,\r\n} from \"../../api/api\";\r\nimport {\r\n  SET_MATERIALS_ROZHID,\r\n  DELETE_MATERIALS_ROZHID,\r\n  SET_FILTER_MATERIALS_ROZHID,\r\n  ADD_MATERIALS_ROZHID,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMaterialRozhidAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMaterialRozhid(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_MATERIALS_ROZHID, materialRozhid: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMaterialRozhidAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMaterialRozhid(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_ROZHID,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_ROZHID,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMaterialRozhidAction = (materialRozhid) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMaterialRozhid(materialRozhid, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_MATERIALS_ROZHID,\r\n        token,\r\n        materialRozhid: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMaterialRozhidAction = (materialRozhid, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchMaterialRozhid(materialRozhid, token, id);\r\n    dispatch({ type: ADD_MATERIALS_ROZHID, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteMaterialRozhidAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMaterialRozhid(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MATERIALS_ROZHID, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PakItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createMaterialParamsAction,\r\n  deleteMaterialParamsAction,\r\n  filterMaterialParamsAction,\r\n  getMaterialParamsAction,\r\n} from \"../../store/actions/Material/paramsActions\";\r\nimport { withFormik } from \"formik\";\r\nimport {\r\n  fetchSingleMaterialParams,\r\n  patchMaterialParams,\r\n} from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst MaterialParams = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchMaterialParams,\r\n  materialParams,\r\n  filterMaterialParams,\r\n  filteredMaterialParams,\r\n  deleteMaterialParams,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePakMaterialParams, setSinglePakMaterialParams] = useState({});\r\n  const [params, setParams] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSinglePakMaterialParams({\r\n      ...singlePakMaterialParams,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMaterialParams = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMaterialParams(\r\n      singlePakMaterialParams._id,\r\n      token,\r\n      singlePakMaterialParams\r\n    ).then((res) => {\r\n      res.status === 200 &&\r\n        setParams((prevState) =>\r\n          prevState.filter((par) =>\r\n            par._id === singlePakMaterialParams._id\r\n              ? (par.name = singlePakMaterialParams.name)\r\n              : par\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleParams = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMaterialParams(id, token).then((res) => {\r\n      setSinglePakMaterialParams(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setParams(materialParams);\r\n  }, [materialParams]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMaterialParams();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Параметри</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterMaterialParams(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePakMaterialParams.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button\r\n              title=\"Змінити\"\r\n              onClick={() => patchSingleMaterialParams()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredMaterialParams.length\r\n            ? materialParams &&\r\n              materialParams.map((materialParams) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{materialParams.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleParams(materialParams._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() =>\r\n                            deleteMaterialParams(materialParams._id)\r\n                          }\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredMaterialParams.length &&\r\n              filteredMaterialParams.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleParams(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deleteMaterialParams(filter._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMaterialParams }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMaterialParams(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(MaterialParams);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    materialParams: state.materialParams.materialParams,\r\n    filteredMaterialParams: state.materialParams.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMaterialParams: (search) => dispatch(getMaterialParamsAction(search)),\r\n    filterMaterialParams: (data) => dispatch(filterMaterialParamsAction(data)),\r\n    createMaterialParams: (data) => dispatch(createMaterialParamsAction(data)),\r\n    deleteMaterialParams: (data) => dispatch(deleteMaterialParamsAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMaterialParams,\r\n  deleteMaterialParams,\r\n  fetchMaterialParams,\r\n  fetchSearchMaterialParams,\r\n  patchMaterialParams,\r\n} from \"../../api/api\";\r\nimport {\r\n  SET_MATERIALS_PARAMS,\r\n  DELETE_MATERIALS_PARAMS,\r\n  SET_FILTER_MATERIALS_PARAMS,\r\n  ADD_MATERIALS_PARAMS,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMaterialParamsAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMaterialParams(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_MATERIALS_PARAMS, materialParams: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMaterialParamsAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMaterialParams(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_PARAMS,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_PARAMS,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMaterialParamsAction = (materialParams) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMaterialParams(materialParams, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_MATERIALS_PARAMS,\r\n        token,\r\n        materialParams: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMaterialParamsAction = (materialParams, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchMaterialParams(materialParams, token, id);\r\n    dispatch({ type: ADD_MATERIALS_PARAMS, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteMaterialParamsAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMaterialParams(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MATERIALS_PARAMS, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PakItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createMaterialParamsValueAction,\r\n  deleteMaterialParamsValueAction,\r\n  filterMaterialParamsValueAction,\r\n  getMaterialParamsValueAction,\r\n} from \"../../store/actions/Material/paramsValueActions\";\r\nimport { withFormik } from \"formik\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport {\r\n  fetchSingleMaterialParamsValue,\r\n  patchMaterialParamsValue,\r\n} from \"../../store/api/api\";\r\n\r\nconst MaterialParamsValue = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchMaterialParamsValue,\r\n  materialParamsValue,\r\n  filterMaterialParamsValue,\r\n  filteredMaterialParamsValue,\r\n  deleteMaterialParamsValue,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [\r\n    singlePakMaterialParamsValue,\r\n    setSinglePakMaterialParamsValue,\r\n  ] = useState({});\r\n  const [paramsValue, setParamsValue] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSinglePakMaterialParamsValue({\r\n      ...singlePakMaterialParamsValue,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMaterialParamsValue = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMaterialParamsValue(\r\n      singlePakMaterialParamsValue._id,\r\n      token,\r\n      singlePakMaterialParamsValue\r\n    ).then((res) => {\r\n      res.status === 200 &&\r\n        setParamsValue((prevState) =>\r\n          prevState.filter((parVal) =>\r\n            parVal._id === singlePakMaterialParamsValue._id\r\n              ? (parVal.name = singlePakMaterialParamsValue.name)\r\n              : parVal\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleParamsValue = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMaterialParamsValue(id, token).then((res) => {\r\n      setSinglePakMaterialParamsValue(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setParamsValue(materialParamsValue);\r\n  }, [materialParamsValue]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMaterialParamsValue();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Значення параметрів</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterMaterialParamsValue(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePakMaterialParamsValue.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button\r\n              title=\"Змінити\"\r\n              onClick={() => patchSingleMaterialParamsValue()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredMaterialParamsValue.length\r\n            ? materialParamsValue &&\r\n              materialParamsValue.map((materialParamsValue) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{materialParamsValue.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() =>\r\n                            getSingleParamsValue(materialParamsValue._id)\r\n                          }\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() =>\r\n                            deleteMaterialParamsValue(materialParamsValue._id)\r\n                          }\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredMaterialParamsValue.length &&\r\n              filteredMaterialParamsValue.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleParamsValue(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deleteMaterialParamsValue(filter._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMaterialParamsValue }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMaterialParamsValue(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(MaterialParamsValue);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    materialParamsValue: state.materialParamsValue.materialParamsValue,\r\n    filteredMaterialParamsValue: state.materialParamsValue.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMaterialParamsValue: (search) =>\r\n      dispatch(getMaterialParamsValueAction(search)),\r\n    filterMaterialParamsValue: (data) =>\r\n      dispatch(filterMaterialParamsValueAction(data)),\r\n    createMaterialParamsValue: (data) =>\r\n      dispatch(createMaterialParamsValueAction(data)),\r\n    deleteMaterialParamsValue: (data) =>\r\n      dispatch(deleteMaterialParamsValueAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMaterialParamsValue,\r\n  deleteMaterialParamsValue,\r\n  fetchMaterialParamsValue,\r\n  fetchSearchMaterialParamsValue,\r\n  patchMaterialParamsValue,\r\n} from \"../../api/api\";\r\nimport {\r\n  SET_MATERIALS_PARAMS_VALUE,\r\n  DELETE_MATERIALS_PARAMS_VALUE,\r\n  SET_FILTER_MATERIALS_PARAMS_VALUE,\r\n  ADD_MATERIALS_PARAMS_VALUE,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMaterialParamsValueAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMaterialParamsValue(token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: SET_MATERIALS_PARAMS_VALUE,\r\n        materialParamsValue: response.data,\r\n      });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMaterialParamsValueAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMaterialParamsValue(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_PARAMS_VALUE,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_PARAMS_VALUE,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMaterialParamsValueAction = (materialParamsValue) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMaterialParamsValue(materialParamsValue, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_MATERIALS_PARAMS_VALUE,\r\n        token,\r\n        materialParamsValue: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMaterialParamsValueAction = (materialParamsValue, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchMaterialParamsValue(\r\n      materialParamsValue,\r\n      token,\r\n      id\r\n    );\r\n    dispatch({ type: ADD_MATERIALS_PARAMS_VALUE, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteMaterialParamsValueAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMaterialParamsValue(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MATERIALS_PARAMS_VALUE, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./PakItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createMaterialTypeAction,\r\n  deleteMaterialTypeAction,\r\n  filterMaterialTypeAction,\r\n  getMaterialTypeAction,\r\n} from \"../../store/actions/Material/typeActions\";\r\nimport { withFormik } from \"formik\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport {\r\n  fetchSingleMaterialType,\r\n  patchMaterialType,\r\n} from \"../../store/api/api\";\r\n\r\nconst MaterialType = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchMaterialType,\r\n  materialType,\r\n  filterMaterialType,\r\n  filteredMaterialType,\r\n  deleteMaterialType,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const [singlePakMaterialType, setSinglePakMaterialType] = useState({});\r\n  const [rozhid, setType] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSinglePakMaterialType({\r\n      ...singlePakMaterialType,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMaterialType = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMaterialType(\r\n      singlePakMaterialType._id,\r\n      token,\r\n      singlePakMaterialType\r\n    ).then((res) => {\r\n      res.status === 200 &&\r\n        setType((prevState) =>\r\n          prevState.filter((type) =>\r\n            type._id === singlePakMaterialType._id\r\n              ? (type.name = singlePakMaterialType.name)\r\n              : type\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleType = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMaterialType(id, token).then((res) => {\r\n      setSinglePakMaterialType(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setType(materialType);\r\n  }, [materialType]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMaterialType();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Тип</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterMaterialType(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singlePakMaterialType.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleMaterialType()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredMaterialType.length\r\n            ? materialType &&\r\n              materialType.map((materialType) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{materialType.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleType(materialType._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button\r\n                          onClick={() => deleteMaterialType(materialType._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredMaterialType.length &&\r\n              filteredMaterialType.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleType(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteMaterialType(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMaterialType }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMaterialType(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(MaterialType);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    materialType: state.materialType.materialType,\r\n    filteredMaterialType: state.materialType.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMaterialType: (search) => dispatch(getMaterialTypeAction(search)),\r\n    filterMaterialType: (data) => dispatch(filterMaterialTypeAction(data)),\r\n    createMaterialType: (data) => dispatch(createMaterialTypeAction(data)),\r\n    deleteMaterialType: (data) => dispatch(deleteMaterialTypeAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMaterialType,\r\n  deleteMaterialType,\r\n  fetchMaterialType,\r\n  fetchSearchMaterialType,\r\n  patchMaterialType,\r\n} from \"../../api/api\";\r\nimport {\r\n  SET_MATERIALS_TYPE,\r\n  DELETE_MATERIALS_TYPE,\r\n  SET_FILTER_MATERIALS_TYPE,\r\n  ADD_MATERIALS_TYPE,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMaterialTypeAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMaterialType(token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: SET_MATERIALS_TYPE,\r\n        materialType: response.data,\r\n      });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMaterialTypeAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMaterialType(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_TYPE,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_TYPE,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMaterialTypeAction = (materialType) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMaterialType(materialType, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_MATERIALS_TYPE,\r\n        token,\r\n        materialType: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMaterialTypeAction = (materialType, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchMaterialType(materialType, token, id);\r\n    dispatch({ type: ADD_MATERIALS_TYPE, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteMaterialTypeAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMaterialType(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MATERIALS_TYPE, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./PakMaterials.module.css\";\r\nimport classnames from \"classnames\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createMaterialVendorAction,\r\n  deleteMaterialVendorAction,\r\n  filterMaterialVendorAction,\r\n  getMaterialVendorAction,\r\n} from \"../../store/actions/Material/vendorActions\";\r\nimport { withFormik } from \"formik\";\r\nimport PakRozhid from \"../../misc/PakItems/PakRozhid\";\r\nimport PakParams from \"../../misc/PakItems/PakParams\";\r\nimport PakParamsValue from \"../../misc/PakItems/PakParamsValue\";\r\nimport PakType from \"../../misc/PakItems/PakType\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport {\r\n  fetchSingleMaterialVendor,\r\n  patchMaterialVendor,\r\n} from \"../../store/api/api\";\r\n\r\nconst PakMaterials = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  materialVendor,\r\n  fetchMaterialVendor,\r\n  filterMaterialVendor,\r\n  filteredMaterialVendor,\r\n  deleteMaterialVendor,\r\n}) => {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singlePakMaterialVendor, setSinglePakMaterialVendor] = useState({});\r\n  const [vendor, setVendor] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSinglePakMaterialVendor({\r\n      ...singlePakMaterialVendor,\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  const patchSingleMaterialVendor = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchMaterialVendor(\r\n      singlePakMaterialVendor._id,\r\n      token,\r\n      singlePakMaterialVendor\r\n    ).then((res) => {\r\n      res.status === 200 &&\r\n        setVendor((prevState) =>\r\n          prevState.filter((vendor) =>\r\n            vendor._id === singlePakMaterialVendor._id\r\n              ? (vendor.name = singlePakMaterialVendor.name)\r\n              : vendor\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleVendor = (id) => {\r\n    const token = getToken();\r\n    fetchSingleMaterialVendor(id, token).then((res) => {\r\n      setSinglePakMaterialVendor(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVendor(materialVendor);\r\n  }, [materialVendor]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMaterialVendor();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Tabs>\r\n      <div className={s.main}>\r\n        <TabList className={s.tabs}>\r\n          {[\r\n            \"Постачальники\",\r\n            \"Ділянки розходу\",\r\n            \"Тип\",\r\n            \"Параметри\",\r\n            \"Значення параметрів\",\r\n          ].map((item, i) => (\r\n            <Tab\r\n              onClick={() => setActiveTabIndex(i)}\r\n              key={item}\r\n              className={classnames(s.tab, {\r\n                [s.tab__active]: activeTabIndex === i,\r\n              })}\r\n            >\r\n              {item}\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n        <TabPanel>\r\n          <div className={s.title__container}>\r\n            <span className={s.title}>Постачальники</span>\r\n            <hr></hr>\r\n          </div>\r\n          <div className={s.filter__container}>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Пошук\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, search: target.value })\r\n                }\r\n              />\r\n              <Button\r\n                title=\"Пошук\"\r\n                onClick={async () => {\r\n                  await filterMaterialVendor(dataForFilter);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={s.filter__container}>\r\n              <div className={s.search__container}>\r\n                <Input\r\n                  label=\"Створити\"\r\n                  value={values.name}\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                />\r\n                <Button title=\"Створити\" onClick={handleSubmit} />\r\n              </div>\r\n            </div>\r\n            <div className={s.filter__container}>\r\n              <div className={s.search__container}>\r\n                <Input\r\n                  label=\"Редагувати\"\r\n                  value={singlePakMaterialVendor.name}\r\n                  name=\"name\"\r\n                  onChange={change}\r\n                />\r\n                <Button\r\n                  title=\"Змінити\"\r\n                  onClick={() => patchSingleMaterialVendor()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table>\r\n              <tr>\r\n                <th className={s.status__table}>Назва</th>\r\n                <th className={s.status__table}></th>\r\n              </tr>\r\n              {!filteredMaterialVendor.length\r\n                ? materialVendor &&\r\n                  materialVendor.map((materialVendor) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{materialVendor.name || \"err\"}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() =>\r\n                                getSingleVendor(materialVendor._id)\r\n                              }\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() =>\r\n                                deleteMaterialVendor(materialVendor._id)\r\n                              }\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : filteredMaterialVendor.length &&\r\n                  filteredMaterialVendor.map((filter) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{filter.name || \"err\"}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => getSingleVendor(filter._id)}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deleteMaterialVendor(filter._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PakRozhid />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PakType />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PakParams />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <PakParamsValue />\r\n        </TabPanel>\r\n      </div>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createMaterialVendor }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createMaterialVendor(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(PakMaterials);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    materialVendor: state.materialVendor.materialVendor,\r\n    filteredMaterialVendor: state.materialVendor.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMaterialVendor: (search) => dispatch(getMaterialVendorAction(search)),\r\n    filterMaterialVendor: (data) => dispatch(filterMaterialVendorAction(data)),\r\n    createMaterialVendor: (data) => dispatch(createMaterialVendorAction(data)),\r\n    deleteMaterialVendor: (data) => dispatch(deleteMaterialVendorAction(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createMaterialVendor,\r\n  deleteMaterialVendor,\r\n  fetchMaterialVendor,\r\n  fetchSearchMaterialVendor,\r\n  patchMaterialVendor,\r\n} from \"../../api/api\";\r\nimport {\r\n  SET_MATERIALS_VENDOR,\r\n  DELETE_MATERIALS_VENDOR,\r\n  SET_FILTER_MATERIALS_VENDOR,\r\n  ADD_MATERIALS_VENDOR,\r\n} from \"../actionTypes\";\r\n\r\nexport const getMaterialVendorAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchMaterialVendor(token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: SET_MATERIALS_VENDOR,\r\n        materialVendor: response.data,\r\n      });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterMaterialVendorAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchMaterialVendor(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_VENDOR,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTER_MATERIALS_VENDOR,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMaterialVendorAction = (materialVendor) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createMaterialVendor(materialVendor, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_MATERIALS_VENDOR,\r\n        token,\r\n        materialVendor: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMaterialVendorAction = (materialVendor, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchMaterialVendor(materialVendor, token, id);\r\n    dispatch({ type: ADD_MATERIALS_VENDOR, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteMaterialVendorAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteMaterialVendor(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_MATERIALS_VENDOR, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Sklad1.module.css\";\r\nimport classnames from \"classnames\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport {\r\n  deleteSklad1Action,\r\n  filterSklad1Action,\r\n  getSklad1Action,\r\n} from \"../../store/actions/skladActions.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactToExcel from \"react-html-table-to-excel\";\r\nimport Barcode from \"react-barcode\";\r\nconst Sklad1 = ({\r\n  getSklad1,\r\n  sklad1,\r\n  filterSklad1,\r\n  filteredSklad1,\r\n  deleteSklad1,\r\n}) => {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n  const [dataForFilter, setDataForFilter] = useState({});\r\n  const h = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getSklad1();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <Tabs>\r\n      <div className={s.main}>\r\n        <div className={s.title__container}>\r\n          <span className={s.title}>Склад 1</span>\r\n          <hr></hr>\r\n        </div>\r\n        <TabList className={s.tabs}>\r\n          {[\"Прихід\", \"Розхід\", \"Залишок\"].map((item, i) => (\r\n            <Tab\r\n              onClick={() => setActiveTabIndex(i)}\r\n              key={item}\r\n              className={classnames(s.tab, {\r\n                [s.tab__active]: activeTabIndex === i,\r\n              })}\r\n            >\r\n              {item}\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n        <TabPanel>\r\n          <div className={s.filter__container}>\r\n            <div className={s.barcode}>\r\n              <Barcode value=\"hey\" />,\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Пошук продукту\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, search: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Період з:\"\r\n                type=\"date\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, from: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"до:\"\r\n                type=\"date\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, to: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.create__worker}>\r\n              <div className={s.exel__wrapper}>\r\n                <ReactToExcel\r\n                  table=\"table-to-xls\"\r\n                  filename=\"Sklad-1\"\r\n                  sheet=\"sheet 1\"\r\n                  buttonText=\"EXPORT\"\r\n                  className=\"exel\"\r\n                />\r\n              </div>\r\n              <Button\r\n                title=\"Пошук\"\r\n                onClick={async () => {\r\n                  await filterSklad1(dataForFilter);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table id=\"table-to-xls\">\r\n              <tr>\r\n                <th className={s.status__table}>ID Мішка</th>\r\n                <th className={s.status__table}>Дата</th>\r\n                <th className={s.status__table}>Майстер </th>\r\n                <th className={s.status__table}>Вязальниця</th>\r\n                <th className={s.status__table}>Обладнання</th>\r\n                <th className={s.status__table}>Артикул</th>\r\n                <th className={s.status__table}>Клас</th>\r\n                <th className={s.status__table}>Розмір</th>\r\n                <th className={s.status__table}>Маюнок</th>\r\n                <th className={s.status__table}>Колір</th>\r\n                <th className={s.status__table}>Асортимент</th>\r\n                <th className={s.status__table}>Тип</th>\r\n                <th className={s.status__table}>Гатунок 1</th>\r\n                <th className={s.status__table}>Гатунок 2 </th>\r\n                <th className={s.status__table}>Гатунок 3</th>\r\n                <th className={s.status__table}>Гатунок разом</th>\r\n                <th className={s.status__table}> ID юзера</th>\r\n                <th className={s.status__table}> Операції</th>\r\n              </tr>\r\n              {!filteredSklad1.length\r\n                ? sklad1 &&\r\n                  sklad1.map((sklad) => {\r\n                    return (\r\n                      <tr key={sklad1._id}>\r\n                        <td>{sklad.mishok._id || \"error===\"}</td>\r\n                        <td>{sklad.createdAt || \"error===\"}</td>\r\n                        <td>{sklad?.masterId?._id || \"error===\"}</td>\r\n                        <td>{sklad?.vyazalId?._id || \"error===\"}</td>\r\n                        <td>{sklad?.machineId || \"error===\"}</td>\r\n                        <td>{sklad?.mishok?.articleId?.name || \"error===\"}</td>\r\n                        <td>{sklad?.mishok?.classId?.name || \"error===\"}</td>\r\n                        <td>{sklad?.mishok?.sizeId?.name || \"error===\"}</td>\r\n                        <td>{sklad?.mishok?.imageId?.name || \"error===\"}</td>\r\n                        <td>{sklad?.mishok?.colorId?.name || \"error===\"}</td>\r\n                        <td>\r\n                          {sklad?.mishok?.asortumentId?.name || \"error===\"}\r\n                        </td>\r\n                        <td>{sklad?.mishok?.typeId?.name || \"error===\"}</td>\r\n                        <td>{sklad.mishok.gatynok1 || \"error===\"}</td>\r\n                        <td>{sklad.mishok.gatynok2 || \"error===\"}</td>\r\n                        <td>{sklad.mishok.gatynok3 || \"error===\"}</td>\r\n                        <td>\r\n                          {sklad.mishok.gatynok1 +\r\n                            sklad.mishok.gatynok2 +\r\n                            sklad.mishok.gatynok3 || \"error===\"}\r\n                        </td>\r\n                        <td>{sklad?.changesId?.firstName || \"error===\"}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => h.push(\"/edit\")}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button onClick={() => deleteSklad1(sklad._id)}>\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : filteredSklad1.length &&\r\n                  filteredSklad1.map((filtered) => {\r\n                    return (\r\n                      <tr key={filtered._id}>\r\n                        <td>{filtered.mishok._id || \"errorF===\"}</td>\r\n                        <td>{filtered.createdAt || \"error===\"}</td>\r\n                        <td>{filtered.masterId._id || \"error===\"}</td>\r\n                        <td>{filtered.vyazalId._id || \"error===\"}</td>\r\n                        <td>{filtered.machineId || \"error===\"}</td>\r\n                        <td>\r\n                          {filtered?.mishok?.articleId?.name || \"error===\"}\r\n                        </td>\r\n                        <td>{filtered?.mishok?.classId?.name || \"error===\"}</td>\r\n                        <td>{filtered?.mishok?.sizeId?.name || \"error===\"}</td>\r\n                        <td>{filtered?.mishok?.imageId?.name || \"error===\"}</td>\r\n                        <td>{filtered?.mishok?.colorId?.name || \"error===\"}</td>\r\n                        <td>\r\n                          {filtered?.mishok?.asortumentId?.name || \"error===\"}\r\n                        </td>\r\n                        <td>{filtered?.mishok?.typeId?.name || \"error===\"}</td>\r\n                        <td>{filtered.mishok.gatynok1 || \"error===\"}</td>\r\n                        <td>{filtered.mishok.gatynok2 || \"error===\"}</td>\r\n                        <td>{filtered.mishok.gatynok3 || \"error===\"}</td>\r\n                        <td>\r\n                          {filtered.mishok.gatynok1 +\r\n                            filtered.mishok.gatynok2 +\r\n                            filtered.mishok.gatynok3 || \"error===\"}\r\n                        </td>\r\n                        <td>{filtered?.changesId?.firstName || \"error===\"}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => h.push(\"/edit\")}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button onClick={() => deleteSklad1(filtered._id)}>\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <div className={s.filter__container}>\r\n            <div className={s.search__container}>\r\n              <Input label=\"Період з:\" type=\"date\" />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input label=\"до:\" type=\"date\" />\r\n            </div>\r\n            <div className={s.create__worker}>\r\n              <Button title=\"Пошук\" />\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table>\r\n              <tr>\r\n                <th className={s.status__table}>Назва</th>\r\n                <th className={s.status__table}>Дата</th>\r\n                <th className={s.status__table}>ID швеї</th>\r\n                <th className={s.status__table}>ID сортувальниці</th>\r\n              </tr>\r\n              <tr>\r\n                <td>Alfreds Futterkiste</td>\r\n                <td>Alfreds Futterkiste</td>\r\n                <td>Alfreds Futterkiste</td>\r\n                <td>\r\n                  Germany\r\n                  <div className={s.table__btn}>\r\n                    <button className={s.del}>Редагувати</button>\r\n                    <button>Видалити</button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Berglunds snabbkop</td>\r\n                <td>Berglunds snabbkop</td>\r\n                <td>Berglunds snabbkop</td>\r\n                <td>\r\n                  Sweden\r\n                  <div className={s.table__btn}>\r\n                    <button className={s.del}>Редагувати</button>\r\n                    <button>Видалити</button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Island Trading</td>\r\n                <td>Island Trading</td>\r\n                <td>Island Trading</td>\r\n                <td>\r\n                  UK\r\n                  <div className={s.table__btn}>\r\n                    <button className={s.del}>Редагувати</button>\r\n                    <button>Видалити</button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <div className={s.filter__container}>\r\n            <div className={s.search__container}>\r\n              <Input label=\"На дату\" type=\"date\" />\r\n            </div>\r\n            <div className={s.create__worker}>\r\n              <Button title=\"Пошук\" />\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table>\r\n              <tr>\r\n                <th className={s.status__table}>ID Мішка</th>\r\n                <th className={s.status__table}>Дата</th>\r\n                <th className={s.status__table}>Майстер </th>\r\n                <th className={s.status__table}>Вязальниця</th>\r\n                <th className={s.status__table}>Обладнання</th>\r\n                <th className={s.status__table}>Артикул</th>\r\n                <th className={s.status__table}>Клас</th>\r\n                <th className={s.status__table}>Розмір</th>\r\n                <th className={s.status__table}>Маюнок</th>\r\n                <th className={s.status__table}>Колір</th>\r\n                <th className={s.status__table}>Асортимент</th>\r\n                <th className={s.status__table}>Тип</th>\r\n                <th className={s.status__table}>Гатунок 1</th>\r\n                <th className={s.status__table}>Гатунок 2 </th>\r\n                <th className={s.status__table}>Гатунок 3</th>\r\n                <th className={s.status__table}>Гатунок разом</th>\r\n                <th className={s.status__table}> ID юзера</th>\r\n              </tr>\r\n              <tr>\r\n                <td>Alfreds Futterkiste</td>\r\n                <td>Alfreds Futterkiste</td>\r\n                <td>Alfreds Futterkiste</td>\r\n                <td>\r\n                  Germany\r\n                  <div className={s.table__btn}>\r\n                    <button className={s.del}>Редагувати</button>\r\n                    <button>Видалити</button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Berglunds snabbkop</td>\r\n                <td>Berglunds snabbkop</td>\r\n                <td>Berglunds snabbkop</td>\r\n                <td>\r\n                  Sweden\r\n                  <div className={s.table__btn}>\r\n                    <button className={s.del}>Редагувати</button>\r\n                    <button>Видалити</button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Island Trading</td>\r\n                <td>Island Trading</td>\r\n                <td>Island Trading</td>\r\n                <td>\r\n                  UK\r\n                  <div className={s.table__btn}>\r\n                    <button className={s.del}>Редагувати</button>\r\n                    <button>Видалити</button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n      </div>\r\n    </Tabs>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sklad1: state.sklad1.sklad1,\r\n    filteredSklad1: state.sklad1.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getSklad1: (searchValue) => dispatch(getSklad1Action(searchValue)),\r\n    filterSklad1: (data) => dispatch(filterSklad1Action(data)),\r\n    deleteSklad1: (id) => dispatch(deleteSklad1Action(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sklad1);\r\n\r\n// export default Sklad1;\r\n","import React from \"react\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Edit.module.css\";\r\n\r\nconst Edit = (props) => {\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Редагування</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.edit__container}>\r\n        <div className={s.left}>\r\n          <Input label=\"ID Мішка\" />\r\n          <Input label=\"Дата\" type=\"date\" />\r\n          <Input label=\"Майстер\" />\r\n          <Input label=\"Вязальниця\" />\r\n          <Input label=\"Обладнання\" />\r\n          <Input label=\"Артикул\" />\r\n          <Input label=\"Клас\" />\r\n          <Input label=\"Розмір\" />\r\n          <Input label=\"Маюнок\" />\r\n        </div>\r\n        <div className={s.right}>\r\n          <Input label=\"Колір\" />\r\n          <Input label=\"Асортимент\" />\r\n          <Input label=\"Тип\" />\r\n          <Input label=\"Гатунок 1\" />\r\n          <Input label=\"Гатунок 2\" />\r\n          <Input label=\"Гатунок 3\" />\r\n          <Input label=\"Гатунок разом\" />\r\n          <Input label=\"ID юзера\" />\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button title=\"Змінити\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// const formikHOC = withFormik({\r\n//   mapPropsToValues: () => ({\r\n//     title: \"\",\r\n//     desc: \"\",\r\n//     gallery: \"\",\r\n//     galleryFile: {},\r\n//     _id: \"\",\r\n//   }),\r\n//   handleSubmit: async (values, { props: { editNews, showAlert } }) => {\r\n//     const { title, desc, gallery, galleryFile, _id } = values;\r\n//     const imageFormData = new FormData();\r\n\r\n//     imageFormData.append(\"gallery\", galleryFile);\r\n\r\n//     const isNewsCreated = await editNews({ title, desc }, _id, imageFormData);\r\n\r\n//     if (isNewsCreated) {\r\n//       showAlert(\"Новину створено успішно!\", \"success\");\r\n//     } else {\r\n//       showAlert(\"Сталась помилка!\", \"error\");\r\n//     }\r\n//   },\r\n// })(Edit);\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     singleNews: state.news.single,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     getSklad1: (id) => dispatch(getSklad1Action(searchValue)),\r\n//     getSingleNews: (id) => dispatch(getSingleNewsAction(id)),\r\n//     editNews: (news, id, image) => dispatch(editNewsAction(news, id, image)),\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n\r\nexport default Edit;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"../ZpSklad1.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getZpSklad1Action } from \"../../../store/actions/zpSklad1Actions\";\r\nimport { getToken } from \"../../../utils/utils\";\r\nimport { fetchWorker, fetchWorkers } from \"../../../store/api/api\";\r\n\r\nconst ZpSklad1 = ({ getZpSklad1, zpsklad1, workers }) => {\r\n  const arrayOfWorkers = Object.keys(zpsklad1);\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getZpSklad1();\r\n    })();\r\n  }, []);\r\n  arrayOfWorkers.map((id) =>\r\n    fetchWorker(id, getToken())\r\n      .then((worker) => console.log(worker))\r\n      .catch((e) => console.log(e))\r\n  );\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Зарплата склад 1</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Ім'я</th>\r\n            <th className={s.status__table}>Зарплата</th>\r\n            <th className={s.status__table}>Кількість змін</th>\r\n            <th className={s.status__table}>Кількість продукції</th>\r\n          </tr>\r\n          {zpsklad1.length &&\r\n            zpsklad1.map((zp) => {\r\n              return (\r\n                <tr key={zp._id}>\r\n                  <td></td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    zpsklad1: state.zpsklad1.zpsklad1,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getZpSklad1: () => dispatch(getZpSklad1Action()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ZpSklad1);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport { fetchZpSklad1 } from \"../api/api\";\r\nimport { SET_ZP_SKLAD1 } from \"./actionTypes\";\r\n\r\nexport const getZpSklad1Action = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchZpSklad1(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_ZP_SKLAD1, zpsklad1: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createProdArticle,\r\n  deleteProdArticle,\r\n  fetchFilteredProdArticle,\r\n  fetchProdArticle,\r\n  fetchSingleProdArticle,\r\n  patchProdArticle,\r\n} from \"../api/api\";\r\nimport {\r\n  SET_PROD_ARTICLE,\r\n  SET_FILTERED_PROD_ARTICLE,\r\n  ADD_PROD_ARTICLE,\r\n  DELETE_PROD_ARTICLE,\r\n  SET_SINGLE_PROD_ARTICLE,\r\n} from \"./actionTypes\";\r\n\r\nexport const getProdArticleAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchProdArticle(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PROD_ARTICLE, prodArticle: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterProdArticleAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredProdArticle(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_ARTICLE,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_ARTICLE,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createProdArticleAction = (prodArticle) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createProdArticle(prodArticle, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_PROD_ARTICLE, token, prodArticle: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProdArticleAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteProdArticle(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PROD_ARTICLE, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createProdAsortument,\r\n  deleteProdAsortument,\r\n  fetchFilteredProdAsortument,\r\n  fetchProdAsortument,\r\n  patchProdAsortument,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_PROD_ASORTUMENT,\r\n  DELETE_PROD_ASORTUMENT,\r\n  SET_FILTERED_PROD_ASORTUMENT,\r\n  SET_PROD_ASORTUMENT,\r\n} from \"./actionTypes\";\r\n\r\nexport const getProdAsortumentAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchProdAsortument(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PROD_ASORTUMENT, prodAsortument: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterProdAsortumentAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredProdAsortument(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_ASORTUMENT,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_ASORTUMENT,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createProdAsortumentAction = (prodAsortument) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createProdAsortument(prodAsortument, token);\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: ADD_PROD_ASORTUMENT,\r\n        token,\r\n        prodAsortument: response.data,\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const deleteProdAsortumentAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteProdAsortument(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PROD_ASORTUMENT, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Prod.module.css\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createProdAsortumentAction,\r\n  deleteProdAsortumentAction,\r\n  filterProdAsortumentAction,\r\n  getProdAsortumentAction,\r\n} from \"../../store/actions/prodTypeAsortActions\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport {\r\n  fetchSingleProdAsortument,\r\n  patchProdAsortument,\r\n} from \"../../store/api/api\";\r\n\r\nconst ProdAsort = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchProdAsortument,\r\n  productciaAsortument,\r\n  filterProdAsorument,\r\n  filteredProdAsortument,\r\n  deleteProdAsortument,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleAsortument, setsingleAsortument] = useState({});\r\n  const [prodAsort, setProdAsort] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setsingleAsortument({ ...singleAsortument, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleProdAsortument = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchProdAsortument(singleAsortument._id, token, singleAsortument).then(\r\n      (res) => {\r\n        res.status === 200 &&\r\n          setProdAsort((prevState) =>\r\n            prevState.filter((asortument) =>\r\n              asortument._id === singleAsortument._id\r\n                ? (asortument.name = singleAsortument.name)\r\n                : asortument\r\n            )\r\n          );\r\n      }\r\n    );\r\n  };\r\n\r\n  const getSingleProdAsort = (id) => {\r\n    const token = getToken();\r\n    fetchSingleProdAsortument(id, token).then((res) => {\r\n      setsingleAsortument(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProdAsort(productciaAsortument);\r\n  }, [productciaAsortument]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchProdAsortument();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Асортимент</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterProdAsorument(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleAsortument.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button\r\n              title=\"Змінити\"\r\n              onClick={() => patchSingleProdAsortument()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredProdAsortument.length\r\n            ? productciaAsortument &&\r\n              productciaAsortument.map((prodA) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prodA.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdAsort(prodA._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdAsortument(prodA._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredProdAsortument.length &&\r\n              filteredProdAsortument.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button className={s.del}>Редагувати</button>\r\n                        <button\r\n                          onClick={() => deleteProdAsortument(filter._id)}\r\n                        >\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { createProdAsortument }, resetForm }\r\n  ) => {\r\n    const isSuccess = await createProdAsortument(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(ProdAsort);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productciaAsortument: state.prodAsortument.prodAsortument,\r\n    filteredProdAsortument: state.prodAsortument.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProdAsortument: (search) => dispatch(getProdAsortumentAction(search)),\r\n    filterProdAsorument: (data) => dispatch(filterProdAsortumentAction(data)),\r\n    createProdAsortument: (data) => dispatch(createProdAsortumentAction(data)),\r\n    deleteProdAsortument: (id) => dispatch(deleteProdAsortumentAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  fetchProdClass,\r\n  fetchFilteredProdClass,\r\n  createProdClass,\r\n  patchProdClass,\r\n  deleteProdClass,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_PROD_CLASS,\r\n  DELETE_PROD_CLASS,\r\n  SET_FILTERED_PROD_CLASS,\r\n  SET_PROD_CLASS,\r\n} from \"./actionTypes\";\r\n\r\nexport const getProdClassAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchProdClass(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PROD_CLASS, prodClass: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\nexport const filterProdClassAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredProdClass(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_CLASS,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_CLASS,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createProdClassAction = (prodClass) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createProdClass(prodClass, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_PROD_CLASS, token, prodClass: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProdClassAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteProdClass(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PROD_CLASS, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Prod.module.css\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createProdClassAction,\r\n  deleteProdClassAction,\r\n  filterProdClassAction,\r\n  getProdClassAction,\r\n} from \"../../store/actions/prodTypeClassActions\";\r\nimport { fetchSingleProdClass, patchProdClass } from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst ProdClass = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchProdClass,\r\n  productciaClass,\r\n  filteredProdClass,\r\n  filterProdClass,\r\n  deleteProdClass,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleClass, setSingleClass] = useState({});\r\n  const [prodClass, setProdClass] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSingleClass({ ...singleClass, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleProdClass = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchProdClass(singleClass._id, token, singleClass).then((res) => {\r\n      res.status === 200 &&\r\n        setProdClass((prevState) =>\r\n          prevState.filter((clas) =>\r\n            clas._id === singleClass._id ? (clas.name = singleClass.name) : clas\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleProdClass = (id) => {\r\n    const token = getToken();\r\n    fetchSingleProdClass(id, token).then((res) => {\r\n      setSingleClass(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProdClass(productciaClass);\r\n  }, [productciaClass]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchProdClass();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Клас</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterProdClass(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleClass.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleProdClass()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredProdClass.length\r\n            ? prodClass &&\r\n              prodClass.map((prodClass) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prodClass.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdClass(prodClass._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdClass(prodClass._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredProdClass.length &&\r\n              filteredProdClass.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button className={s.del}>Редагувати</button>\r\n                        <button onClick={() => deleteProdClass(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createProdClass }, resetForm }) => {\r\n    const isSuccess = await createProdClass(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(ProdClass);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productciaClass: state.prodClass.prodClass,\r\n    filteredProdClass: state.prodClass.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProdClass: (search) => dispatch(getProdClassAction(search)),\r\n    filterProdClass: (data) => dispatch(filterProdClassAction(data)),\r\n    createProdClass: (data) => dispatch(createProdClassAction(data)),\r\n    deleteProdClass: (id) => dispatch(deleteProdClassAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createProdColor,\r\n  deleteProdColor,\r\n  fetchFilteredProdColor,\r\n  fetchProdColor,\r\n  patchProdColor,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_PROD_COLOR,\r\n  DELETE_PROD_COLOR,\r\n  SET_FILTERED_PROD_COLOR,\r\n  SET_PROD_COLOR,\r\n} from \"./actionTypes\";\r\n\r\nexport const getProdColorAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchProdColor(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PROD_COLOR, prodColor: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\nexport const filterProdColorAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredProdColor(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_COLOR,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_COLOR,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createProdColorAction = (prodColor) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createProdColor(prodColor, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_PROD_COLOR, token, prodColor: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProdColorAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteProdColor(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PROD_COLOR, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Prod.module.css\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createProdColorAction,\r\n  deleteProdColorAction,\r\n  filterProdColorAction,\r\n  getProdColorAction,\r\n} from \"../../store/actions/prodTypeColorActions\";\r\nimport { fetchSingleProdColor, patchProdColor } from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst ProdColor = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchProdColor,\r\n  filteredProdColor,\r\n  filterProdColor,\r\n  deleteProdColor,\r\n  productciaColor,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleColor, setSingleColor] = useState({});\r\n  const [prodColor, setProdColor] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSingleColor({ ...singleColor, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleProdColor = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchProdColor(singleColor._id, token, singleColor).then((res) => {\r\n      res.status === 200 &&\r\n        setProdColor((prevState) =>\r\n          prevState.filter((color) =>\r\n            color._id === singleColor._id\r\n              ? (color.name = singleColor.name)\r\n              : color\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleProdColor = (id) => {\r\n    const token = getToken();\r\n    fetchSingleProdColor(id, token).then((res) => {\r\n      setSingleColor(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProdColor(productciaColor);\r\n  }, [productciaColor]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchProdColor();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Колір</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterProdColor(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleColor.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleProdColor()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredProdColor.length\r\n            ? prodColor &&\r\n              prodColor.map((prodColor) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prodColor.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdColor(prodColor._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdColor(prodColor._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredProdColor.length &&\r\n              filteredProdColor.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdColor(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdColor(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createProdColor }, resetForm }) => {\r\n    const isSuccess = await createProdColor(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(ProdColor);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productciaColor: state.prodColor.prodColor,\r\n    filteredProdColor: state.prodColor.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProdColor: (search) => dispatch(getProdColorAction(search)),\r\n    filterProdColor: (data) => dispatch(filterProdColorAction(data)),\r\n    createProdColor: (data) => dispatch(createProdColorAction(data)),\r\n    deleteProdColor: (id) => dispatch(deleteProdColorAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createProdImage,\r\n  deleteProdImage,\r\n  fetchFilteredProdImage,\r\n  fetchProdImage,\r\n  patchProdImage,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_PROD_IMAGE,\r\n  DELETE_PROD_IMAGE,\r\n  SET_FILTERED_PROD_IMAGE,\r\n  SET_PROD_IMAGE,\r\n} from \"./actionTypes\";\r\n\r\nexport const getProdImageAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchProdImage(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PROD_IMAGE, prodImage: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const filterProdImageAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredProdImage(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_IMAGE,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_IMAGE,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createProdImageAction = (prodImage) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createProdImage(prodImage, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_PROD_IMAGE, token, prodImage: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProdImageAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteProdImage(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PROD_IMAGE, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Prod.module.css\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createProdImageAction,\r\n  deleteProdImageAction,\r\n  filterProdImageAction,\r\n  getProdImageAction,\r\n} from \"../../store/actions/prodTypeImageActions\";\r\nimport { fetchSingleProdImage, patchProdImage } from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst ProdImage = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchProdImage,\r\n  productciaImage,\r\n  filterProdImage,\r\n  filteredProdImage,\r\n  deleteProdImage,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleImage, setSingleImage] = useState({});\r\n  const [prodImage, setProdImage] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSingleImage({ ...singleImage, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleProdImage = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchProdImage(singleImage._id, token, singleImage).then((res) => {\r\n      res.status === 200 &&\r\n        setProdImage((prevState) =>\r\n          prevState.filter((img) =>\r\n            img._id === singleImage._id ? (img.name = singleImage.name) : img\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleProdImage = (id) => {\r\n    const token = getToken();\r\n    fetchSingleProdImage(id, token).then((res) => {\r\n      setSingleImage(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProdImage(productciaImage);\r\n  }, [productciaImage]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchProdImage();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Малюнок</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterProdImage(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleImage.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleProdImage()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredProdImage.length\r\n            ? prodImage &&\r\n              prodImage.map((prodImage) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prodImage.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdImage(prodImage._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdImage(prodImage._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredProdImage.length &&\r\n              filteredProdImage.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdImage(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdImage(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createProdImage }, resetForm }) => {\r\n    const isSuccess = await createProdImage(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(ProdImage);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productciaImage: state.prodImage.prodImage,\r\n    filteredProdImage: state.prodImage.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProdImage: (search) => dispatch(getProdImageAction(search)),\r\n    filterProdImage: (data) => dispatch(filterProdImageAction(data)),\r\n    createProdImage: (data) => dispatch(createProdImageAction(data)),\r\n    deleteProdImage: (id) => dispatch(deleteProdImageAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createProdSezon,\r\n  deleteProdSezon,\r\n  fetchFilteredProdSezon,\r\n  fetchProdSezon,\r\n  patchProdSezon,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_PROD_SEZON,\r\n  DELETE_PROD_SEZON,\r\n  SET_FILTERED_PROD_SEZON,\r\n  SET_PROD_SEZON,\r\n} from \"./actionTypes\";\r\n\r\nexport const getProdSezonAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchProdSezon(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PROD_SEZON, prodSezon: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\nexport const filterProdSezonAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredProdSezon(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_SEZON,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_SEZON,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createProdSezonAction = (prodSezon) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createProdSezon(prodSezon, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_PROD_SEZON, token, prodSezon: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProdSezonAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteProdSezon(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PROD_SEZON, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Prod.module.css\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createProdSezonAction,\r\n  deleteProdSezonAction,\r\n  filterProdSezonAction,\r\n  getProdSezonAction,\r\n} from \"../../store/actions/prodTypeSezonActions\";\r\nimport { fetchSingleProdSezon, patchProdSezon } from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst ProdSezon = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchProdSezon,\r\n  productciaSezon,\r\n  filteredProdSezon,\r\n  filterProdSezon,\r\n  deleteProdSezon,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleSezon, setSingleSezon] = useState({});\r\n  const [prodSezon, setProdSezon] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSingleSezon({ ...singleSezon, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleProdSezon = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchProdSezon(singleSezon._id, token, singleSezon).then((res) => {\r\n      res.status === 200 &&\r\n        setProdSezon((prevState) =>\r\n          prevState.filter((sezon) =>\r\n            sezon._id === singleSezon._id\r\n              ? (sezon.name = singleSezon.name)\r\n              : sezon\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleProdSezon = (id) => {\r\n    const token = getToken();\r\n    fetchSingleProdSezon(id, token).then((res) => {\r\n      setSingleSezon(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProdSezon(productciaSezon);\r\n  }, [productciaSezon]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchProdSezon();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Сезон</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterProdSezon(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleSezon.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleProdSezon()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredProdSezon.length\r\n            ? prodSezon &&\r\n              prodSezon.map((prodSezon) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prodSezon.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdSezon(prodSezon._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdSezon(prodSezon._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredProdSezon.length &&\r\n              filteredProdSezon.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdSezon(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdSezon(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createProdSezon }, resetForm }) => {\r\n    const isSuccess = await createProdSezon(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(ProdSezon);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productciaSezon: state.prodSezon.prodSezon,\r\n    filteredProdSezon: state.prodSezon.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProdSezon: (search) => dispatch(getProdSezonAction(search)),\r\n    filterProdSezon: (data) => dispatch(filterProdSezonAction(data)),\r\n    createProdSezon: (data) => dispatch(createProdSezonAction(data)),\r\n    deleteProdSezon: (id) => dispatch(deleteProdSezonAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createProdSize,\r\n  deleteProdSize,\r\n  fetchFilteredProdSize,\r\n  fetchProdSize,\r\n  patchProdSize,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_PROD_SIZE,\r\n  DELETE_PROD_SIZE,\r\n  SET_FILTERED_PROD_SIZE,\r\n  SET_PROD_SIZE,\r\n} from \"./actionTypes\";\r\n\r\nexport const getProdSizeAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchProdSize(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PROD_SIZE, prodSize: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\nexport const filterProdSizeAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredProdSize(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_SIZE,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_SIZE,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createProdSizeAction = (prodSize) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createProdSize(prodSize, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_PROD_SIZE, token, prodSize: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProdSizeAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteProdSize(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PROD_SIZE, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Prod.module.css\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createProdSizeAction,\r\n  deleteProdSizeAction,\r\n  filterProdSizeAction,\r\n  getProdSizeAction,\r\n} from \"../../store/actions/prodTypeSizeActions\";\r\nimport { fetchSingleProdSize, patchProdSize } from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst ProdSize = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchProdSize,\r\n  productciaSize,\r\n  filteredProdSize,\r\n  filterProdSize,\r\n  deleteProdSize,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleSize, setSingleSize] = useState({});\r\n  const [prodSize, setProdSize] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSingleSize({ ...singleSize, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleProdSize = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchProdSize(singleSize._id, token, singleSize).then((res) => {\r\n      res.status === 200 &&\r\n        setProdSize((prevState) =>\r\n          prevState.filter((size) =>\r\n            size._id === singleSize._id ? (size.name = singleSize.name) : size\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleProdSize = (id) => {\r\n    const token = getToken();\r\n    fetchSingleProdSize(id, token).then((res) => {\r\n      setSingleSize(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProdSize(productciaSize);\r\n  }, [productciaSize]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchProdSize();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Розмір</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterProdSize(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleSize.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleProdSize()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredProdSize.length\r\n            ? prodSize &&\r\n              prodSize.map((prodSize) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prodSize.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdSize(prodSize._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdSize(prodSize._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredProdSize.length &&\r\n              filteredProdSize.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdSize(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdSize(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createProdSize }, resetForm }) => {\r\n    const isSuccess = await createProdSize(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(ProdSize);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productciaSize: state.prodSize.prodSize,\r\n    filteredProdSize: state.prodSize.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProdSize: (search) => dispatch(getProdSizeAction(search)),\r\n    filterProdSize: (data) => dispatch(filterProdSizeAction(data)),\r\n    createProdSize: (data) => dispatch(createProdSizeAction(data)),\r\n    deleteProdSize: (id) => dispatch(deleteProdSizeAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createProdType,\r\n  deleteProdType,\r\n  fetchFilteredProdType,\r\n  fetchProdType,\r\n  patchProdType,\r\n} from \"../api/api\";\r\nimport {\r\n  ADD_PROD_TYPE,\r\n  DELETE_PROD_TYPE,\r\n  SET_FILTERED_PROD_TYPE,\r\n  SET_PROD_TYPE,\r\n} from \"./actionTypes\";\r\n\r\nexport const getProdTypeAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchProdType(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_PROD_TYPE, prodType: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\nexport const filterProdTypeAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredProdType(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_TYPE,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_PROD_TYPE,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createProdTypeAction = (prodType) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createProdType(prodType, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_PROD_TYPE, token, prodType: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProdTypeAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteProdType(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_PROD_TYPE, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withFormik } from \"formik\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Prod.module.css\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createProdTypeAction,\r\n  deleteProdTypeAction,\r\n  filterProdTypeAction,\r\n  getProdTypeAction,\r\n} from \"../../store/actions/prodTypeTypeActions\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport { fetchSingleProdType, patchProdType } from \"../../store/api/api\";\r\n\r\nconst ProdType = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchProdType,\r\n  productciaType,\r\n  filteredProdType,\r\n  filterProdType,\r\n  deleteProdType,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleType, setSingleType] = useState({});\r\n  const [prodType, setProdType] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSingleType({ ...singleType, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleProdType = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchProdType(singleType._id, token, singleType).then((res) => {\r\n      res.status === 200 &&\r\n        setProdType((prevState) =>\r\n          prevState.filter((type) =>\r\n            type._id === singleType._id ? (type.name = singleType.name) : type\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleProdType = (id) => {\r\n    const token = getToken();\r\n    fetchSingleProdType(id, token).then((res) => {\r\n      setSingleType(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProdType(productciaType);\r\n  }, [productciaType]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchProdType();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Тип</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук\"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await filterProdType(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleType.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleProdType()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Назва</th>\r\n            <th className={s.status__table}></th>\r\n          </tr>\r\n          {!filteredProdType.length\r\n            ? prodType &&\r\n              prodType.map((prodType) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{prodType.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdType(prodType._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdType(prodType._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : filteredProdType.length &&\r\n              filteredProdType.map((filter) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{filter.name || \"err\"}</td>\r\n                    <td>\r\n                      <div className={s.table__btn}>\r\n                        <button\r\n                          className={s.del}\r\n                          onClick={() => getSingleProdType(filter._id)}\r\n                        >\r\n                          Редагувати\r\n                        </button>\r\n                        <button onClick={() => deleteProdType(filter._id)}>\r\n                          Видалити\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createProdType }, resetForm }) => {\r\n    const isSuccess = await createProdType(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(ProdType);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productciaType: state.prodType.prodType,\r\n    filteredProdType: state.prodType.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProdType: (search) => dispatch(getProdTypeAction(search)),\r\n    filterProdType: (data) => dispatch(filterProdTypeAction(data)),\r\n    createProdType: (data) => dispatch(createProdTypeAction(data)),\r\n    deleteProdType: (id) => dispatch(deleteProdTypeAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport { withFormik } from \"formik\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport s from \"./Productcia.module.css\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  createProdArticleAction,\r\n  deleteProdArticleAction,\r\n  filterProdArticleAction,\r\n  getProdArticleAction,\r\n} from \"../../store/actions/prodTypeArticleActions\";\r\nimport { connect } from \"react-redux\";\r\nimport ProdAsort from \"../../misc/Prod/ProdAsort\";\r\nimport ProdClass from \"../../misc/Prod/ProdClass\";\r\nimport ProdColor from \"../../misc/Prod/ProdColor\";\r\nimport ProdImg from \"../../misc/Prod/ProdImg\";\r\nimport ProdSezon from \"../../misc/Prod/ProdSezon\";\r\nimport ProdSize from \"../../misc/Prod/ProdSize\";\r\nimport ProdType from \"../../misc/Prod/ProdType\";\r\nimport { fetchSingleProdArticle, patchProdArticle } from \"../../store/api/api\";\r\nimport { getToken } from \"../../utils/utils\";\r\n\r\nconst Productcia = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n  fetchProdArticle,\r\n  filteredProdArticle,\r\n  productciaArticle,\r\n  filterProdArticle,\r\n  deleteProdArticle,\r\n}) => {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleArticle, setSingleArticle] = useState({});\r\n  const [prodArticle, setProdArticle] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSingleArticle({ ...singleArticle, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleProdArticle = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchProdArticle(singleArticle._id, token, singleArticle).then((res) => {\r\n      res.status === 200 &&\r\n        setProdArticle((prevState) =>\r\n          prevState.filter((article) =>\r\n            article._id === singleArticle._id\r\n              ? (article.name = singleArticle.name)\r\n              : article\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleProdArticle = (id) => {\r\n    const token = getToken();\r\n    fetchSingleProdArticle(id, token).then((res) => {\r\n      setSingleArticle(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProdArticle(productciaArticle);\r\n  }, [productciaArticle]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchProdArticle();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Tabs>\r\n      <div className={s.main}>\r\n        <TabList className={s.tabs}>\r\n          {[\r\n            \"Артикуль\",\r\n            \"Асортимент\",\r\n            \"Клас\",\r\n            \"Колір\",\r\n            \"Малюнок\",\r\n            \"Сезон\",\r\n            \"Розмір\",\r\n            \"Тип\",\r\n          ].map((item, i) => (\r\n            <Tab\r\n              onClick={() => setActiveTabIndex(i)}\r\n              key={item}\r\n              className={classnames(s.tab, {\r\n                [s.tab__active]: activeTabIndex === i,\r\n              })}\r\n            >\r\n              {item}\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n        <TabPanel>\r\n          <div className={s.title__container}>\r\n            <span className={s.title}>Артикуль</span>\r\n            <hr></hr>\r\n          </div>\r\n          <div className={s.filter__container}>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Пошук працівника\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, search: target.value })\r\n                }\r\n              />\r\n              <Button\r\n                title=\"Пошук\"\r\n                onClick={async () => {\r\n                  await filterProdArticle(dataForFilter);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={s.filter__container}>\r\n              <div className={s.search__container}>\r\n                <Input\r\n                  label=\"Створити\"\r\n                  value={values.name}\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                />\r\n                <Button title=\"Створити\" onClick={handleSubmit} />\r\n              </div>\r\n            </div>\r\n            <div className={s.filter__container}>\r\n              <div className={s.search__container}>\r\n                <Input\r\n                  label=\"Редагувати\"\r\n                  value={singleArticle.name}\r\n                  name=\"name\"\r\n                  onChange={change}\r\n                />\r\n                <Button\r\n                  title=\"Змінити\"\r\n                  onClick={() => patchSingleProdArticle()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table>\r\n              <tr>\r\n                <th className={s.status__table}>Назва</th>\r\n                <th className={s.status__table}></th>\r\n              </tr>\r\n              {!filteredProdArticle.length\r\n                ? prodArticle &&\r\n                  prodArticle.map((prodArt) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{prodArt?.name}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => getSingleProdArticle(prodArt._id)}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deleteProdArticle(prodArt._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : filteredProdArticle.length &&\r\n                  filteredProdArticle.map((filtered) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{filtered.name}</td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => getSingleProdArticle(filtered._id)}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deleteProdArticle(filtered._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <ProdAsort />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <ProdClass />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <ProdColor />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <ProdImg />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <ProdSezon />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <ProdSize />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <ProdType />\r\n        </TabPanel>\r\n      </div>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => {\r\n    return { name: \"\", _id: \"\" };\r\n  },\r\n  handleSubmit: async (values, { props: { createProdArticle }, resetForm }) => {\r\n    const isSuccess = await createProdArticle(values);\r\n\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(Productcia);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productciaArticle: state.prod.prodArticle,\r\n    filteredProdArticle: state.prod.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProdArticle: (search) => dispatch(getProdArticleAction(search)),\r\n    filterProdArticle: (data) => dispatch(filterProdArticleAction(data)),\r\n    createProdArticle: (data) => dispatch(createProdArticleAction(data)),\r\n    deleteProdArticle: (id) => dispatch(deleteProdArticleAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import { getToken } from \"../../utils/utils\";\r\nimport {\r\n  createOperations,\r\n  deleteOperations,\r\n  fetchOperations,\r\n  fetchSearchOperations,\r\n  patchOperations,\r\n} from \"../api/api\";\r\nimport {\r\n  SET_OPERATIONS,\r\n  SET_FILTERED_OPERATIONS,\r\n  ADD_OPERATIONS,\r\n  DELETE_OPERATIONS,\r\n} from \"./actionTypes\";\r\n\r\nexport const getOperationsAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchOperations(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_OPERATIONS, operations: response.data });\r\n    }\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const searchOperationsAction = ({ search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSearchOperations(search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_OPERATIONS,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_OPERATIONS,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createOperationsAction = (operations) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createOperations(operations, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_OPERATIONS, token, operations: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editOperationsAction = (operations, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchOperations(operations, token, id);\r\n    dispatch({ type: ADD_OPERATIONS, token });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteOperationsAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteOperations(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_OPERATIONS, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./Operations.module.css\";\r\nimport { withFormik } from \"formik\";\r\nimport {\r\n  getOperationsAction,\r\n  searchOperationsAction,\r\n  deleteOperationsAction,\r\n  createOperationsAction,\r\n} from \"../../store/actions/operationsAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { getToken } from \"../../utils/utils\";\r\nimport { fetchSingleOperations, patchOperations } from \"../../store/api/api\";\r\n\r\nconst Operations = ({\r\n  searchOperations,\r\n  filteredOperations,\r\n  operations,\r\n  deleteOperations,\r\n  getOperations,\r\n  handleChange,\r\n  handleSubmit,\r\n  values,\r\n}) => {\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const [singleOperation, setSingleOperation] = useState({});\r\n  const [operation, setOperation] = useState([]);\r\n\r\n  const change = (e) => {\r\n    setSingleOperation({ ...singleOperation, name: e.target.value });\r\n  };\r\n\r\n  const patchSingleOperation = (id) => {\r\n    alert(\"Змінено\");\r\n    const token = getToken();\r\n    patchOperations(singleOperation._id, token, singleOperation).then((res) => {\r\n      res.status === 200 &&\r\n        setOperation((prevState) =>\r\n          prevState.filter((oper) =>\r\n            oper._id === singleOperation._id\r\n              ? (oper.name = singleOperation.name)\r\n              : oper\r\n          )\r\n        );\r\n    });\r\n  };\r\n\r\n  const getSingleOperation = (id) => {\r\n    const token = getToken();\r\n    fetchSingleOperations(id, token).then((res) => {\r\n      setSingleOperation(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOperation(operations);\r\n  }, [operations]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getOperations();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Операції</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.filter__container}>\r\n        <div className={s.search__container}>\r\n          <Input\r\n            label=\"Пошук \"\r\n            onChange={({ target }) =>\r\n              setDataForFilter({ ...dataForFilter, search: target.value })\r\n            }\r\n          />\r\n          <Button\r\n            title=\"Пошук\"\r\n            onClick={async () => {\r\n              await searchOperations(dataForFilter);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Створити\"\r\n              value={values.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button title=\"Створити\" onClick={handleSubmit} />\r\n          </div>\r\n        </div>\r\n        <div className={s.filter__container}>\r\n          <div className={s.search__container}>\r\n            <Input\r\n              label=\"Редагувати\"\r\n              value={singleOperation.name}\r\n              name=\"name\"\r\n              onChange={change}\r\n            />\r\n            <Button title=\"Змінити\" onClick={() => patchSingleOperation()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.table}>\r\n        <table>\r\n          <tr>\r\n            <th className={s.status__table}>Ім'я</th>\r\n            <th></th>\r\n          </tr>\r\n          {filteredOperations.length &&\r\n            filteredOperations?.map((filtered) => {\r\n              return (\r\n                <tr key={operations._id}>\r\n                  <td>{filtered?.name}</td>\r\n                  <td>\r\n                    <div className={s.table__btn}>\r\n                      <button\r\n                        className={s.del}\r\n                        onClick={() => getSingleOperation(filtered._id)}\r\n                      >\r\n                        Редагувати\r\n                      </button>\r\n                      <button onClick={() => deleteOperations(filtered._id)}>\r\n                        Видалити\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { createOperations }, resetForm }) => {\r\n    const isSuccess = await createOperations(values);\r\n    if (isSuccess) {\r\n      alert(\"Створено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({ name: \"\" });\r\n  },\r\n})(Operations);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    operations: state.operations.operations,\r\n    filteredOperations: state.operations.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n    searchOperations: (data) => dispatch(searchOperationsAction(data)),\r\n    createOperations: (data) => dispatch(createOperationsAction(data)),\r\n    deleteOperations: (id) => dispatch(deleteOperationsAction(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Zvitu.module.css\";\r\nimport classnames from \"classnames\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ReactToExcel from \"react-html-table-to-excel\";\r\nimport Barcode from \"react-barcode\";\r\nimport {\r\n  deleteZvituAction,\r\n  filterZvituAction,\r\n  getZvituAction,\r\n} from \"../../store/actions/Zvitu/zvituActions\";\r\nimport {\r\n  deleteZvituRozxidAction,\r\n  filterZvituRozxidAction,\r\n  getZvituRozxidAction,\r\n} from \"../../store/actions/Zvitu/zvituRozhidActions\";\r\nimport {\r\n  filterZvituZalushokAction,\r\n  getZvituZalushokAction,\r\n} from \"../../store/actions/Zvitu/zvituZalushokActions\";\r\n\r\nconst Zvitu = ({\r\n  getZvitu,\r\n  filterZvitu,\r\n  deleteZvitu,\r\n  filteredZvitu,\r\n  getZvituRozxid,\r\n  zvitu,\r\n  zvituRozxid,\r\n  filterZvituRozxid,\r\n  filteredZvituRozxid,\r\n  deleteZvituRozxid,\r\n  getZvituZalushok,\r\n  filterZvituZalushok,\r\n  filteredZvituZalushok,\r\n  zvituZalushok,\r\n}) => {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n  const [dataForFilter, setDataForFilter] = useState([]);\r\n  const h = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getZvitu();\r\n      await getZvituRozxid();\r\n      // await getZvituZalushok();\r\n    })();\r\n  }, []);\r\n  return (\r\n    <Tabs>\r\n      <div className={s.main}>\r\n        <div className={s.title__container}>\r\n          <span className={s.title}>Звіти</span>\r\n          <hr></hr>\r\n        </div>\r\n        <div className={s.btn__container}>\r\n          <Link to=\"create-zvitu\" className={s.create__worker}>\r\n            <Button title=\"Створити прихід\" />\r\n          </Link>\r\n          <Link to=\"create-zvitu-rozxid\" className={s.create__worker}>\r\n            <Button title=\"Створити розхід\" />\r\n          </Link>\r\n        </div>\r\n        <TabList className={s.tabs}>\r\n          {[\"Прихід\", \"Розхід\", \"Залишок\"].map((item, i) => (\r\n            <Tab\r\n              onClick={() => setActiveTabIndex(i)}\r\n              key={item}\r\n              className={classnames(s.tab, {\r\n                [s.tab__active]: activeTabIndex === i,\r\n              })}\r\n            >\r\n              {item}\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n        <TabPanel>\r\n          <div className={s.filter__container}>\r\n            {/* <div className={s.barcode}>\r\n              <Barcode value=\"hey\" />,\r\n            </div> */}\r\n\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Пошук\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, search: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Період з:\"\r\n                type=\"date\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, from: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"до:\"\r\n                type=\"date\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, to: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.create__worker}>\r\n              <div className={s.exel__wrapper}>\r\n                <ReactToExcel\r\n                  table=\"table-to-xls\"\r\n                  filename=\"Sklad-1\"\r\n                  sheet=\"sheet 1\"\r\n                  buttonText=\"EXPORT\"\r\n                  className=\"exel\"\r\n                />\r\n              </div>\r\n              <Button\r\n                title=\"Пошук\"\r\n                onClick={async () => {\r\n                  await filterZvitu(dataForFilter);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table id=\"table-to-xls\">\r\n              <tr>\r\n                <th className={s.status__table}>ID Операції</th>\r\n                <th className={s.status__table}>Гатунок 1</th>\r\n                <th className={s.status__table}>Гатунок 2 </th>\r\n                <th className={s.status__table}>Гатунок 3</th>\r\n                <th className={s.status__table}>ID працівника</th>\r\n                <th className={s.status__table}>Дата</th>\r\n                <th className={s.status__table}>Змінено</th>\r\n                <th className={s.status__table}> </th>\r\n                <th></th>\r\n              </tr>\r\n              {!filteredZvitu.length\r\n                ? zvitu &&\r\n                  zvitu.map((zvit) => {\r\n                    return (\r\n                      <tr key={zvit._id}>\r\n                        <td>{zvit.operationId?.name}</td>\r\n                        <td>{zvit.gatynok1}</td>\r\n                        <td>{zvit.gatynok2}</td>\r\n                        <td>{zvit.gatynok3}</td>\r\n                        <td>\r\n                          {zvit.workerId?.fName + \" \" + zvit.workerId?.sName}\r\n                        </td>\r\n                        <td>{zvit.date_prixodu?.slice(0, 10)}</td>\r\n                        <td>\r\n                          {zvit.changesId?.firstName +\r\n                            \" \" +\r\n                            zvit.changesId?.lastName}\r\n                        </td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => h.push(`/edit-zvitu/${zvit._id}`)}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button onClick={() => deleteZvitu(zvit._id)}>\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : filteredZvitu.length &&\r\n                  filteredZvitu.map((filter) => {\r\n                    return (\r\n                      <tr key={filter._id}>\r\n                        <td>{filter.operationId?.name}</td>\r\n                        <td>{filter.gatynok1}</td>\r\n                        <td>{filter.gatynok2}</td>\r\n                        <td>{filter.gatynok3}</td>\r\n                        <td>\r\n                          {filter.workerId?.fName +\r\n                            \" \" +\r\n                            filter.workerId?.sName}\r\n                        </td>\r\n                        <td>{filter.date_prixodu?.slice(0, 10)}</td>\r\n                        <td>\r\n                          {filter.changesId?.firstName +\r\n                            \" \" +\r\n                            filter.changesId?.lastName}\r\n                        </td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() =>\r\n                                h.push(`/edit-zvitu/${filter._id}`)\r\n                              }\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button onClick={() => deleteZvitu(filter._id)}>\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <div className={s.filter__container}>\r\n            {/* <div className={s.barcode}>\r\n              <Barcode value=\"hey\" />,\r\n            </div> */}\r\n\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Пошук\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, search: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Період з:\"\r\n                type=\"date\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, from: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"до:\"\r\n                type=\"date\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, to: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.create__worker}>\r\n              <div className={s.exel__wrapper}>\r\n                <ReactToExcel\r\n                  table=\"table-to-xls\"\r\n                  filename=\"Sklad-1\"\r\n                  sheet=\"sheet 1\"\r\n                  buttonText=\"EXPORT\"\r\n                  className=\"exel\"\r\n                />\r\n              </div>\r\n              <Button\r\n                title=\"Пошук\"\r\n                onClick={async () => {\r\n                  await filterZvituZalushok(dataForFilter);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table id=\"table-to-xls\">\r\n              <tr>\r\n                <th className={s.status__table}>ID Операції</th>\r\n                <th className={s.status__table}>Гатунок 1</th>\r\n                <th className={s.status__table}>Гатунок 2 </th>\r\n                <th className={s.status__table}>Гатунок 3</th>\r\n                <th className={s.status__table}>ID працівника</th>\r\n                <th className={s.status__table}>Дата</th>\r\n                <th className={s.status__table}>Змінено</th>\r\n                <th></th>\r\n              </tr>\r\n              {!filteredZvituRozxid.length\r\n                ? zvituRozxid &&\r\n                  zvituRozxid.map((zvitRozxid) => {\r\n                    return (\r\n                      <tr key={zvitRozxid._id}>\r\n                        <td>{zvitRozxid.operationId?.name}</td>\r\n                        <td>{zvitRozxid.gatynok1}</td>\r\n                        <td>{zvitRozxid.gatynok2}</td>\r\n                        <td>{zvitRozxid.gatynok3}</td>\r\n                        <td>\r\n                          {zvitRozxid.workerId?.fName +\r\n                            \" \" +\r\n                            zvitRozxid.workerId?.sName}\r\n                        </td>\r\n                        <td>{zvitRozxid.date_rozxodu?.slice(0, 10)}</td>\r\n                        <td>\r\n                          {zvitRozxid.changesId?.firstName +\r\n                            \" \" +\r\n                            zvitRozxid.changesId?.lastName}\r\n                        </td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() =>\r\n                                h.push(`/edit-zvitu-rozxid/${zvitRozxid._id}`)\r\n                              }\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deleteZvituRozxid(zvitRozxid._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : filteredZvituRozxid.length &&\r\n                  filteredZvituRozxid.map((filter) => {\r\n                    return (\r\n                      <tr key={filter._id}>\r\n                        <td>{filter.operationId?.name}</td>\r\n                        <td>{filter.gatynok1}</td>\r\n                        <td>{filter.gatynok2}</td>\r\n                        <td>{filter.gatynok3}</td>\r\n                        <td>\r\n                          {filter.workerId?.fName +\r\n                            \" \" +\r\n                            filter.workerId?.sName}\r\n                        </td>\r\n                        <td>{filter.date_rozxodu?.slice(0, 10)}</td>\r\n                        <td>\r\n                          {filter.changesId?.firstName +\r\n                            \" \" +\r\n                            filter.changesId?.lastName}\r\n                        </td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() =>\r\n                                h.push(`/edit-zvitu-rozxid/${filter._id}`)\r\n                              }\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deleteZvituRozxid(filter._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <div className={s.filter__container}>\r\n            {/* <div className={s.barcode}>\r\n              <Barcode value=\"hey\" />,\r\n            </div> */}\r\n\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Пошук\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, search: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"Період з:\"\r\n                type=\"date\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, from: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.search__container}>\r\n              <Input\r\n                label=\"до:\"\r\n                type=\"date\"\r\n                onChange={({ target }) =>\r\n                  setDataForFilter({ ...dataForFilter, to: target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className={s.create__worker}>\r\n              <div className={s.exel__wrapper}>\r\n                <ReactToExcel\r\n                  table=\"table-to-xls\"\r\n                  filename=\"Sklad-1\"\r\n                  sheet=\"sheet 1\"\r\n                  buttonText=\"EXPORT\"\r\n                  className=\"exel\"\r\n                />\r\n              </div>\r\n              <Button\r\n                title=\"Пошук\"\r\n                onClick={async () => {\r\n                  await filterZvituRozxid(dataForFilter);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={s.table}>\r\n            <table id=\"table-to-xls\">\r\n              <tr>\r\n                <th className={s.status__table}>ID Операції</th>\r\n                <th className={s.status__table}>Гатунок 1</th>\r\n                <th className={s.status__table}>Гатунок 2 </th>\r\n                <th className={s.status__table}>Гатунок 3</th>\r\n                <th className={s.status__table}>ID працівника</th>\r\n                <th className={s.status__table}>Дата</th>\r\n                <th className={s.status__table}>Змінено</th>\r\n                <th></th>\r\n              </tr>\r\n              {!filteredZvituZalushok.length\r\n                ? zvituZalushok &&\r\n                  zvituZalushok.map((zvitz) => {\r\n                    return (\r\n                      <tr key={zvitz._id}>\r\n                        <td>{zvitz.operationId?.name}</td>\r\n                        <td>{zvitz.gatynok1}</td>\r\n                        <td>{zvitz.gatynok2}</td>\r\n                        <td>{zvitz.gatynok3}</td>\r\n                        <td>\r\n                          {zvitz.workerId?.fName + \" \" + zvitz.workerId?.sName}\r\n                        </td>\r\n                        <td>{zvitz.date_rozxodu?.slice(0, 10)}</td>\r\n                        <td>\r\n                          {zvitz.changesId?.firstName +\r\n                            \" \" +\r\n                            zvitz.changesId?.lastName}\r\n                        </td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => h.push(\"/edit\")}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deleteZvituRozxid(zvitz._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : filteredZvituZalushok.length &&\r\n                  filteredZvituZalushok.map((filter) => {\r\n                    return (\r\n                      <tr key={filter._id}>\r\n                        <td>{filter.operationId?.name}</td>\r\n                        <td>{filter.gatynok1}</td>\r\n                        <td>{filter.gatynok2}</td>\r\n                        <td>{filter.gatynok3}</td>\r\n                        <td>\r\n                          {filter.workerId?.fName +\r\n                            \" \" +\r\n                            filter.workerId?.sName}\r\n                        </td>\r\n                        <td>{filter.date_rozxodu?.slice(0, 10)}</td>\r\n                        <td>\r\n                          {filter.changesId?.firstName +\r\n                            \" \" +\r\n                            filter.changesId?.lastName}\r\n                        </td>\r\n                        <td>\r\n                          <div className={s.table__btn}>\r\n                            <button\r\n                              className={s.del}\r\n                              onClick={() => h.push(\"/edit\")}\r\n                            >\r\n                              Редагувати\r\n                            </button>\r\n                            <button\r\n                              onClick={() => deleteZvituRozxid(filter._id)}\r\n                            >\r\n                              Видалити\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n        </TabPanel>\r\n      </div>\r\n    </Tabs>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    zvitu: state.zvitu.zvitu,\r\n    filteredZvitu: state.zvitu.filtered,\r\n    zvituRozxid: state.zvituRozxid.zvituRozxid,\r\n    filteredZvituRozxid: state.zvituRozxid.filtered,\r\n    zvituZalushok: state.zvituZalushok.zvituZalushok,\r\n    filteredZvituZalushok: state.zvituZalushok.filtered,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getZvitu: () => dispatch(getZvituAction()),\r\n    filterZvitu: (data) => dispatch(filterZvituAction(data)),\r\n    deleteZvitu: (id) => dispatch(deleteZvituAction(id)),\r\n    getZvituRozxid: () => dispatch(getZvituRozxidAction()),\r\n    filterZvituRozxid: (data) => dispatch(filterZvituRozxidAction(data)),\r\n    deleteZvituRozxid: (id) => dispatch(deleteZvituRozxidAction(id)),\r\n    getZvituZalushok: () => dispatch(getZvituZalushokAction()),\r\n    filterZvituZalushok: (data) => dispatch(filterZvituZalushokAction(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Zvitu);\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createZvitu,\r\n  deleteZvitu,\r\n  fetchFilteredZvitu,\r\n  fetchSingleZvitu,\r\n  fetchZvitu,\r\n  patchZvitu,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_ZVITU,\r\n  DELETE_ZVITU,\r\n  SET_FILTERED_ZVITU,\r\n  SET_SINGLE_ZVITU,\r\n  SET_ZVITU,\r\n} from \"../actionTypes\";\r\n\r\nexport const getZvituAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchZvitu(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_ZVITU, zvitu: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterZvituAction = ({ from, to, search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredZvitu(from, to, search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_ZVITU,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_ZVITU,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSingleZvituAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSingleZvitu(id, token);\r\n    dispatch({ type: SET_SINGLE_ZVITU, singleZvitu: response.data });\r\n  };\r\n};\r\n\r\nexport const createZvituAction = (zvitu) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createZvitu(zvitu, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_ZVITU, token, zvitu: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editZvituAction = (zvitu, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchZvitu(id, token, zvitu);\r\n    dispatch({ type: ADD_ZVITU, token, zvitu: response.data });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteZvituAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteZvitu(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_ZVITU, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport {\r\n  createZvituRozxid,\r\n  deleteZvituRozxid,\r\n  fetchFilteredZvituRozxid,\r\n  fetchSingleZvituRozxid,\r\n  fetchZvituRozxid,\r\n  patchZvituRozxid,\r\n} from \"../../api/api\";\r\nimport {\r\n  ADD_ZVITU_ROZXID,\r\n  DELETE_ZVITU_ROZXID,\r\n  SET_FILTERED_ZVITU_ROZXID,\r\n  SET_SINGLE_ZVITU_ROZXID,\r\n  SET_ZVITU_ROZXID,\r\n} from \"../actionTypes\";\r\n\r\nexport const getZvituRozxidAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchZvituRozxid(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_ZVITU_ROZXID, zvituRozxid: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterZvituRozxidAction = ({ from, to, search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredZvituRozxid(from, to, search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_ZVITU_ROZXID,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_ZVITU_ROZXID,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSingleZvituRozxidAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchSingleZvituRozxid(id, token);\r\n    dispatch({\r\n      type: SET_SINGLE_ZVITU_ROZXID,\r\n      singleZvituRozxid: response.data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createZvituRozxidAction = (zvituRozxid) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await createZvituRozxid(zvituRozxid, token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: ADD_ZVITU_ROZXID, token, zvituRozxid: response.data });\r\n      return true;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editZvituRozxidAction = (zvituRozxid, id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await patchZvituRozxid(zvituRozxid, token, id);\r\n    dispatch({ type: ADD_ZVITU_ROZXID, token, zvituRozxid: response.data });\r\n    return response.status === 200;\r\n  };\r\n};\r\n\r\nexport const deleteZvituRozxidAction = (id) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const responce = await deleteZvituRozxid(id, token);\r\n    if (responce.status === 200) {\r\n      dispatch({ type: DELETE_ZVITU_ROZXID, id });\r\n    }\r\n    return responce.status === 200;\r\n  };\r\n};\r\n","import { getToken } from \"../../../utils/utils\";\r\nimport { fetchFilteredZvituZalushok, fetchZvituZalushok } from \"../../api/api\";\r\nimport {\r\n  SET_FILTERED_ZVITU_ZALUSHOK,\r\n  SET_ZVITU_ZALUSHOK,\r\n} from \"../actionTypes\";\r\n\r\nexport const getZvituZalushokAction = () => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchZvituZalushok(token);\r\n    if (response.status === 200) {\r\n      dispatch({ type: SET_ZVITU_ZALUSHOK, zvituZalushok: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterZvituZalushokAction = ({ from, to, search }) => {\r\n  return async (dispatch) => {\r\n    const token = getToken();\r\n    const response = await fetchFilteredZvituZalushok(from, to, search, token);\r\n    if (response?.data) {\r\n      dispatch({\r\n        type: SET_FILTERED_ZVITU_ZALUSHOK,\r\n        filtered: response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_FILTERED_ZVITU_ZALUSHOK,\r\n        filtered: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./CreateWorker.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { createWorkerAction } from \"../../store/actions/workersActions\";\r\nimport { getOperationsAction } from \"../../store/actions/operationsAction\";\r\n\r\nconst CreateWorker = ({\r\n  values,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  getOperations,\r\n  setValues,\r\n  operations,\r\n  errors,\r\n}) => {\r\n  const [operationsOptions, setOperationsOptions] = useState([]);\r\n  const options = [\r\n    { value: \"worked\", label: \"Працює\" },\r\n    { value: \"not-worked\", label: \"Не працює\" },\r\n  ];\r\n\r\n  const statusSelect = (options) => {\r\n    setValues({ ...values, status: options.value });\r\n  };\r\n\r\n  const operationSelect = (operations) => {\r\n    setValues({ ...values, operationId: operations.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOperationsOptions(\r\n      operations.map((opt) => {\r\n        return { label: opt.name, value: opt._id };\r\n      })\r\n    );\r\n  }, [operations]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getOperations();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Створити працівника</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            label=\"Прізвище\"\r\n            value={values.fName}\r\n            name=\"fName\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n          />\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"І'мя\"\r\n              value={values.sName}\r\n              name=\"sName\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </div>\r\n\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"По-батькові\"\r\n              value={values.fatherName}\r\n              name=\"fatherName\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Статус</span>\r\n            </div>\r\n            <Select\r\n              options={options}\r\n              value={values.status.label}\r\n              name=\"status\"\r\n              onChange={statusSelect}\r\n              onBlur={handleBlur}\r\n            />\r\n            <div className={s.select__container}>\r\n              <div className={s.span}>\r\n                <span>Операція</span>\r\n              </div>\r\n              <Select\r\n                options={operationsOptions}\r\n                value={values.operationId.label}\r\n                name=\"operationId\"\r\n                onChange={operationSelect}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button\r\n          title=\"Створити\"\r\n          onClick={handleSubmit}\r\n          disabled={!!errors.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    fName: \"\",\r\n    sName: \"\",\r\n    fatherName: \"\",\r\n    operationId: {},\r\n    status: {},\r\n  }),\r\n  validate: (values) => {\r\n    const errors = {};\r\n    if (\r\n      !values.fName ||\r\n      !values.sName ||\r\n      !values.fatherName ||\r\n      !values.operationId ||\r\n      !values.status\r\n    ) {\r\n      errors.name = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: async (values, { props: { createWorker, history } }) => {\r\n    const workerToSubmit = {\r\n      status: values.status,\r\n      operationId: values.operationId,\r\n      fName: values.fName,\r\n      fatherName: values.fatherName,\r\n      sName: values.sName,\r\n    };\r\n    const isSuccess = await createWorker(workerToSubmit);\r\n    if (isSuccess) {\r\n      history.push(\"/workers\") || alert(\"Створено\");\r\n    } else {\r\n      alert(\"Помилка\");\r\n    }\r\n  },\r\n})(CreateWorker);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    operations: state.operations.operations,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createWorker: (workers) => dispatch(createWorkerAction(workers)),\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./CreatePrices.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { getProdArticleAction } from \"../../store/actions/prodTypeArticleActions\";\r\nimport { createRoztsinkaAction } from \"../../store/actions/roztsinkaActions\";\r\nimport { getProdTypeAction } from \"../../store/actions/prodTypeTypeActions\";\r\nimport { getProdSizeAction } from \"../../store/actions/prodTypeSizeActions\";\r\nimport { getProdSezonAction } from \"../../store/actions/prodTypeSezonActions\";\r\nimport { getProdAsortumentAction } from \"../../store/actions/prodTypeAsortActions\";\r\nimport { getProdClassAction } from \"../../store/actions/prodTypeClassActions\";\r\nimport { getProdColorAction } from \"../../store/actions/prodTypeColorActions\";\r\nimport { getProdImageAction } from \"../../store/actions/prodTypeImageActions\";\r\nimport { getMachineAction } from \"../../store/actions/Machine/machineActions\";\r\nimport { getOperationsAction } from \"../../store/actions/operationsAction\";\r\n\r\nconst CreatePrices = ({\r\n  values,\r\n  handleChange,\r\n  handleSubmit,\r\n  setValues,\r\n  fetchProdArticle,\r\n  articleId,\r\n  fetchProdType,\r\n  typeId,\r\n  fetchProdSize,\r\n  sizeId,\r\n  fetchProdSezon,\r\n  seasonId,\r\n  fetchProdAsortument,\r\n  asortument,\r\n  fetchProdImage,\r\n  imageId,\r\n  fetchProdClass,\r\n  classId,\r\n  fetchProdColor,\r\n  colorId,\r\n  fetchMachine,\r\n  machineId,\r\n  getOperations,\r\n  operations,\r\n  errors,\r\n}) => {\r\n  const [articleOptions, setArticleOptions] = useState([]);\r\n  const [typeOptions, setTypeOptions] = useState([]);\r\n  const [sizeOptions, setSizeOptions] = useState([]);\r\n  const [sezonOptions, setSezonOptions] = useState([]);\r\n  const [asortumenOptions, setAsortumenOptions] = useState([]);\r\n  const [imageOptions, setImageOptions] = useState([]);\r\n  const [classOptions, setClassOptions] = useState([]);\r\n  const [colorOptions, setColorOptions] = useState([]);\r\n  const [operationsOptions, setOperationsOptions] = useState([]);\r\n  const [machinesOptions, setMachinesOptions] = useState([]);\r\n\r\n  const options = [\r\n    { value: 1, label: 1 },\r\n    { value: 2, label: 2 },\r\n    { value: 3, label: 3 },\r\n  ];\r\n\r\n  const gatynokSelect = (options) => {\r\n    setValues({ ...values, gatynok: options.value });\r\n  };\r\n\r\n  const asortumentSelect = (asortument) => {\r\n    setValues({ ...values, asortument: asortument.value });\r\n  };\r\n  const classSelect = (classId) => {\r\n    setValues({ ...values, classId: classId.value });\r\n  };\r\n  const colorSelect = (colorId) => {\r\n    setValues({ ...values, colorId: colorId.value });\r\n  };\r\n  const imageSelect = (imageId) => {\r\n    setValues({ ...values, imageId: imageId.value });\r\n  };\r\n  const sizeSelect = (sizeId) => {\r\n    setValues({ ...values, sizeId: sizeId.value });\r\n  };\r\n\r\n  const sezonSelect = (seasonId) => {\r\n    setValues({ ...values, seasonId: seasonId.value });\r\n  };\r\n  const typeSelect = (typeId) => {\r\n    setValues({ ...values, typeId: typeId.value });\r\n  };\r\n\r\n  const articleSelect = (articleId) => {\r\n    setValues({ ...values, articleId: articleId.value });\r\n  };\r\n\r\n  const operationSelect = (operations) => {\r\n    setValues({ ...values, operationId: operations.value });\r\n  };\r\n\r\n  const machinesSelect = (machineId) => {\r\n    setValues({ ...values, machineId: machineId.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMachinesOptions(\r\n      machineId.length &&\r\n        machineId.map((opt) => {\r\n          return { label: opt.name, value: opt._id };\r\n        })\r\n    );\r\n  }, [machineId]);\r\n\r\n  useEffect(() => {\r\n    setOperationsOptions(\r\n      operations.map((opt) => {\r\n        return { label: opt.name, value: opt._id };\r\n      })\r\n    );\r\n  }, [operations]);\r\n\r\n  useEffect(() => {\r\n    setAsortumenOptions(\r\n      asortument.length &&\r\n        asortument.map((asort) => {\r\n          return { label: asort.name, value: asort._id };\r\n        })\r\n    );\r\n  }, [asortument]);\r\n\r\n  useEffect(() => {\r\n    setClassOptions(\r\n      classId.length &&\r\n        classId.map((cls) => {\r\n          return { label: cls.name, value: cls._id };\r\n        })\r\n    );\r\n  }, [classId]);\r\n  useEffect(() => {\r\n    setColorOptions(\r\n      colorId.length &&\r\n        colorId.map((col) => {\r\n          return { label: col.name, value: col._id };\r\n        })\r\n    );\r\n  }, [colorId]);\r\n  useEffect(() => {\r\n    setImageOptions(\r\n      imageId.length &&\r\n        imageId.map((img) => {\r\n          return { label: img.name, value: img._id };\r\n        })\r\n    );\r\n  }, [imageId]);\r\n\r\n  useEffect(() => {\r\n    setSizeOptions(\r\n      sizeId.length &&\r\n        sizeId.map((size) => {\r\n          return { label: size.name, value: size._id };\r\n        })\r\n    );\r\n  }, [sizeId]);\r\n\r\n  useEffect(() => {\r\n    setArticleOptions(\r\n      articleId.length &&\r\n        articleId.map((art) => {\r\n          return { label: art.name, value: art._id };\r\n        })\r\n    );\r\n  }, [articleId]);\r\n  useEffect(() => {\r\n    setSezonOptions(\r\n      seasonId.length &&\r\n        seasonId.map((sez) => {\r\n          return { label: sez.name, value: sez._id };\r\n        })\r\n    );\r\n  }, [seasonId]);\r\n\r\n  useEffect(() => {\r\n    setTypeOptions(\r\n      typeId.length &&\r\n        typeId.map((type) => {\r\n          return { label: type.name, value: type._id };\r\n        })\r\n    );\r\n  }, [typeId]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMachine();\r\n      await getOperations();\r\n      await fetchProdAsortument();\r\n      await fetchProdSezon();\r\n      await fetchProdSize();\r\n      await fetchProdArticle();\r\n      await fetchProdType();\r\n      await fetchProdImage();\r\n      await fetchProdClass();\r\n      await fetchProdColor();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Створити розцінку</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            type=\"date\"\r\n            value={values.startDate}\r\n            name=\"startDate\"\r\n            label=\"Початок\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            type=\"date\"\r\n            value={values.endDate}\r\n            name=\"endDate\"\r\n            label=\"Завершення\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            type=\"number\"\r\n            value={values.price}\r\n            name=\"price\"\r\n            label=\"Ціна\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            label=\"Назва\"\r\n            value={values.name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Гатунок</span>\r\n            </div>\r\n            <Select\r\n              options={options}\r\n              value={values.gatynok.label}\r\n              name=\"gatynok\"\r\n              onChange={gatynokSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Обладнання</span>\r\n            </div>\r\n            <Select\r\n              options={machinesOptions}\r\n              value={values.machineId.label}\r\n              name=\"machineId\"\r\n              onChange={machinesSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={s.left}>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Операція</span>\r\n            </div>\r\n            <Select\r\n              options={operationsOptions}\r\n              value={values.operationId.label}\r\n              name=\"operationId\"\r\n              onChange={operationSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Тип</span>\r\n            </div>\r\n            <Select\r\n              options={typeOptions}\r\n              value={values.typeId.label}\r\n              name=\"typeId\"\r\n              onChange={typeSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Артикуль</span>\r\n            </div>\r\n            <Select\r\n              options={articleOptions}\r\n              value={values.articleId.label}\r\n              name=\"articleId\"\r\n              onChange={articleSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Колір</span>\r\n            </div>\r\n            <Select\r\n              options={colorOptions}\r\n              value={values.colorId.label}\r\n              name=\"colorId\"\r\n              onChange={colorSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Клас</span>\r\n            </div>\r\n            <Select\r\n              options={classOptions}\r\n              value={values.classId.label}\r\n              name=\"classId\"\r\n              onChange={classSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Асортимент</span>\r\n            </div>\r\n            <Select\r\n              options={asortumenOptions}\r\n              value={values.asortument.label}\r\n              name=\"asortument\"\r\n              onChange={asortumentSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Малюнок</span>\r\n            </div>\r\n            <Select\r\n              options={imageOptions}\r\n              value={values.imageId.label}\r\n              name=\"imageId\"\r\n              onChange={imageSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Сезон</span>\r\n            </div>\r\n            <Select\r\n              options={sezonOptions}\r\n              value={values.seasonId.label}\r\n              name=\"seasonId\"\r\n              onChange={sezonSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Розмір</span>\r\n            </div>\r\n            <Select\r\n              options={sizeOptions}\r\n              value={values.sizeId.label}\r\n              name=\"sizeId\"\r\n              onChange={sizeSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button\r\n          title=\"Створити\"\r\n          onClick={handleSubmit}\r\n          disabled={!!errors.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    gatynok: {},\r\n    asortument: {},\r\n    articleId: {},\r\n    typeId: {},\r\n    sizeId: {},\r\n    seasonId: {},\r\n    imageId: {},\r\n    classId: {},\r\n    colorId: {},\r\n    operationId: {},\r\n    machineId: {},\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    price: \"\",\r\n    name: \"\",\r\n  }),\r\n  validate: (values) => {\r\n    const errors = {};\r\n    if (\r\n      !values.asortument ||\r\n      !values.articleId ||\r\n      !values.typeId ||\r\n      !values.sizeId ||\r\n      !values.seasonId ||\r\n      !values.imageId ||\r\n      !values.classId ||\r\n      !values.colorId ||\r\n      !values.operationId ||\r\n      !values.startDate ||\r\n      !values.machineId ||\r\n      !values.endDate ||\r\n      !values.price ||\r\n      !values.name\r\n    ) {\r\n      errors.name = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: async (values, { props: { createPrices, history } }) => {\r\n    const pricesToSubmit = {\r\n      gatynok: values.gatynok,\r\n      asortument: values.asortument,\r\n      typeId: values.typeId,\r\n      articleId: values.articleId,\r\n      sizeId: values.sizeId,\r\n      seasonId: values.seasonId,\r\n      classId: values.classId,\r\n      imageId: values.imageId,\r\n      colorId: values.colorId,\r\n      startDate: values.startDate,\r\n      endDate: values.endDate,\r\n      price: values.price,\r\n      name: values.name,\r\n      operationId: values.operationId,\r\n      machineId: values.machineId,\r\n    };\r\n    const isSuccess = await createPrices(pricesToSubmit);\r\n    if (isSuccess) {\r\n      alert(\"Створено\") || history.push(\"/prices\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n  },\r\n})(CreatePrices);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    operations: state.operations.operations,\r\n    articleId: state.prod.prodArticle,\r\n    typeId: state.prodType.prodType,\r\n    sizeId: state.prodSize.prodSize,\r\n    seasonId: state.prodSezon.prodSezon,\r\n    asortument: state.prodAsortument.prodAsortument,\r\n    classId: state.prodClass.prodClass,\r\n    colorId: state.prodColor.prodColor,\r\n    imageId: state.prodImage.prodImage,\r\n    machineId: state.machines.machines,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createPrices: (roztsinka) => dispatch(createRoztsinkaAction(roztsinka)),\r\n    fetchProdType: () => dispatch(getProdTypeAction()),\r\n    fetchProdArticle: () => dispatch(getProdArticleAction()),\r\n    fetchProdSize: () => dispatch(getProdSizeAction()),\r\n    fetchProdSezon: () => dispatch(getProdSezonAction()),\r\n    fetchProdAsortument: () => dispatch(getProdAsortumentAction()),\r\n    fetchProdClass: () => dispatch(getProdClassAction()),\r\n    fetchProdColor: () => dispatch(getProdColorAction()),\r\n    fetchProdImage: () => dispatch(getProdImageAction()),\r\n    fetchMachine: () => dispatch(getMachineAction()),\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./EditWorker.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport {\r\n  editWorkerAction,\r\n  getSingleWorkerAction,\r\n} from \"../../store/actions/workersActions\";\r\nimport { getOperationsAction } from \"../../store/actions/operationsAction\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst EditWorker = ({\r\n  values,\r\n  handleChange,\r\n  handleSubmit,\r\n  getOperations,\r\n  setValues,\r\n  operations,\r\n  singleWorker,\r\n  getSingleWorker,\r\n  errors,\r\n}) => {\r\n  const [operationsOptions, setOperationsOptions] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  const options = [\r\n    { value: \"worked\", label: \"Працює\" },\r\n    { value: \"not-worked\", label: \"Не працює\" },\r\n  ];\r\n\r\n  const statusSelect = (options) => {\r\n    setValues({ ...values, status: options.value });\r\n  };\r\n\r\n  const operationSelect = (operations) => {\r\n    setValues({\r\n      ...values,\r\n      operationId: operations.value,\r\n      operationName: operations.label,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOperationsOptions(\r\n      operations.map((opt) => {\r\n        return { label: opt.name, value: opt._id };\r\n      })\r\n    );\r\n  }, [operations]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getSingleWorker(id);\r\n      await getOperations();\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { fName, sName, fatherName, operationId, status, _id } = singleWorker;\r\n    console.log(singleWorker);\r\n    if (singleWorker._id) {\r\n      setValues({\r\n        ...values,\r\n        fName,\r\n        sName,\r\n        fatherName,\r\n        operationId: operationId[0],\r\n        operationName: operationId[0].name,\r\n        status,\r\n        _id,\r\n      });\r\n    }\r\n  }, [singleWorker]);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Редагувати працівника</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            label=\"Прізвище\"\r\n            value={values.fName}\r\n            name=\"fName\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"І'мя\"\r\n              value={values.sName}\r\n              name=\"sName\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"По-батькові\"\r\n              value={values.fatherName}\r\n              name=\"fatherName\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Статус</span>\r\n            </div>\r\n            <Select\r\n              options={options}\r\n              name=\"status\"\r\n              onChange={statusSelect}\r\n              value={{ label: values.status, value: values.status }}\r\n            />\r\n            <div className={s.select__container}>\r\n              <div className={s.span}>\r\n                <span>Операція</span>\r\n              </div>\r\n              <Select\r\n                options={operationsOptions}\r\n                value={{\r\n                  label: values.operationName,\r\n                  value: values.operationId,\r\n                }}\r\n                name=\"operationId\"\r\n                onChange={operationSelect}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button\r\n          title=\"Редагувати\"\r\n          onClick={handleSubmit}\r\n          disabled={!!errors.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => {\r\n    return {\r\n      fName: \"\",\r\n      sName: \"\",\r\n      fatherName: \"\",\r\n      operationId: \"\",\r\n      status: \"\",\r\n      _id: \"\",\r\n    };\r\n  },\r\n  validate: (values) => {\r\n    const errors = {};\r\n    if (\r\n      !values.fName ||\r\n      !values.sName ||\r\n      !values.fatherName ||\r\n      !values.operationId ||\r\n      !values.status\r\n    ) {\r\n      errors.name = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { editWorker, singleWorker, history } }\r\n  ) => {\r\n    const workerToSubmit = {\r\n      status: values.status,\r\n      operationId: values.operationId,\r\n      fName: values.fName,\r\n      fatherName: values.fatherName,\r\n      sName: values.sName,\r\n    };\r\n    const isSuccess = await editWorker(workerToSubmit, singleWorker._id);\r\n    if (isSuccess) {\r\n      history.push(\"/workers\") || alert(\"Змінено\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n  },\r\n})(EditWorker);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    singleWorker: state.workers.single,\r\n    operations: state.operations.operations,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getSingleWorker: (id) => dispatch(getSingleWorkerAction(id)),\r\n    editWorker: (workers, id) => dispatch(editWorkerAction(workers, id)),\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./EditPrice.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { getProdArticleAction } from \"../../store/actions/prodTypeArticleActions\";\r\nimport {\r\n  createRoztsinkaAction,\r\n  editRoztsinkaAction,\r\n  getSingleRoztsinkaAction,\r\n} from \"../../store/actions/roztsinkaActions\";\r\nimport { getProdTypeAction } from \"../../store/actions/prodTypeTypeActions\";\r\nimport { getProdSizeAction } from \"../../store/actions/prodTypeSizeActions\";\r\nimport { getProdSezonAction } from \"../../store/actions/prodTypeSezonActions\";\r\nimport { getProdAsortumentAction } from \"../../store/actions/prodTypeAsortActions\";\r\nimport { getProdClassAction } from \"../../store/actions/prodTypeClassActions\";\r\nimport { getProdColorAction } from \"../../store/actions/prodTypeColorActions\";\r\nimport { getProdImageAction } from \"../../store/actions/prodTypeImageActions\";\r\nimport { getMachineAction } from \"../../store/actions/Machine/machineActions\";\r\nimport { getOperationsAction } from \"../../store/actions/operationsAction\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst EditPrice = ({\r\n  values,\r\n  handleChange,\r\n  handleSubmit,\r\n  setValues,\r\n  fetchProdArticle,\r\n  articleId,\r\n  fetchProdType,\r\n  typeId,\r\n  fetchProdSize,\r\n  sizeId,\r\n  fetchProdSezon,\r\n  seasonId,\r\n  fetchProdAsortument,\r\n  asortument,\r\n  fetchProdImage,\r\n  imageId,\r\n  fetchProdClass,\r\n  classId,\r\n  fetchProdColor,\r\n  colorId,\r\n  fetchMachine,\r\n  machineId,\r\n  getOperations,\r\n  operations,\r\n  getSingleRoztsinka,\r\n  singleRoztsinka,\r\n  errors,\r\n}) => {\r\n  const [articleOptions, setArticleOptions] = useState([]);\r\n  const [typeOptions, setTypeOptions] = useState([]);\r\n  const [sizeOptions, setSizeOptions] = useState([]);\r\n  const [sezonOptions, setSezonOptions] = useState([]);\r\n  const [asortumenOptions, setAsortumenOptions] = useState([]);\r\n  const [imageOptions, setImageOptions] = useState([]);\r\n  const [classOptions, setClassOptions] = useState([]);\r\n  const [colorOptions, setColorOptions] = useState([]);\r\n  const [operationsOptions, setOperationsOptions] = useState([]);\r\n  const [machinesOptions, setMachinesOptions] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  const options = [\r\n    { value: 1, label: 1 },\r\n    { value: 2, label: 2 },\r\n    { value: 3, label: 3 },\r\n  ];\r\n\r\n  const gatynokSelect = (options) => {\r\n    setValues({ ...values, gatynok: options.value });\r\n  };\r\n\r\n  const asortumentSelect = (asortument) => {\r\n    setValues({\r\n      ...values,\r\n      asortument: asortument.value,\r\n      asortumentName: asortument.label,\r\n    });\r\n  };\r\n  const classSelect = (classId) => {\r\n    setValues({ ...values, classId: classId.value, classN: classId.label });\r\n  };\r\n  const colorSelect = (colorId) => {\r\n    setValues({ ...values, colorId: colorId.value, colorName: colorId.label });\r\n  };\r\n  const imageSelect = (imageId) => {\r\n    setValues({ ...values, imageId: imageId.value, imageName: imageId.label });\r\n  };\r\n  const sizeSelect = (sizeId) => {\r\n    setValues({ ...values, sizeId: sizeId.value, sizeName: sizeId.label });\r\n  };\r\n\r\n  const sezonSelect = (seasonId) => {\r\n    setValues({\r\n      ...values,\r\n      seasonId: seasonId.value,\r\n      seasonName: seasonId.label,\r\n    });\r\n  };\r\n  const typeSelect = (typeId) => {\r\n    setValues({ ...values, typeId: typeId.value, typeName: typeId.label });\r\n  };\r\n\r\n  const articleSelect = (articleId) => {\r\n    setValues({\r\n      ...values,\r\n      articleId: articleId.value,\r\n      articleName: articleId.label,\r\n    });\r\n  };\r\n\r\n  const operationSelect = (operations) => {\r\n    setValues({\r\n      ...values,\r\n      operationId: operations.value,\r\n      operationName: operations.label,\r\n    });\r\n  };\r\n  const machinesSelect = (machineId) => {\r\n    setValues({\r\n      ...values,\r\n      machineId: machineId.value,\r\n      machineName: machineId.label,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMachinesOptions(\r\n      machineId.length &&\r\n        machineId.map((opt) => {\r\n          return { label: opt.name, value: opt._id };\r\n        })\r\n    );\r\n  }, [machineId]);\r\n  useEffect(() => {\r\n    setOperationsOptions(\r\n      operations.map((opt) => {\r\n        return { label: opt.name, value: opt._id };\r\n      })\r\n    );\r\n  }, [operations]);\r\n\r\n  useEffect(() => {\r\n    setAsortumenOptions(\r\n      asortument.length &&\r\n        asortument.map((asort) => {\r\n          return { label: asort.name, value: asort._id };\r\n        })\r\n    );\r\n  }, [asortument]);\r\n\r\n  useEffect(() => {\r\n    setClassOptions(\r\n      classId.length &&\r\n        classId.map((cls) => {\r\n          return { label: cls.name, value: cls._id };\r\n        })\r\n    );\r\n  }, [classId]);\r\n  useEffect(() => {\r\n    setColorOptions(\r\n      colorId.length &&\r\n        colorId.map((col) => {\r\n          return { label: col.name, value: col._id };\r\n        })\r\n    );\r\n  }, [colorId]);\r\n  useEffect(() => {\r\n    setImageOptions(\r\n      imageId.length &&\r\n        imageId.map((img) => {\r\n          return { label: img.name, value: img._id };\r\n        })\r\n    );\r\n  }, [imageId]);\r\n\r\n  useEffect(() => {\r\n    setSizeOptions(\r\n      sizeId.length &&\r\n        sizeId.map((size) => {\r\n          return { label: size.name, value: size._id };\r\n        })\r\n    );\r\n  }, [sizeId]);\r\n  useEffect(() => {\r\n    setArticleOptions(\r\n      articleId.length &&\r\n        articleId.map((art) => {\r\n          return { label: art.name, value: art._id };\r\n        })\r\n    );\r\n  }, [articleId]);\r\n  useEffect(() => {\r\n    setSezonOptions(\r\n      seasonId.length &&\r\n        seasonId.map((sez) => {\r\n          return { label: sez.name, value: sez._id };\r\n        })\r\n    );\r\n  }, [seasonId]);\r\n\r\n  useEffect(() => {\r\n    setTypeOptions(\r\n      typeId.length &&\r\n        typeId.map((type) => {\r\n          return { label: type.name, value: type._id };\r\n        })\r\n    );\r\n  }, [typeId]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getSingleRoztsinka(id);\r\n      await getOperations();\r\n      await fetchProdType();\r\n      await fetchProdArticle();\r\n      await fetchProdColor();\r\n      await fetchProdClass();\r\n      await fetchProdAsortument();\r\n      await fetchProdImage();\r\n      await fetchProdSezon();\r\n      await fetchProdSize();\r\n      await fetchMachine();\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      asortument,\r\n      articleId,\r\n      typeId,\r\n      sizeId,\r\n      seasonId,\r\n      imageId,\r\n      classId,\r\n      colorId,\r\n      operationId,\r\n      machineId,\r\n      startDate,\r\n      endDate,\r\n      price,\r\n      name,\r\n      gatynok,\r\n      _id,\r\n    } = singleRoztsinka;\r\n    if (singleRoztsinka._id) {\r\n      setValues({\r\n        ...values,\r\n        asortument,\r\n        asortumentName: asortument.name,\r\n        machineId,\r\n        machineName: machineId.name,\r\n        articleId,\r\n        articleName: articleId.name,\r\n        typeId,\r\n        typeName: typeId.name,\r\n        sizeId,\r\n        sizeName: sizeId.name,\r\n        seasonId,\r\n        seasonName: seasonId.name,\r\n        imageId,\r\n        imageName: imageId.name,\r\n        classId,\r\n        classN: classId.name,\r\n        colorId,\r\n        colorName: colorId.name,\r\n        operationId,\r\n        operationName: operationId.name,\r\n        startDate,\r\n        endDate,\r\n        price,\r\n        name,\r\n        gatynok,\r\n        _id,\r\n      });\r\n    }\r\n  }, [singleRoztsinka]);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Змінити розцінку</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            type=\"date\"\r\n            value={values.startDate}\r\n            name=\"startDate\"\r\n            label=\"Початок\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            type=\"date\"\r\n            value={values.endDate}\r\n            name=\"endDate\"\r\n            label=\"Завершення\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            type=\"number\"\r\n            value={values.price}\r\n            name=\"price\"\r\n            label=\"Ціна\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            label=\"Назва\"\r\n            value={values.name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Артикуль</span>\r\n            </div>\r\n            <Select\r\n              options={articleOptions}\r\n              value={{ label: values.articleName, value: values.articleId }}\r\n              name=\"articleId\"\r\n              onChange={articleSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Гатунок</span>\r\n            </div>\r\n            <Select\r\n              options={options}\r\n              value={{ label: values.gatynok, value: values.gatynok }}\r\n              name=\"gatynok\"\r\n              onChange={gatynokSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Обладнання</span>\r\n            </div>\r\n            <Select\r\n              options={machinesOptions}\r\n              value={{ label: values.machineName, value: values.machineId }}\r\n              name=\"machineId\"\r\n              onChange={machinesSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={s.left}>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Операція</span>\r\n            </div>\r\n            <Select\r\n              options={operationsOptions}\r\n              value={{ label: values.operationName, value: values.operationId }}\r\n              name=\"operationId\"\r\n              onChange={operationSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Тип</span>\r\n            </div>\r\n            <Select\r\n              options={typeOptions}\r\n              value={{ label: values.typeName, value: values.typeId }}\r\n              name=\"typeId\"\r\n              onChange={typeSelect}\r\n            />\r\n          </div>\r\n\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Колір</span>\r\n            </div>\r\n            <Select\r\n              options={colorOptions}\r\n              value={{ label: values.colorName, value: values.colorId }}\r\n              name=\"colorId\"\r\n              onChange={colorSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Клас</span>\r\n            </div>\r\n            <Select\r\n              options={classOptions}\r\n              value={{ label: values.classN, value: values.classId }}\r\n              name=\"classId\"\r\n              onChange={classSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Асортимент</span>\r\n            </div>\r\n            <Select\r\n              options={asortumenOptions}\r\n              value={{ label: values.asortumentName, value: values.asortument }}\r\n              name=\"asortument\"\r\n              onChange={asortumentSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Малюнок</span>\r\n            </div>\r\n            <Select\r\n              options={imageOptions}\r\n              value={{ label: values.imageName, value: values.imageId }}\r\n              name=\"imageId\"\r\n              onChange={imageSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Сезон</span>\r\n            </div>\r\n            <Select\r\n              options={sezonOptions}\r\n              value={{ label: values.seasonName, value: values.seasonId }}\r\n              name=\"seasonId\"\r\n              onChange={sezonSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Розмір</span>\r\n            </div>\r\n            <Select\r\n              options={sizeOptions}\r\n              value={{ label: values.sizeName, value: values.sizeId }}\r\n              name=\"sizeId\"\r\n              onChange={sizeSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button\r\n          title=\"Змінити\"\r\n          onClick={handleSubmit}\r\n          disabled={!!errors.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    asortument: \"\",\r\n    articleId: \"\",\r\n    typeId: \"\",\r\n    sizeId: \"\",\r\n    seasonId: \"\",\r\n    imageId: \"\",\r\n    classId: \"\",\r\n    colorId: \"\",\r\n    operationId: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    price: \"\",\r\n    name: \"\",\r\n    gatynok: \"\",\r\n    machineId: \"\",\r\n    _id: \"\",\r\n  }),\r\n  validate: (values) => {\r\n    const errors = {};\r\n    if (\r\n      !values.asortument ||\r\n      !values.articleId ||\r\n      !values.typeId ||\r\n      !values.sizeId ||\r\n      !values.seasonId ||\r\n      !values.imageId ||\r\n      !values.classId ||\r\n      !values.colorId ||\r\n      !values.operationId ||\r\n      !values.startDate ||\r\n      !values.machineId ||\r\n      !values.endDate ||\r\n      !values.price ||\r\n      !values.name\r\n    ) {\r\n      errors.name = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { editRoztsinka, singleRoztsinka, history } }\r\n  ) => {\r\n    const pricesToSubmit = {\r\n      asortument: values.asortument,\r\n      typeId: values.typeId,\r\n      articleId: values.articleId,\r\n      sizeId: values.sizeId,\r\n      seasonId: values.seasonId,\r\n      classId: values.classId,\r\n      imageId: values.imageId,\r\n      colorId: values.colorId,\r\n      startDate: values.startDate,\r\n      endDate: values.endDate,\r\n      price: values.price,\r\n      name: values.name,\r\n      gatynok: values.gatynok,\r\n      operationId: values.operationId,\r\n      machineId: values.machineId,\r\n    };\r\n    const isSuccess = await editRoztsinka(pricesToSubmit, singleRoztsinka._id);\r\n    if (isSuccess) {\r\n      alert(\"Змінено\") || history.push(\"/prices\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n  },\r\n})(EditPrice);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    singleRoztsinka: state.roztsinka.single,\r\n    operations: state.operations.operations,\r\n    articleId: state.prod.prodArticle,\r\n    typeId: state.prodType.prodType,\r\n    sizeId: state.prodSize.prodSize,\r\n    seasonId: state.prodSezon.prodSezon,\r\n    asortument: state.prodAsortument.prodAsortument,\r\n    classId: state.prodClass.prodClass,\r\n    colorId: state.prodColor.prodColor,\r\n    imageId: state.prodImage.prodImage,\r\n    machineId: state.machines.machines,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getSingleRoztsinka: (id) => dispatch(getSingleRoztsinkaAction(id)),\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n    createPrices: (roztsinka) => dispatch(createRoztsinkaAction(roztsinka)),\r\n    fetchProdType: () => dispatch(getProdTypeAction()),\r\n    fetchProdArticle: () => dispatch(getProdArticleAction()),\r\n    fetchProdColor: () => dispatch(getProdColorAction()),\r\n    fetchProdClass: () => dispatch(getProdClassAction()),\r\n    fetchProdAsortument: () => dispatch(getProdAsortumentAction()),\r\n    fetchProdImage: () => dispatch(getProdImageAction()),\r\n    fetchProdSezon: () => dispatch(getProdSezonAction()),\r\n    fetchProdSize: () => dispatch(getProdSizeAction()),\r\n    fetchMachine: () => dispatch(getMachineAction()),\r\n    editRoztsinka: (roztsinka, id) =>\r\n      dispatch(editRoztsinkaAction(roztsinka, id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./CreateMachine.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { getMachineModelAction } from \"../../store/actions/Machine/modelActions\";\r\nimport { getMachineDuymuAction } from \"../../store/actions/Machine/duymuActions\";\r\nimport { getMachineGolkuAction } from \"../../store/actions/Machine/golkuActions\";\r\nimport { getMachineVyazalniAction } from \"../../store/actions/Machine/vyazalniActions\";\r\nimport { createMachineAction } from \"../../store/actions/Machine/machineActions\";\r\n\r\nconst CreateMachine = ({\r\n  values,\r\n  handleChange,\r\n  handleSubmit,\r\n  setValues,\r\n  fetchMachineModel,\r\n  fetchMachineDuymu,\r\n  fetchMachineGolku,\r\n  fetchMachineVyazalni,\r\n  machineModel,\r\n  machineDuymu,\r\n  machineGolku,\r\n  machineVyazalni,\r\n  errors,\r\n}) => {\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n  const [duymuOptions, setDuymuOptions] = useState([]);\r\n  const [golkuOptions, setGolkuOptions] = useState([]);\r\n  const [vyazalniOptions, setVyazalniOptions] = useState([]);\r\n\r\n  const vyazalniSelect = (machineVyazalni) => {\r\n    setValues({ ...values, vyazalniId: machineVyazalni.value });\r\n  };\r\n  const golkuSelect = (machineGolku) => {\r\n    setValues({ ...values, golkuId: machineGolku.value });\r\n  };\r\n  const duymuSelect = (machineDuymu) => {\r\n    setValues({ ...values, duymuId: machineDuymu.value });\r\n  };\r\n  const modelSelect = (machineModel) => {\r\n    setValues({ ...values, modelId: machineModel.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVyazalniOptions(\r\n      machineVyazalni.length &&\r\n        machineVyazalni.map((mod) => {\r\n          return { label: mod.name, value: mod._id };\r\n        })\r\n    );\r\n  }, [machineVyazalni]);\r\n  useEffect(() => {\r\n    setGolkuOptions(\r\n      machineGolku.length &&\r\n        machineGolku.map((mod) => {\r\n          return { label: mod.name, value: mod._id };\r\n        })\r\n    );\r\n  }, [machineGolku]);\r\n  useEffect(() => {\r\n    setDuymuOptions(\r\n      machineDuymu.length &&\r\n        machineDuymu.map((mod) => {\r\n          return { label: mod.name, value: mod._id };\r\n        })\r\n    );\r\n  }, [machineDuymu]);\r\n  useEffect(() => {\r\n    setModelOptions(\r\n      machineModel.length &&\r\n        machineModel.map((mod) => {\r\n          return { label: mod.name, value: mod._id };\r\n        })\r\n    );\r\n  }, [machineModel]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchMachineModel();\r\n      await fetchMachineDuymu();\r\n      await fetchMachineGolku();\r\n      await fetchMachineVyazalni();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Створити машину</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            label=\"Назва\"\r\n            value={values.name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Модель</span>\r\n            </div>\r\n            <Select\r\n              options={modelOptions}\r\n              value={values.modelId.label}\r\n              name=\"modelId\"\r\n              onChange={modelSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Голка</span>\r\n            </div>\r\n            <Select\r\n              options={golkuOptions}\r\n              value={values.golkuId.label}\r\n              name=\"golkuId\"\r\n              onChange={golkuSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Дюйми</span>\r\n            </div>\r\n            <Select\r\n              options={duymuOptions}\r\n              value={values.duymuId.label}\r\n              name=\"duymuId\"\r\n              onChange={duymuSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Машини в'язальні</span>\r\n            </div>\r\n            <Select\r\n              options={vyazalniOptions}\r\n              value={values.vyazalniId.label}\r\n              name=\"vyazalniId\"\r\n              onChange={vyazalniSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button\r\n          title=\"Створити\"\r\n          onClick={handleSubmit}\r\n          disabled={!!errors.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n    modelId: {},\r\n    golkuId: {},\r\n    vyazalniId: {},\r\n    duymuId: {},\r\n  }),\r\n  validate: (values) => {\r\n    const errors = {};\r\n    if (\r\n      !values.name ||\r\n      !values.modelId ||\r\n      !values.golkuId ||\r\n      !values.vyazalniId ||\r\n      !values.duymuId\r\n    ) {\r\n      errors.name = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: async (values, { props: { createMachine, history } }) => {\r\n    const machineToSubmit = {\r\n      modelId: values.modelId,\r\n      golkuId: values.golkuId,\r\n      vyazalniId: values.vyazalniId,\r\n      duymuId: values.duymuId,\r\n      name: values.name,\r\n    };\r\n    const isSuccess = await createMachine(machineToSubmit);\r\n    if (isSuccess) {\r\n      alert(\"Створено\") || history.push(\"/equipment\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n  },\r\n})(CreateMachine);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    machineModel: state.machineModel.machineModel,\r\n    machineDuymu: state.machineDuymu.machineDuymu,\r\n    machineGolku: state.machineGolku.machineGolku,\r\n    machineVyazalni: state.machineVyazalni.machineVyazalni,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createMachine: (workers) => dispatch(createMachineAction(workers)),\r\n    fetchMachineModel: () => dispatch(getMachineModelAction()),\r\n    fetchMachineDuymu: () => dispatch(getMachineDuymuAction()),\r\n    fetchMachineGolku: () => dispatch(getMachineGolkuAction()),\r\n    fetchMachineVyazalni: () => dispatch(getMachineVyazalniAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./EditMachine.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { getMachineModelAction } from \"../../store/actions/Machine/modelActions\";\r\nimport { getMachineDuymuAction } from \"../../store/actions/Machine/duymuActions\";\r\nimport { getMachineGolkuAction } from \"../../store/actions/Machine/golkuActions\";\r\nimport { getMachineVyazalniAction } from \"../../store/actions/Machine/vyazalniActions\";\r\nimport {\r\n  editMachineAction,\r\n  getSingleMachineAction,\r\n} from \"../../store/actions/Machine/machineActions\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst EditMachine = ({\r\n  values,\r\n  handleChange,\r\n  handleSubmit,\r\n  setValues,\r\n  fetchMachineModel,\r\n  fetchMachineDuymu,\r\n  fetchMachineGolku,\r\n  fetchMachineVyazalni,\r\n  machineModel,\r\n  machineDuymu,\r\n  machineGolku,\r\n  machineVyazalni,\r\n  singleMachine,\r\n  getSingleMachine,\r\n  editMachine,\r\n  errors,\r\n}) => {\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n  const [duymuOptions, setDuymuOptions] = useState([]);\r\n  const [golkuOptions, setGolkuOptions] = useState([]);\r\n  const [vyazalniOptions, setVyazalniOptions] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  const vyazalniSelect = (machineVyazalni) => {\r\n    setValues({ ...values, vyazalniId: machineVyazalni.value });\r\n  };\r\n  const golkuSelect = (machineGolku) => {\r\n    setValues({ ...values, golkuId: machineGolku.value });\r\n  };\r\n  const duymuSelect = (machineDuymu) => {\r\n    setValues({ ...values, duymuId: machineDuymu.value });\r\n  };\r\n  const modelSelect = (machineModel) => {\r\n    setValues({ ...values, modelId: machineModel.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVyazalniOptions(\r\n      machineVyazalni.length &&\r\n        machineVyazalni.map((mod) => {\r\n          return { label: mod.name, value: mod._id };\r\n        })\r\n    );\r\n  }, [machineVyazalni]);\r\n  useEffect(() => {\r\n    setGolkuOptions(\r\n      machineGolku.length &&\r\n        machineGolku.map((mod) => {\r\n          return { label: mod.name, value: mod._id };\r\n        })\r\n    );\r\n  }, [machineGolku]);\r\n  useEffect(() => {\r\n    setDuymuOptions(\r\n      machineDuymu.length &&\r\n        machineDuymu.map((mod) => {\r\n          return { label: mod.name, value: mod._id };\r\n        })\r\n    );\r\n  }, [machineDuymu]);\r\n  useEffect(() => {\r\n    setModelOptions(\r\n      machineModel.length &&\r\n        machineModel.map((mod) => {\r\n          return { label: mod.name, value: mod._id };\r\n        })\r\n    );\r\n  }, [machineModel]);\r\n\r\n  useEffect(() => {\r\n    const { name, modelId, golkuId, vyazalniId, duymuId, _id } = singleMachine;\r\n    if (singleMachine._id) {\r\n      setValues({\r\n        ...values,\r\n        name,\r\n        modelId,\r\n        golkuId,\r\n        vyazalniId,\r\n        duymuId,\r\n        _id,\r\n      });\r\n    }\r\n  }, [singleMachine]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getSingleMachine(id);\r\n      await fetchMachineModel();\r\n      await fetchMachineDuymu();\r\n      await fetchMachineGolku();\r\n      await fetchMachineVyazalni();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Змінити машину</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            label=\"Назва\"\r\n            value={values.name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Модель</span>\r\n            </div>\r\n            <Select\r\n              options={modelOptions}\r\n              value={{ label: values.modelId, value: values.modelId }}\r\n              name=\"modelId\"\r\n              onChange={modelSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Голка</span>\r\n            </div>\r\n            <Select\r\n              options={golkuOptions}\r\n              value={{ label: values.golkuId, value: values.golkuId }}\r\n              name=\"golkuId\"\r\n              onChange={golkuSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Дюйми</span>\r\n            </div>\r\n            <Select\r\n              options={duymuOptions}\r\n              value={{ label: values.duymuId, value: values.duymuId }}\r\n              name=\"duymuId\"\r\n              onChange={duymuSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Машини в'язальні</span>\r\n            </div>\r\n            <Select\r\n              options={vyazalniOptions}\r\n              value={{ label: values.vyazalniId, value: values.vyazalniId }}\r\n              name=\"vyazalniId\"\r\n              onChange={vyazalniSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button\r\n          title=\"Змінити\"\r\n          onClick={handleSubmit}\r\n          disabled={!!errors.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n    modelId: \"\",\r\n    golkuId: \"\",\r\n    vyazalniId: \"\",\r\n    duymuId: \"\",\r\n    _id: \"\",\r\n  }),\r\n  validate: (values) => {\r\n    const errors = {};\r\n    if (\r\n      !values.name ||\r\n      !values.modelId ||\r\n      !values.golkuId ||\r\n      !values.vyazalniId ||\r\n      !values.duymuId\r\n    ) {\r\n      errors.name = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { editMachine, singleMachine, history }, resetForm }\r\n  ) => {\r\n    const machineToSubmit = {\r\n      modelId: values.modelId,\r\n      golkuId: values.golkuId,\r\n      vyazalniId: values.vyazalniId,\r\n      duymuId: values.duymuId,\r\n      name: values.name,\r\n    };\r\n    const isSuccess = await editMachine(machineToSubmit, singleMachine._id);\r\n    if (isSuccess) {\r\n      alert(\"Змінено\") || history.push(\"/equipment\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({});\r\n  },\r\n})(EditMachine);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    singleMachine: state.machines.single,\r\n    machineModel: state.machineModel.machineModel,\r\n    machineDuymu: state.machineDuymu.machineDuymu,\r\n    machineGolku: state.machineGolku.machineGolku,\r\n    machineVyazalni: state.machineVyazalni.machineVyazalni,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getSingleMachine: (id) => dispatch(getSingleMachineAction(id)),\r\n    editMachine: (machines, id) => dispatch(editMachineAction(machines, id)),\r\n    fetchMachineModel: () => dispatch(getMachineModelAction()),\r\n    fetchMachineDuymu: () => dispatch(getMachineDuymuAction()),\r\n    fetchMachineGolku: () => dispatch(getMachineGolkuAction()),\r\n    fetchMachineVyazalni: () => dispatch(getMachineVyazalniAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./CreateZvitu.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { getOperationsAction } from \"../../store/actions/operationsAction\";\r\nimport { createZvituAction } from \"../../store/actions/Zvitu/zvituActions\";\r\nimport { getWorkersAction } from \"../../store/actions/workersActions\";\r\n\r\nconst CreateZvitu = ({\r\n  values,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  getOperations,\r\n  setValues,\r\n  operations,\r\n  getWorkers,\r\n  workers,\r\n}) => {\r\n  const [operationsOptions, setOperationsOptions] = useState([]);\r\n  const [workersOptions, setWorkersOptions] = useState([]);\r\n\r\n  const operationSelect = (operations) => {\r\n    setValues({ ...values, operationId: operations.value });\r\n  };\r\n  const workerSelect = (workers) => {\r\n    setValues({ ...values, workerId: workers.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWorkersOptions(\r\n      workers.map((opt) => {\r\n        return { label: opt.fName, value: opt._id };\r\n      })\r\n    );\r\n  }, [workers]);\r\n  useEffect(() => {\r\n    setOperationsOptions(\r\n      operations.map((opt) => {\r\n        return { label: opt.name, value: opt._id };\r\n      })\r\n    );\r\n  }, [operations]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getOperations();\r\n      await getWorkers();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Створити звіт прихід</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            label=\"Гатунок 1\"\r\n            value={values.gatynok1}\r\n            name=\"gatynok1\"\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n          />\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 2\"\r\n              value={values.gatynok2}\r\n              name=\"gatynok2\"\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 3\"\r\n              value={values.gatynok3}\r\n              name=\"gatynok3\"\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <Input\r\n            type=\"date\"\r\n            label=\"Дата\"\r\n            value={values.date_prixodu}\r\n            name=\"date_prixodu\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Операція</span>\r\n            </div>\r\n            <Select\r\n              options={operationsOptions}\r\n              value={values.operationId.label}\r\n              name=\"operationId\"\r\n              onChange={operationSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Працівник</span>\r\n            </div>\r\n            <Select\r\n              options={workersOptions}\r\n              value={values.workerId.label}\r\n              name=\"workerId\"\r\n              onChange={workerSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button title=\"Створити\" onClick={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    gatynok1: \"\",\r\n    gatynok2: \"\",\r\n    gatynok3: \"\",\r\n    date_prixodu: \"\",\r\n    operationId: {},\r\n    workerId: {},\r\n  }),\r\n  handleSubmit: async (values, { props: { createZvitu }, resetForm }) => {\r\n    const zvituToSubmit = {\r\n      operationId: values.operationId,\r\n      gatynok1: values.gatynok1,\r\n      gatynok2: values.gatynok2,\r\n      gatynok3: values.gatynok3,\r\n      workerId: values.workerId,\r\n      date_prixodu: values.date_prixodu,\r\n    };\r\n    const isSuccess = await createZvitu(zvituToSubmit);\r\n    if (isSuccess) {\r\n      alert(\"Success\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({\r\n      gatynok1: \"\",\r\n      gatynok2: \"\",\r\n      gatynok3: \"\",\r\n      workerId: \"\",\r\n      operationId: \"\",\r\n    });\r\n  },\r\n})(CreateZvitu);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    workers: state.workers.workers,\r\n    operations: state.operations.operations,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createZvitu: (zvitu) => dispatch(createZvituAction(zvitu)),\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n    getWorkers: () => dispatch(getWorkersAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./CreateZvituRozxid.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { getOperationsAction } from \"../../store/actions/operationsAction\";\r\nimport { createZvituAction } from \"../../store/actions/Zvitu/zvituActions\";\r\nimport { getWorkersAction } from \"../../store/actions/workersActions\";\r\nimport { createZvituRozxidAction } from \"../../store/actions/Zvitu/zvituRozhidActions\";\r\n\r\nconst CreateZvituRozxid = ({\r\n  values,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  getOperations,\r\n  setValues,\r\n  operations,\r\n  getWorkers,\r\n  workers,\r\n}) => {\r\n  const [operationsOptions, setOperationsOptions] = useState([]);\r\n  const [workersOptions, setWorkersOptions] = useState([]);\r\n\r\n  const operationSelect = (operations) => {\r\n    setValues({ ...values, operationId: operations.value });\r\n  };\r\n  const workerSelect = (workers) => {\r\n    setValues({ ...values, workerId: workers.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWorkersOptions(\r\n      workers.map((opt) => {\r\n        return { label: opt.fName, value: opt._id };\r\n      })\r\n    );\r\n  }, [workers]);\r\n  useEffect(() => {\r\n    setOperationsOptions(\r\n      operations.map((opt) => {\r\n        return { label: opt.name, value: opt._id };\r\n      })\r\n    );\r\n  }, [operations]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getOperations();\r\n      await getWorkers();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Створити звіт розхід</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            label=\"Гатунок 1\"\r\n            value={values.gatynok1}\r\n            name=\"gatynok1\"\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n          />\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 2\"\r\n              value={values.gatynok2}\r\n              name=\"gatynok2\"\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 3\"\r\n              value={values.gatynok3}\r\n              name=\"gatynok3\"\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <Input\r\n            type=\"date\"\r\n            label=\"Дата\"\r\n            value={values.date_rozxodu}\r\n            name=\"date_rozxodu\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Операція</span>\r\n            </div>\r\n            <Select\r\n              options={operationsOptions}\r\n              value={values.operationId.label}\r\n              name=\"operationId\"\r\n              onChange={operationSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Працівник</span>\r\n            </div>\r\n            <Select\r\n              options={workersOptions}\r\n              value={values.workerId.label}\r\n              name=\"workerId\"\r\n              onChange={workerSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button title=\"Створити\" onClick={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    gatynok1: \"\",\r\n    gatynok2: \"\",\r\n    gatynok3: \"\",\r\n    date_rozxodu: \"\",\r\n    operationId: {},\r\n    workerId: {},\r\n  }),\r\n  handleSubmit: async (values, { props: { createZvituRozxid }, resetForm }) => {\r\n    const zvituToSubmit = {\r\n      operationId: values.operationId,\r\n      gatynok1: values.gatynok1,\r\n      gatynok2: values.gatynok2,\r\n      gatynok3: values.gatynok3,\r\n      workerId: values.workerId,\r\n      date_rozxodu: values.date_rozxodu,\r\n    };\r\n    const isSuccess = await createZvituRozxid(zvituToSubmit);\r\n    if (isSuccess) {\r\n      alert(\"Success\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n    resetForm({\r\n      gatynok1: \"\",\r\n      gatynok2: \"\",\r\n      gatynok3: \"\",\r\n      workerId: \"\",\r\n      operationId: \"\",\r\n    });\r\n  },\r\n})(CreateZvituRozxid);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    workers: state.workers.workers,\r\n    operations: state.operations.operations,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createZvituRozxid: (zvitu) => dispatch(createZvituRozxidAction(zvitu)),\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n    getWorkers: () => dispatch(getWorkersAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./EditZvitu.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { getOperationsAction } from \"../../store/actions/operationsAction\";\r\nimport {\r\n  editZvituAction,\r\n  getSingleZvituAction,\r\n} from \"../../store/actions/Zvitu/zvituActions\";\r\nimport { getWorkersAction } from \"../../store/actions/workersActions\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst EditZvitu = ({\r\n  values,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  getOperations,\r\n  setValues,\r\n  operations,\r\n  getWorkers,\r\n  workers,\r\n  getSingleZvitu,\r\n  singleZvitu,\r\n}) => {\r\n  const [operationsOptions, setOperationsOptions] = useState([]);\r\n  const [workersOptions, setWorkersOptions] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  const operationSelect = (operations) => {\r\n    setValues({ ...values, operationId: operations.value });\r\n  };\r\n  const workerSelect = (workers) => {\r\n    setValues({ ...values, workerId: workers.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWorkersOptions(\r\n      workers.map((opt) => {\r\n        return { label: opt.fName, value: opt._id };\r\n      })\r\n    );\r\n  }, [workers]);\r\n  useEffect(() => {\r\n    setOperationsOptions(\r\n      operations.map((opt) => {\r\n        return { label: opt.name, value: opt._id };\r\n      })\r\n    );\r\n  }, [operations]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getSingleZvitu(id);\r\n      await getOperations();\r\n      await getWorkers();\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      gatynok1,\r\n      gatynok2,\r\n      gatynok3,\r\n      operationId,\r\n      date_rozxodu,\r\n      workerId,\r\n      _id,\r\n    } = singleZvitu;\r\n    if (singleZvitu._id) {\r\n      setValues({\r\n        ...values,\r\n        gatynok1,\r\n        gatynok2,\r\n        gatynok3,\r\n        operationId,\r\n        date_rozxodu,\r\n        workerId,\r\n        _id,\r\n      });\r\n    }\r\n  }, [singleZvitu]);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Змінити звіт прихід</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            label=\"Гатунок 1\"\r\n            value={values.gatynok1}\r\n            name=\"gatynok1\"\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n          />\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 2\"\r\n              value={values.gatynok2}\r\n              name=\"gatynok2\"\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 3\"\r\n              value={values.gatynok3}\r\n              name=\"gatynok3\"\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <Input\r\n            type=\"date\"\r\n            label=\"Дата\"\r\n            value={values.date_rozxodu}\r\n            name=\"date_rozxodu\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Операція</span>\r\n            </div>\r\n            <Select\r\n              options={operationsOptions}\r\n              value={{ label: values.operationId, value: values.operationId }}\r\n              name=\"operationId\"\r\n              onChange={operationSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Працівник</span>\r\n            </div>\r\n            <Select\r\n              options={workersOptions}\r\n              value={{ label: values.workerId, value: values.workerId }}\r\n              name=\"workerId\"\r\n              onChange={workerSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button title=\"Змінити\" onClick={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    gatynok1: \"\",\r\n    gatynok2: \"\",\r\n    gatynok3: \"\",\r\n    date_rozxodu: \"\",\r\n    operationId: \"\",\r\n    workerId: \"\",\r\n  }),\r\n  handleSubmit: async (values, { props: { editZvitu, singleZvitu } }) => {\r\n    const zvituToSubmit = {\r\n      operationId: values.operationId,\r\n      gatynok1: values.gatynok1,\r\n      gatynok2: values.gatynok2,\r\n      gatynok3: values.gatynok3,\r\n      workerId: values.workerId,\r\n      date_rozxodu: values.date_rozxodu,\r\n    };\r\n    const isSuccess = await editZvitu(zvituToSubmit, singleZvitu._id);\r\n    if (isSuccess) {\r\n      alert(\"Success\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n  },\r\n})(EditZvitu);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    singleZvitu: state.zvitu.single,\r\n    workers: state.workers.workers,\r\n    operations: state.operations.operations,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getSingleZvitu: (id) => dispatch(getSingleZvituAction(id)),\r\n    editZvitu: (zvitu, id) => dispatch(editZvituAction(zvitu, id)),\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n    getWorkers: () => dispatch(getWorkersAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Input from \"../../misc/Input/Input\";\r\nimport Button from \"../../misc/Button/Button\";\r\nimport s from \"./EditZvituRozxid.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik } from \"formik\";\r\nimport { getOperationsAction } from \"../../store/actions/operationsAction\";\r\nimport {\r\n  editZvituAction,\r\n  getSingleZvituAction,\r\n} from \"../../store/actions/Zvitu/zvituActions\";\r\nimport { getWorkersAction } from \"../../store/actions/workersActions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  editZvituRozxidAction,\r\n  getSingleZvituRozxidAction,\r\n} from \"../../store/actions/Zvitu/zvituRozhidActions\";\r\n\r\nconst EditZvituRozxid = ({\r\n  values,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  getOperations,\r\n  setValues,\r\n  operations,\r\n  getWorkers,\r\n  workers,\r\n  getSingleZvituRozxid,\r\n  singleZvituRozxid,\r\n}) => {\r\n  const [operationsOptions, setOperationsOptions] = useState([]);\r\n  const [workersOptions, setWorkersOptions] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  const operationSelect = (operations) => {\r\n    setValues({ ...values, operationId: operations.value });\r\n  };\r\n  const workerSelect = (workers) => {\r\n    setValues({ ...values, workerId: workers.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWorkersOptions(\r\n      workers.map((opt) => {\r\n        return { label: opt.fName, value: opt._id };\r\n      })\r\n    );\r\n  }, [workers]);\r\n  useEffect(() => {\r\n    setOperationsOptions(\r\n      operations.map((opt) => {\r\n        return { label: opt.name, value: opt._id };\r\n      })\r\n    );\r\n  }, [operations]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getSingleZvituRozxid(id);\r\n      await getOperations();\r\n      await getWorkers();\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      gatynok1,\r\n      gatynok2,\r\n      gatynok3,\r\n      operationId,\r\n      date_prixodu,\r\n      workerId,\r\n      _id,\r\n    } = singleZvituRozxid;\r\n    if (singleZvituRozxid._id) {\r\n      setValues({\r\n        ...values,\r\n        gatynok1,\r\n        gatynok2,\r\n        gatynok3,\r\n        operationId,\r\n        date_prixodu,\r\n        workerId,\r\n        _id,\r\n      });\r\n    }\r\n  }, [singleZvituRozxid]);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.title__container}>\r\n        <span className={s.title}>Змінити звіт прихід</span>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={s.main__container}>\r\n        <div className={s.left}>\r\n          <Input\r\n            label=\"Гатунок 1\"\r\n            value={values.gatynok1}\r\n            name=\"gatynok1\"\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n          />\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 2\"\r\n              value={values.gatynok2}\r\n              name=\"gatynok2\"\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <Input\r\n              label=\"Гатунок 3\"\r\n              value={values.gatynok3}\r\n              name=\"gatynok3\"\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <Input\r\n            type=\"date\"\r\n            label=\"Дата\"\r\n            value={values.date_prixodu}\r\n            name=\"date_prixodu\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Операція</span>\r\n            </div>\r\n            <Select\r\n              options={operationsOptions}\r\n              value={{ label: values.operationId, value: values.operationId }}\r\n              name=\"operationId\"\r\n              onChange={operationSelect}\r\n            />\r\n          </div>\r\n          <div className={s.select__container}>\r\n            <div className={s.span}>\r\n              <span>Працівник</span>\r\n            </div>\r\n            <Select\r\n              options={workersOptions}\r\n              value={{ label: values.workerId, value: values.workerId }}\r\n              name=\"workerId\"\r\n              onChange={workerSelect}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.btn__container}>\r\n        <Button title=\"Змінити\" onClick={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst formikHOC = withFormik({\r\n  mapPropsToValues: () => ({\r\n    gatynok1: \"\",\r\n    gatynok2: \"\",\r\n    gatynok3: \"\",\r\n    date_prixodu: \"\",\r\n    operationId: \"\",\r\n    workerId: \"\",\r\n  }),\r\n  handleSubmit: async (\r\n    values,\r\n    { props: { editZvituRozxid, singleZvituRozxid } }\r\n  ) => {\r\n    const zvituToSubmit = {\r\n      operationId: values.operationId,\r\n      gatynok1: values.gatynok1,\r\n      gatynok2: values.gatynok2,\r\n      gatynok3: values.gatynok3,\r\n      workerId: values.workerId,\r\n      date_prixodu: values.date_prixodu,\r\n    };\r\n    const isSuccess = await editZvituRozxid(\r\n      zvituToSubmit,\r\n      singleZvituRozxid._id\r\n    );\r\n    if (isSuccess) {\r\n      alert(\"Success\");\r\n    } else {\r\n      alert(\"error===\");\r\n    }\r\n  },\r\n})(EditZvituRozxid);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    singleZvituRozxid: state.zvituRozxid.single,\r\n    workers: state.workers.workers,\r\n    operations: state.operations.operations,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getSingleZvituRozxid: (id) => dispatch(getSingleZvituRozxidAction(id)),\r\n    editZvituRozxid: (zvituRozxid, id) =>\r\n      dispatch(editZvituRozxidAction(zvituRozxid, id)),\r\n    getOperations: () => dispatch(getOperationsAction()),\r\n    getWorkers: () => dispatch(getWorkersAction()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(formikHOC);\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Header from \"./misc/Header/Header\";\r\nimport Profile from \"./pages/Profile/Profile\";\r\nimport CreatePruhid from \"./pages/CreatePruhid/CreatePruhid\";\r\nimport Workers from \"./pages/Workers/Workers\";\r\n// import Products from \"./pages/Products/Products\";\r\nimport Prices from \"./pages/Prices/Prices\";\r\nimport Equipment from \"./pages/Equipment/Equipment\";\r\nimport Praja from \"./pages/Praja/Praja\";\r\nimport PakMaterials from \"./pages/PakMaterials/PakMaterials\";\r\nimport Sklad1 from \"./pages/Sklad1/Sklad1\";\r\nimport Edit from \"./pages/Edit/Edit\";\r\nimport { getToken } from \"./utils/utils\";\r\nimport ZpSklad1 from \"./pages/ZpSklad/ZpSklad1/ZpSklad1\";\r\nimport Productcia from \"./pages/Productcia/Productcia\";\r\nimport Operations from \"./pages/Operations/Operations\";\r\nimport Zvitu from \"./pages/Zvitu/Zvitu\";\r\nimport CreateWorker from \"./pages/CreateWorker/CreateWorker\";\r\nimport CreatePrices from \"./pages/CreatePrices/CreatePrices\";\r\nimport EditWorker from \"./pages/EditWorker/EditWorker\";\r\nimport EditPrice from \"./pages/EditPrice/EditPrice\";\r\nimport CreateMachine from \"./pages/CreateMachine/CreateMachine\";\r\nimport EditMachine from \"./pages/EditMachine/EditMachine\";\r\nimport CreateZvitu from \"./pages/CreateZvitu/CreateZvitu\";\r\nimport CreateZvituRozxid from \"./pages/CreateZvituRozxid/CreateZvituRozxid\";\r\nimport EditZvitu from \"./pages/EditZvitu/EditZvitu\";\r\nimport EditZvituRozxid from \"./pages/EditZvituRozxid/EditZvituRozxid\";\r\n\r\nfunction App(props) {\r\n  // const Route = ({\r\n  //   redirectTo,\r\n  //   component: Component,\r\n  //   condition,\r\n  //   state = {},\r\n  //   ...rest\r\n  // }) => (\r\n  //   <Route {...rest}>\r\n  //     {condition ? (\r\n  //       <Component />\r\n  //     ) : (\r\n  //       <Redirect to={{ pathname: redirectTo, state }} />\r\n  //     )}\r\n  //   </Route>\r\n  // );\r\n  const token = getToken();\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <div style={{ padding: 10 }}>\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/profile\" component={Profile} />\r\n          <Route path=\"/create-pruhid\" component={CreatePruhid} />\r\n          <Route path=\"/workers\" component={Workers} />\r\n          <Route path=\"/prices\" component={Prices} />\r\n          <Route path=\"/equipment\" component={Equipment} />\r\n          <Route path=\"/praja\" component={Praja} />\r\n          <Route path=\"/pak_materials\" component={PakMaterials} />\r\n          <Route path=\"/edit\" component={Edit} />\r\n          <Route path=\"/sklad_1\" component={Sklad1} />\r\n          <Route path=\"/zp-sklad1\" component={ZpSklad1} />\r\n          <Route path=\"/productcia\" component={Productcia} />\r\n          <Route path=\"/operations\" component={Operations} />\r\n          <Route path=\"/zvitu\" component={Zvitu} />\r\n          <Route path=\"/create-worker\" component={CreateWorker} />\r\n          <Route path=\"/create-prices\" component={CreatePrices} />\r\n          <Route path=\"/edit-worker/:id\" component={EditWorker} />\r\n          <Route path=\"/edit-price/:id\" component={EditPrice} />\r\n          <Route path=\"/create-machine\" component={CreateMachine} />\r\n          <Route path=\"/edit-machine/:id\" component={EditMachine} />\r\n          <Route path=\"/create-zvitu\" component={CreateZvitu} />\r\n          <Route path=\"/create-zvitu-rozxid\" component={CreateZvituRozxid} />\r\n          <Route path=\"/edit-zvitu/:id\" component={EditZvitu} />\r\n          <Route path=\"/edit-zvitu-rozxid/:id\" component={EditZvituRozxid} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  ADD_OPERATIONS,\r\n  DELETE_OPERATIONS,\r\n  SET_FILTERED_OPERATIONS,\r\n  SET_OPERATIONS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  operations: [],\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_OPERATIONS:\r\n      return {\r\n        ...state,\r\n        operations: action.operations,\r\n        filtered: action.operations,\r\n      };\r\n    case SET_FILTERED_OPERATIONS:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_OPERATIONS:\r\n      return {\r\n        ...state,\r\n        operations: [...state.operations, action.operations],\r\n      };\r\n    case DELETE_OPERATIONS:\r\n      return {\r\n        ...state,\r\n        operations: state.operations.filter(\r\n          (operations) => operations._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MACHINE_DYUMU,\r\n  DELETE_MACHINE_DYUMU,\r\n  SET_FILTER_MACHINE_DYUMU,\r\n  SET_MACHINE_DYUMU,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  machineDuymu: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MACHINE_DYUMU:\r\n      return {\r\n        ...state,\r\n        machineDuymu: action.machineDuymu,\r\n      };\r\n    case SET_FILTER_MACHINE_DYUMU:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MACHINE_DYUMU:\r\n      return {\r\n        ...state,\r\n        machineDuymu: [...state.machineDuymu, action.machineDuymu],\r\n      };\r\n    case DELETE_MACHINE_DYUMU:\r\n      return {\r\n        ...state,\r\n        machineDuymu: state.machineDuymu.filter(\r\n          (machineDuymu) => machineDuymu._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MACHINE_GOLKU,\r\n  DELETE_MACHINE_GOLKU,\r\n  SET_FILTER_MACHINE_GOLKU,\r\n  SET_MACHINE_GOLKU,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  machineGolku: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MACHINE_GOLKU:\r\n      return {\r\n        ...state,\r\n        machineGolku: action.machineGolku,\r\n      };\r\n    case SET_FILTER_MACHINE_GOLKU:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MACHINE_GOLKU:\r\n      return {\r\n        ...state,\r\n        machineGolku: [...state.machineGolku, action.machineGolku],\r\n      };\r\n    case DELETE_MACHINE_GOLKU:\r\n      return {\r\n        ...state,\r\n        machineGolku: state.machineGolku.filter(\r\n          (machineGolku) => machineGolku._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MACHINE_MODEL,\r\n  DELETE_MACHINE_MODEL,\r\n  SET_FILTER_MACHINE_MODEL,\r\n  SET_MACHINE_MODEL,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  machineModel: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MACHINE_MODEL:\r\n      return {\r\n        ...state,\r\n        machineModel: action.machineModel,\r\n      };\r\n    case SET_FILTER_MACHINE_MODEL:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MACHINE_MODEL:\r\n      return {\r\n        ...state,\r\n        machineModel: [...state.machineModel, action.machineModel],\r\n      };\r\n    case DELETE_MACHINE_MODEL:\r\n      return {\r\n        ...state,\r\n        machineModel: state.machineModel.filter(\r\n          (machineModel) => machineModel._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MACHINE_VYAZALNI,\r\n  DELETE_MACHINE_VYAZALNI,\r\n  SET_FILTER_MACHINE_VYAZALNI,\r\n  SET_MACHINE_VYAZALNI,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  machineVyazalni: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MACHINE_VYAZALNI:\r\n      return {\r\n        ...state,\r\n        machineVyazalni: action.machineVyazalni,\r\n      };\r\n    case SET_FILTER_MACHINE_VYAZALNI:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MACHINE_VYAZALNI:\r\n      return {\r\n        ...state,\r\n        machineVyazalni: [...state.machineVyazalni, action.machineVyazalni],\r\n      };\r\n    case DELETE_MACHINE_VYAZALNI:\r\n      return {\r\n        ...state,\r\n        machineVyazalni: state.machineVyazalni.filter(\r\n          (machineVyazalni) => machineVyazalni._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MATERIALS_ROZHID,\r\n  DELETE_MATERIALS_ROZHID,\r\n  SET_FILTER_MATERIALS_ROZHID,\r\n  SET_MATERIALS_ROZHID,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  materialRozhid: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MATERIALS_ROZHID:\r\n      return {\r\n        ...state,\r\n        materialRozhid: action.materialRozhid,\r\n      };\r\n    case SET_FILTER_MATERIALS_ROZHID:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MATERIALS_ROZHID:\r\n      return {\r\n        ...state,\r\n        materialRozhid: [...state.materialRozhid, action.materialRozhid],\r\n      };\r\n    case DELETE_MATERIALS_ROZHID:\r\n      return {\r\n        ...state,\r\n        materialRozhid: state.materialRozhid.filter(\r\n          (materialRozhid) => materialRozhid._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MATERIALS_PARAMS,\r\n  DELETE_MATERIALS_PARAMS,\r\n  SET_FILTER_MATERIALS_PARAMS,\r\n  SET_MATERIALS_PARAMS,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  materialParams: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MATERIALS_PARAMS:\r\n      return {\r\n        ...state,\r\n        materialParams: action.materialParams,\r\n      };\r\n    case SET_FILTER_MATERIALS_PARAMS:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MATERIALS_PARAMS:\r\n      return {\r\n        ...state,\r\n        materialParams: [...state.materialParams, action.materialParams],\r\n      };\r\n    case DELETE_MATERIALS_PARAMS:\r\n      return {\r\n        ...state,\r\n        materialParams: state.materialParams.filter(\r\n          (materialParams) => materialParams._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MATERIALS_PARAMS_VALUE,\r\n  DELETE_MATERIALS_PARAMS_VALUE,\r\n  SET_FILTER_MATERIALS_PARAMS_VALUE,\r\n  SET_MATERIALS_PARAMS_VALUE,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  materialParamsValue: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MATERIALS_PARAMS_VALUE:\r\n      return {\r\n        ...state,\r\n        materialParamsValue: action.materialParamsValue,\r\n      };\r\n    case SET_FILTER_MATERIALS_PARAMS_VALUE:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MATERIALS_PARAMS_VALUE:\r\n      return {\r\n        ...state,\r\n        materialParamsValue: [\r\n          ...state.materialParamsValue,\r\n          action.materialParamsValue,\r\n        ],\r\n      };\r\n    case DELETE_MATERIALS_PARAMS_VALUE:\r\n      return {\r\n        ...state,\r\n        materialParamsValue: state.materialParamsValue.filter(\r\n          (materialParamsValue) => materialParamsValue._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_PRAJA_COLOR, DELETE_PRAJA_COLOR, SET_FILTER_PRAJA_COLOR, SET_PRAJA_COLOR } from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prajaColor: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRAJA_COLOR:\r\n      return {\r\n        ...state,\r\n        prajaColor: action.prajaColor,\r\n      };\r\n    case SET_FILTER_PRAJA_COLOR:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PRAJA_COLOR:\r\n      return {\r\n        ...state,\r\n        prajaColor: [...state.prajaColor, action.prajaColor],\r\n      };\r\n    case DELETE_PRAJA_COLOR:\r\n      return {\r\n        ...state,\r\n        prajaColor: state.prajaColor.filter(\r\n          (prajaColor) => prajaColor._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PRAJA_ROZHID,\r\n  DELETE_PRAJA_ROZHID,\r\n  SET_FILTER_PRAJA_ROZHID,\r\n  SET_PRAJA_ROZHID,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prajaRozhid: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRAJA_ROZHID:\r\n      return {\r\n        ...state,\r\n        prajaRozhid: action.prajaRozhid,\r\n      };\r\n    case SET_FILTER_PRAJA_ROZHID:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PRAJA_ROZHID:\r\n      return {\r\n        ...state,\r\n        prajaRozhid: [...state.prajaRozhid, action.prajaRozhid],\r\n      };\r\n    case DELETE_PRAJA_ROZHID:\r\n      return {\r\n        ...state,\r\n        prajaRozhid: state.prajaRozhid.filter(\r\n          (prajaRozhid) => prajaRozhid._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PRAJA_SUROVUNA,\r\n  DELETE_PRAJA_SUROVUNA,\r\n  SET_FILTER_PRAJA_SUROVUNA,\r\n  SET_PRAJA_SUROVUNA,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prajaSurovuna: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRAJA_SUROVUNA:\r\n      return {\r\n        ...state,\r\n        prajaSurovuna: action.prajaSurovuna,\r\n      };\r\n    case SET_FILTER_PRAJA_SUROVUNA:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PRAJA_SUROVUNA:\r\n      return {\r\n        ...state,\r\n        prajaSurovuna: [...state.prajaSurovuna, action.prajaSurovuna],\r\n      };\r\n    case DELETE_PRAJA_SUROVUNA:\r\n      return {\r\n        ...state,\r\n        prajaSurovuna: state.prajaSurovuna.filter(\r\n          (prajaSurovuna) => prajaSurovuna._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PRAJA_TOVTSHINA,\r\n  DELETE_PRAJA_TOVTSHINA,\r\n  SET_FILTER_PRAJA_TOVTSHINA,\r\n  SET_PRAJA_TOVTSHINA,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prajaTovtshina: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRAJA_TOVTSHINA:\r\n      return {\r\n        ...state,\r\n        prajaTovtshina: action.prajaTovtshina,\r\n      };\r\n    case SET_FILTER_PRAJA_TOVTSHINA:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PRAJA_TOVTSHINA:\r\n      return {\r\n        ...state,\r\n        prajaTovtshina: [...state.prajaTovtshina, action.prajaTovtshina],\r\n      };\r\n    case DELETE_PRAJA_TOVTSHINA:\r\n      return {\r\n        ...state,\r\n        prajaTovtshina: state.prajaTovtshina.filter(\r\n          (prajaTovtshina) => prajaTovtshina._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PRAJA_TYPE,\r\n  DELETE_PRAJA_TYPE,\r\n  SET_FILTER_PRAJA_TYPE,\r\n  SET_PRAJA_TYPE,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prajaType: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRAJA_TYPE:\r\n      return {\r\n        ...state,\r\n        prajaType: action.prajaType,\r\n      };\r\n    case SET_FILTER_PRAJA_TYPE:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PRAJA_TYPE:\r\n      return {\r\n        ...state,\r\n        prajaType: [...state.prajaType, action.prajaType],\r\n      };\r\n    case DELETE_PRAJA_TYPE:\r\n      return {\r\n        ...state,\r\n        prajaType: state.prajaType.filter(\r\n          (prajaType) => prajaType._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PRAJA_VENDOR,\r\n  DELETE_PRAJA_VENDOR,\r\n  SET_FILTER_PRAJA_VENDOR,\r\n  SET_PRAJA_VENDOR,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prajaVendor: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRAJA_VENDOR:\r\n      return {\r\n        ...state,\r\n        prajaVendor: action.prajaVendor,\r\n      };\r\n    case SET_FILTER_PRAJA_VENDOR:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PRAJA_VENDOR:\r\n      return {\r\n        ...state,\r\n        prajaVendor: [...state.prajaVendor, action.prajaVendor],\r\n      };\r\n    case DELETE_PRAJA_VENDOR:\r\n      return {\r\n        ...state,\r\n        prajaVendor: state.prajaVendor.filter(\r\n          (prajaVendor) => prajaVendor._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PROD_ASORTUMENT,\r\n  DELETE_PROD_ASORTUMENT,\r\n  SET_FILTERED_PROD_ASORTUMENT,\r\n  SET_PROD_ASORTUMENT,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prodAsortument: [],\r\n\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROD_ASORTUMENT:\r\n      return {\r\n        ...state,\r\n        prodAsortument: action.prodAsortument,\r\n      };\r\n    case SET_FILTERED_PROD_ASORTUMENT:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PROD_ASORTUMENT:\r\n      return {\r\n        ...state,\r\n        prodAsortument: [...state.prodAsortument, action.prodAsortument],\r\n      };\r\n    case DELETE_PROD_ASORTUMENT:\r\n      return {\r\n        ...state,\r\n        prodAsortument: state.prodAsortument.filter(\r\n          (prodAsortument) => prodAsortument._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PROD_CLASS,\r\n  DELETE_PROD_CLASS,\r\n  SET_FILTERED_PROD_CLASS,\r\n  SET_PROD_CLASS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prodClass: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROD_CLASS:\r\n      return {\r\n        ...state,\r\n        prodClass: action.prodClass,\r\n      };\r\n    case SET_FILTERED_PROD_CLASS:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PROD_CLASS:\r\n      return {\r\n        ...state,\r\n        prodClass: [...state.prodClass, action.prodClass],\r\n      };\r\n    case DELETE_PROD_CLASS:\r\n      return {\r\n        ...state,\r\n        prodClass: state.prodClass.filter(\r\n          (prodClass) => prodClass._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PROD_COLOR,\r\n  DELETE_PROD_COLOR,\r\n  SET_FILTERED_PROD_COLOR,\r\n  SET_PROD_COLOR,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prodColor: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROD_COLOR:\r\n      return {\r\n        ...state,\r\n        prodColor: action.prodColor,\r\n      };\r\n    case SET_FILTERED_PROD_COLOR:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PROD_COLOR:\r\n      return {\r\n        ...state,\r\n        prodColor: [...state.prodColor, action.prodColor],\r\n      };\r\n    case DELETE_PROD_COLOR:\r\n      return {\r\n        ...state,\r\n        prodColor: state.prodColor.filter(\r\n          (prodColor) => prodColor._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_PROD_IMAGE, DELETE_PROD_IMAGE, SET_FILTERED_PROD_IMAGE, SET_PROD_IMAGE } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prodImage: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROD_IMAGE:\r\n      return {\r\n        ...state,\r\n        prodImage: action.prodImage,\r\n      };\r\n      case SET_FILTERED_PROD_IMAGE:\r\n        return {\r\n          ...state,\r\n          filtered: action.filtered,\r\n        };\r\n      case ADD_PROD_IMAGE:\r\n        return {\r\n          ...state,\r\n          prodImage: [...state.prodImage, action.prodImage],\r\n        };\r\n      case DELETE_PROD_IMAGE:\r\n        return {\r\n          ...state,\r\n          prodImage: state.prodImage.filter(\r\n            (prodImage) => prodImage._id !== action._id\r\n          ),\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PROD_ARTICLE,\r\n  DELETE_PROD_ARTICLE,\r\n  SET_FILTERED_PROD_ARTICLE,\r\n  SET_PROD_ARTICLE,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prodArticle: \"\",\r\n  single: {},\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROD_ARTICLE:\r\n      return {\r\n        ...state,\r\n        prodArticle: action.prodArticle,\r\n      };\r\n\r\n    case SET_FILTERED_PROD_ARTICLE:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PROD_ARTICLE:\r\n      return {\r\n        ...state,\r\n        prodArticle: [...state.prodArticle, action.prodArticle],\r\n      };\r\n    case DELETE_PROD_ARTICLE:\r\n      return {\r\n        ...state,\r\n        prodArticle: state.prodArticle.filter(\r\n          (prodArticle) => prodArticle._id !== action._id\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PROD_SEZON,\r\n  DELETE_PROD_SEZON,\r\n  SET_FILTERED_PROD_SEZON,\r\n  SET_PROD_SEZON,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prodSezon: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROD_SEZON:\r\n      return {\r\n        ...state,\r\n        prodSezon: action.prodSezon,\r\n      };\r\n    case SET_FILTERED_PROD_SEZON:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PROD_SEZON:\r\n      return {\r\n        ...state,\r\n        prodSezon: [...state.prodSezon, action.prodSezon],\r\n      };\r\n    case DELETE_PROD_SEZON:\r\n      return {\r\n        ...state,\r\n        prodSezon: state.prodSezon.filter(\r\n          (prodSezon) => prodSezon._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PROD_SIZE,\r\n  DELETE_PROD_SIZE,\r\n  SET_FILTERED_PROD_SIZE,\r\n  SET_PROD_SIZE,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prodSize: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROD_SIZE:\r\n      return {\r\n        ...state,\r\n        prodSize: action.prodSize,\r\n      };\r\n    case SET_FILTERED_PROD_SIZE:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PROD_SIZE:\r\n      return {\r\n        ...state,\r\n        prodSize: [...state.prodSize, action.prodSize],\r\n      };\r\n    case DELETE_PROD_SIZE:\r\n      return {\r\n        ...state,\r\n        prodSize: state.prodSize.filter(\r\n          (prodSize) => prodSize._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_PROD_TYPE,\r\n  DELETE_PROD_TYPE,\r\n  SET_FILTERED_PROD_TYPE,\r\n  SET_PROD_TYPE,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  prodType: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROD_TYPE:\r\n      return {\r\n        ...state,\r\n        prodType: action.prodType,\r\n      };\r\n    case SET_FILTERED_PROD_TYPE:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_PROD_TYPE:\r\n      return {\r\n        ...state,\r\n        prodType: [...state.prodType, action.prodType],\r\n      };\r\n    case DELETE_PROD_TYPE:\r\n      return {\r\n        ...state,\r\n        prodType: state.prodType.filter(\r\n          (prodType) => prodType._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LOGOUT, SET_PROFILE } from \"../actions/actionTypes\";\r\n\r\nconst initialState = { email: \"\", password: \"\", token: \"\" };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROFILE:\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case LOGOUT: {\r\n      return { initialState };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_ROZTSINKA,\r\n  DELETE_ROZTSINKA,\r\n  SET_FILTER_ROZTSINKA,\r\n  SET_ROZTSINKA,\r\n  SET_SINGLE_ROZTSINKA,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  roztsinka: \"\",\r\n  single: {},\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ROZTSINKA:\r\n      return {\r\n        ...state,\r\n        roztsinka: action.roztsinka,\r\n      };\r\n    case SET_SINGLE_ROZTSINKA:\r\n      return { ...state, single: action.singleRoztsinka };\r\n    case SET_FILTER_ROZTSINKA:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_ROZTSINKA:\r\n      return {\r\n        ...state,\r\n        roztsinka: [...state.roztsinka, action.roztsinka],\r\n      };\r\n    case DELETE_ROZTSINKA:\r\n      return {\r\n        ...state,\r\n        roztsinka: state.roztsinka.filter(\r\n          (roztsinka) => roztsinka._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_SKLAD1,\r\n  DELETE_SKLAD1,\r\n  SET_FILTERED_SKLAD1,\r\n  SET_SKLAD1,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  filtered: [],\r\n  sklad1: [\r\n    {\r\n      vyazalId: \"\",\r\n      createdAt: \"\",\r\n      masterId: \"\",\r\n      machineId: \"\",\r\n      date_prixod: \"\",\r\n      date_rozsxodu: \"\",\r\n      mishok: \"\",\r\n      changesID: \"\",\r\n      deletedAt: \"\",\r\n      updatedAt: \"\",\r\n      _id: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SKLAD1:\r\n      return {\r\n        ...state,\r\n        sklad1: action.sklad1,\r\n      };\r\n    case SET_FILTERED_SKLAD1:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_SKLAD1:\r\n      return {\r\n        ...state,\r\n        sklad1: [...state.sklad1, action.sklad1],\r\n      };\r\n    case DELETE_SKLAD1:\r\n      return {\r\n        ...state,\r\n        sklad1: state.sklad1.filter((sklad1) => sklad1._id !== action._id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_WORKER,\r\n  DELETE_WORKER,\r\n  SET_FILTERED_WORKERS,\r\n  SET_SINGLE_WORKER,\r\n  SET_WORKERS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  workers: [],\r\n  single: {},\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_WORKERS:\r\n      return {\r\n        ...state,\r\n        workers: action.workers,\r\n      };\r\n    case SET_SINGLE_WORKER:\r\n      return { ...state, single: action.singleWorker };\r\n    case SET_FILTERED_WORKERS:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_WORKER:\r\n      return {\r\n        ...state,\r\n        workers: [...state.workers, action.workers],\r\n      };\r\n    case DELETE_WORKER:\r\n      return {\r\n        ...state,\r\n        workers: state.workers.filter((workers) => workers._id !== action._id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_ZP_SKLAD1 } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  zpsklad1: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ZP_SKLAD1:\r\n      return {\r\n        ...state,\r\n        zpsklad1: action.zpsklad1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_ZVITU,\r\n  DELETE_ZVITU,\r\n  SET_FILTERED_ZVITU,\r\n  SET_SINGLE_ZVITU,\r\n  SET_ZVITU,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  zvitu: \"\",\r\n  filtered: [],\r\n  single: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ZVITU:\r\n      return {\r\n        ...state,\r\n        zvitu: action.zvitu,\r\n      };\r\n    case SET_SINGLE_ZVITU:\r\n      return { ...state, single: action.singleZvitu };\r\n    case ADD_ZVITU:\r\n      return {\r\n        ...state,\r\n        zvitu: [...state.zvitu, action.zvitu],\r\n      };\r\n    case SET_FILTERED_ZVITU:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case DELETE_ZVITU:\r\n      return {\r\n        ...state,\r\n        zvitu: state.zvitu.filter((zvitu) => zvitu._id !== action._id),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_ZVITU_ROZXID,\r\n  DELETE_ZVITU_ROZXID,\r\n  SET_FILTERED_ZVITU_ROZXID,\r\n  SET_SINGLE_ZVITU_ROZXID,\r\n  SET_ZVITU_ROZXID,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  zvituRozxid: \"\",\r\n  filtered: [],\r\n  single: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ZVITU_ROZXID:\r\n      return {\r\n        ...state,\r\n        zvituRozxid: action.zvituRozxid,\r\n      };\r\n    case SET_SINGLE_ZVITU_ROZXID:\r\n      return { ...state, single: action.singleZvituRozxid };\r\n    case ADD_ZVITU_ROZXID:\r\n      return {\r\n        ...state,\r\n        zvituRozxid: [...state.zvituRozxid, action.zvituRozxid],\r\n      };\r\n    case SET_FILTERED_ZVITU_ROZXID:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case DELETE_ZVITU_ROZXID:\r\n      return {\r\n        ...state,\r\n        zvituRozxid: state.zvituRozxid.filter(\r\n          (zvituRozxid) => zvituRozxid._id !== action._id\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MATERIALS_TYPE,\r\n  DELETE_MATERIALS_TYPE,\r\n  SET_FILTER_MATERIALS_TYPE,\r\n  SET_MATERIALS_TYPE,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  materialType: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MATERIALS_TYPE:\r\n      return {\r\n        ...state,\r\n        materialType: action.materialType,\r\n      };\r\n    case SET_FILTER_MATERIALS_TYPE:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MATERIALS_TYPE:\r\n      return {\r\n        ...state,\r\n        materialType: [...state.materialType, action.materialType],\r\n      };\r\n    case DELETE_MATERIALS_TYPE:\r\n      return {\r\n        ...state,\r\n        materialType: state.materialType.filter(\r\n          (materialType) => materialType._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MATERIALS_VENDOR,\r\n  DELETE_MATERIALS_VENDOR,\r\n  SET_FILTER_MATERIALS_VENDOR,\r\n  SET_MATERIALS_VENDOR,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  materialVendor: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MATERIALS_VENDOR:\r\n      return {\r\n        ...state,\r\n        materialVendor: action.materialVendor,\r\n      };\r\n    case SET_FILTER_MATERIALS_VENDOR:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MATERIALS_VENDOR:\r\n      return {\r\n        ...state,\r\n        materialVendor: [...state.materialVendor, action.materialVendor],\r\n      };\r\n    case DELETE_MATERIALS_VENDOR:\r\n      return {\r\n        ...state,\r\n        materialVendor: state.materialVendor.filter(\r\n          (materialVendor) => materialVendor._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_MACHINE,\r\n  DELETE_MACHINE,\r\n  SET_FILTER_MACHINE,\r\n  SET_MACHINE,\r\n  SET_SINGLE_MACHINE,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  machines: [],\r\n  single: {},\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MACHINE:\r\n      return {\r\n        ...state,\r\n        machines: action.machines,\r\n      };\r\n    case SET_SINGLE_MACHINE:\r\n      return { ...state, single: action.singleMachine };\r\n    case SET_FILTER_MACHINE:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    case ADD_MACHINE:\r\n      return {\r\n        ...state,\r\n        machines: [...state.machines, action.machines],\r\n      };\r\n    case DELETE_MACHINE:\r\n      return {\r\n        ...state,\r\n        machines: state.machines.filter(\r\n          (machines) => machines._id !== action._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_FILTERED_ZVITU_ZALUSHOK,\r\n  SET_ZVITU_ZALUSHOK,\r\n} from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  zvituZalushok: \"\",\r\n  filtered: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ZVITU_ZALUSHOK:\r\n      return {\r\n        ...state,\r\n        zvituZalushok: action.zvituZalushok,\r\n      };\r\n    case SET_FILTERED_ZVITU_ZALUSHOK:\r\n      return {\r\n        ...state,\r\n        filtered: action.filtered,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport operationsReducer from \"./operationsReducer\";\r\nimport duymuReducer from \"./Machine/duymuReducer\";\r\nimport golkuReducer from \"./Machine/golkuReducer\";\r\nimport modelReducer from \"./Machine/modelReducer\";\r\nimport vyazalniReducer from \"./Machine/vyazalniReducer\";\r\nimport dilankaRozhoduReducer from \"./Material/dilankaRozhoduReducer\";\r\nimport paramsReducer from \"./Material/paramsReducer\";\r\nimport paramsValueReducer from \"./Material/paramsValueReducer\";\r\nimport colorReducer from \"./Praja/colorReducer\";\r\nimport rozhidReducer from \"./Praja/rozhidReducer\";\r\nimport surovunaReducer from \"./Praja/surovunaReducer\";\r\nimport tovtshinaReducer from \"./Praja/tovtshinaReducer\";\r\nimport typeReducer from \"./Praja/typeReducer\";\r\nimport vendorReducer from \"./Praja/vendorReducer\";\r\nimport prodTypeAsortReducer from \"./prodTypeAsortReducer\";\r\nimport prodTypeClassReducer from \"./prodTypeClassReducer\";\r\nimport prodTypeColorReducer from \"./prodTypeColorReducer\";\r\nimport prodTypeImageReducer from \"./prodTypeImageReducer\";\r\nimport prodTypeArticleReducer from \"./prodTypeArticleReducer\";\r\nimport prodTypeSezonReducer from \"./prodTypeSezonReducer\";\r\nimport prodTypeSizeReducer from \"./prodTypeSizeReducer\";\r\nimport prodTypeTypeReducer from \"./prodTypeTypeReducer\";\r\nimport profilleReducer from \"./profileReducer\";\r\nimport roztsinkaReducer from \"./roztsinkaReducer\";\r\nimport skladReducer from \"./skladReducer\";\r\nimport workersReducer from \"./workersReducer\";\r\nimport zpSklad1Reducer from \"./zpSklad1Reducer\";\r\nimport zvituReducer from \"./Zvitu/zvituReducer\";\r\nimport zvituRozxidReducer from \"./Zvitu/zvituRozxidReducer\";\r\nimport typeMReducer from \"./Material/typeMReducer\";\r\nimport vendorMReducer from \"./Material/vendorMReducer\";\r\nimport machineReducer from \"./Machine/machineReducer\";\r\nimport zvituZalushokReducer from \"./Zvitu/zvituZalushokReducer\";\r\n\r\nexport default combineReducers({\r\n  profile: profilleReducer,\r\n  sklad1: skladReducer,\r\n  workers: workersReducer,\r\n  prod: prodTypeArticleReducer,\r\n  prodAsortument: prodTypeAsortReducer,\r\n  prodClass: prodTypeClassReducer,\r\n  prodSize: prodTypeSizeReducer,\r\n  prodColor: prodTypeColorReducer,\r\n  prodImage: prodTypeImageReducer,\r\n  prodSezon: prodTypeSezonReducer,\r\n  prodType: prodTypeTypeReducer,\r\n  prajaSurovuna: surovunaReducer,\r\n  prajaType: typeReducer,\r\n  prajaTovtshina: tovtshinaReducer,\r\n  prajaVendor: vendorReducer,\r\n  prajaRozhid: rozhidReducer,\r\n  prajaColor: colorReducer,\r\n  machines: machineReducer,\r\n  machineModel: modelReducer,\r\n  machineDuymu: duymuReducer,\r\n  machineGolku: golkuReducer,\r\n  machineVyazalni: vyazalniReducer,\r\n  roztsinka: roztsinkaReducer,\r\n  materialRozhid: dilankaRozhoduReducer,\r\n  materialParams: paramsReducer,\r\n  materialParamsValue: paramsValueReducer,\r\n  materialType: typeMReducer,\r\n  materialVendor: vendorMReducer,\r\n  operations: operationsReducer,\r\n  zvitu: zvituReducer,\r\n  zvituRozxid: zvituRozxidReducer,\r\n  zvituZalushok: zvituZalushokReducer,\r\n  zpsklad1: zpSklad1Reducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider {...{ store }}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"EditPrice_title__container__jCMjp\",\"title\":\"EditPrice_title__3yxri\",\"span\":\"EditPrice_span__1ysop\",\"main\":\"EditPrice_main__hIG_n\",\"main__container\":\"EditPrice_main__container__1gwc1\",\"sum__container\":\"EditPrice_sum__container__2qJxg\",\"left\":\"EditPrice_left__20Mtp\",\"btn__container\":\"EditPrice_btn__container__2BMAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"CreatePruhid_title__container__qHFY3\",\"title\":\"CreatePruhid_title__3eaZG\",\"span\":\"CreatePruhid_span__2uXI3\",\"main\":\"CreatePruhid_main__25Tzd\",\"main__container\":\"CreatePruhid_main__container__39Ibv\",\"sum__container\":\"CreatePruhid_sum__container__J4R1k\",\"left\":\"CreatePruhid_left__XXH7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Equipment_title__container__2fYck\",\"title\":\"Equipment_title__1hOnh\",\"table\":\"Equipment_table__3-THO\",\"search__container\":\"Equipment_search__container__1wWXr\",\"table__btn\":\"Equipment_table__btn__3QDC-\",\"del\":\"Equipment_del__1aVfC\",\"filter__container\":\"Equipment_filter__container__2pv0w\",\"tab\":\"Equipment_tab__9MetB\",\"tab__active\":\"Equipment_tab__active__zkXco\",\"tabs\":\"Equipment_tabs__2pvjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Praja_title__container__3Ajhg\",\"title\":\"Praja_title__3CKH_\",\"table\":\"Praja_table__2IyAN\",\"search__container\":\"Praja_search__container__3XNL_\",\"table__btn\":\"Praja_table__btn__3I02e\",\"del\":\"Praja_del__2I77O\",\"filter__container\":\"Praja_filter__container__3KXZS\",\"tab\":\"Praja_tab__2F34O\",\"tab__active\":\"Praja_tab__active__3hmO0\",\"tabs\":\"Praja_tabs__3jGV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"PakMaterials_title__container__1wW6_\",\"title\":\"PakMaterials_title__j1j11\",\"table\":\"PakMaterials_table__3y-Kj\",\"search__container\":\"PakMaterials_search__container__wM6Hv\",\"table__btn\":\"PakMaterials_table__btn__2ZJdy\",\"del\":\"PakMaterials_del__3h9nL\",\"filter__container\":\"PakMaterials_filter__container__2PZ8M\",\"tab\":\"PakMaterials_tab__3lMmC\",\"tab__active\":\"PakMaterials_tab__active__yiAOT\",\"tabs\":\"PakMaterials_tabs__kmw3U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Productcia_title__container__3oZ_I\",\"title\":\"Productcia_title__U4f0H\",\"table\":\"Productcia_table__18bAI\",\"search__container\":\"Productcia_search__container__1mrlQ\",\"table__btn\":\"Productcia_table__btn__1BvAW\",\"del\":\"Productcia_del__8FzwP\",\"filter__container\":\"Productcia_filter__container__2RYLd\",\"tab\":\"Productcia_tab__29mJV\",\"tab__active\":\"Productcia_tab__active__3Wv2n\",\"tabs\":\"Productcia_tabs__2lFFI\",\"i\":\"Productcia_i__2STB0\",\"create__worker\":\"Productcia_create__worker__1-mbi\",\"exel__wrapper\":\"Productcia_exel__wrapper__2hfF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Workers_title__container__3hQtj\",\"title\":\"Workers_title__MakgT\",\"table\":\"Workers_table__2zyqE\",\"status__table\":\"Workers_status__table__10IzA\",\"search__container\":\"Workers_search__container__29cD_\",\"table__btn\":\"Workers_table__btn__XWDH6\",\"del\":\"Workers_del__1ndSi\",\"filter__container\":\"Workers_filter__container__3B-8V\",\"create__worker\":\"Workers_create__worker__8DZrk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"CreateMachine_title__container__3iNhC\",\"title\":\"CreateMachine_title__pf1Dr\",\"span\":\"CreateMachine_span__1BmMT\",\"main\":\"CreateMachine_main__xLJ_F\",\"main__container\":\"CreateMachine_main__container__nuZL8\",\"sum__container\":\"CreateMachine_sum__container__1-pDT\",\"btn__container\":\"CreateMachine_btn__container__1KFSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"EditMachine_title__container__2gViQ\",\"title\":\"EditMachine_title__Q9dzz\",\"span\":\"EditMachine_span__2ikDZ\",\"main\":\"EditMachine_main__1kmvz\",\"main__container\":\"EditMachine_main__container__1qiHZ\",\"sum__container\":\"EditMachine_sum__container__1gVEt\",\"btn__container\":\"EditMachine_btn__container__nB1Kq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Operations_title__container__L2OBY\",\"title\":\"Operations_title__1wNeL\",\"table\":\"Operations_table__RNC7W\",\"status__table\":\"Operations_status__table__YAchj\",\"search__container\":\"Operations_search__container__Hmk_i\",\"table__btn\":\"Operations_table__btn__1Cn8H\",\"del\":\"Operations_del__qPoT3\",\"filter__container\":\"Operations_filter__container__1cwdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__28Q9F\",\"dropdown\":\"Header_dropdown__3x6wu\",\"dropbtn\":\"Header_dropbtn__82LMN\",\"dropdown_content\":\"Header_dropdown_content__1Jasi\",\"logout\":\"Header_logout__3vb_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Prices_title__container__3hTZm\",\"title\":\"Prices_title__dimca\",\"table\":\"Prices_table__2Xp8w\",\"search__container\":\"Prices_search__container__ETOPp\",\"table__btn\":\"Prices_table__btn__v0V2e\",\"del\":\"Prices_del__1FIGs\",\"filter__container\":\"Prices_filter__container__3sk6m\",\"create__worker\":\"Prices_create__worker__1ltPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"CreateWorker_title__container__35CqB\",\"title\":\"CreateWorker_title__3ueI5\",\"span\":\"CreateWorker_span__3xLFF\",\"main\":\"CreateWorker_main__3EXSG\",\"main__container\":\"CreateWorker_main__container__2Yi58\",\"sum__container\":\"CreateWorker_sum__container__2uHwc\",\"btn__container\":\"CreateWorker_btn__container__22tG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"EditWorker_title__container__sPs2_\",\"title\":\"EditWorker_title__1GrZp\",\"span\":\"EditWorker_span__1V90t\",\"main\":\"EditWorker_main__23Ojw\",\"main__container\":\"EditWorker_main__container__1p-Yv\",\"sum__container\":\"EditWorker_sum__container__FMhVz\",\"btn__container\":\"EditWorker_btn__container__1YAuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"CreateZvitu_title__container__1GEzO\",\"title\":\"CreateZvitu_title__32wZH\",\"span\":\"CreateZvitu_span__2y_7s\",\"main\":\"CreateZvitu_main__1C8hu\",\"main__container\":\"CreateZvitu_main__container__3Rom7\",\"sum__container\":\"CreateZvitu_sum__container__vNi9S\",\"btn__container\":\"CreateZvitu_btn__container__zl1Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"CreateZvituRozxid_title__container__1VOna\",\"title\":\"CreateZvituRozxid_title__Zob3S\",\"span\":\"CreateZvituRozxid_span__3yUMj\",\"main\":\"CreateZvituRozxid_main__oOcbd\",\"main__container\":\"CreateZvituRozxid_main__container__KUWcS\",\"sum__container\":\"CreateZvituRozxid_sum__container__26fiA\",\"btn__container\":\"CreateZvituRozxid_btn__container__1GXuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"EditZvitu_title__container__3bkDC\",\"title\":\"EditZvitu_title__2isj9\",\"span\":\"EditZvitu_span__1SfIz\",\"main\":\"EditZvitu_main__1NeOx\",\"main__container\":\"EditZvitu_main__container__3tt0U\",\"sum__container\":\"EditZvitu_sum__container__3hNqX\",\"btn__container\":\"EditZvitu_btn__container__1tk2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"EditZvituRozxid_title__container__35Gdk\",\"title\":\"EditZvituRozxid_title__3Q_I3\",\"span\":\"EditZvituRozxid_span__2byxT\",\"main\":\"EditZvituRozxid_main__BBuyw\",\"main__container\":\"EditZvituRozxid_main__container__2hT3r\",\"sum__container\":\"EditZvituRozxid_sum__container__1uSgc\",\"btn__container\":\"EditZvituRozxid_btn__container__ZO0d6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Prod_title__container__2EBdM\",\"title\":\"Prod_title__38y_F\",\"table\":\"Prod_table__2QDDB\",\"search__container\":\"Prod_search__container__HPg5c\",\"table__btn\":\"Prod_table__btn__39zpX\",\"del\":\"Prod_del__1uvuw\",\"filter__container\":\"Prod_filter__container__3Eea7\",\"tab\":\"Prod_tab__2SNQ3\",\"tab__active\":\"Prod_tab__active__1eEuQ\",\"tabs\":\"Prod_tabs__2p0dr\",\"i\":\"Prod_i__3v0hB\",\"create__worker\":\"Prod_create__worker__rTCG8\",\"exel__wrapper\":\"Prod_exel__wrapper__3dhzx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__container\":\"Login_main__container__30Ttc\",\"header__title\":\"Login_header__title__1oWbv\",\"login__container\":\"Login_login__container__y4cw0\",\"login\":\"Login_login__2I_xF\",\"form__submit__button\":\"Login_form__submit__button__1KX93\",\"label\":\"Login_label__1WMtW\",\"btn\":\"Login_btn__1v8Wd\",\"error\":\"Login_error__2OaDv\",\"input\":\"Login_input__2v4DX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"ZpSklad1_title__container__2nhBm\",\"title\":\"ZpSklad1_title__c0MT9\",\"table\":\"ZpSklad1_table__1e_TO\",\"status__table\":\"ZpSklad1_status__table__1Sd_B\",\"search__container\":\"ZpSklad1_search__container__hgDRQ\",\"table__btn\":\"ZpSklad1_table__btn__1gf2Q\",\"del\":\"ZpSklad1_del__3qzXj\",\"filter__container\":\"ZpSklad1_filter__container__3lQ-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Edit_title__container__3qj3f\",\"title\":\"Edit_title__RPbZC\",\"edit__container\":\"Edit_edit__container__2s83I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"PrajaItems_title__container__116uh\",\"title\":\"PrajaItems_title__NWbgL\",\"table\":\"PrajaItems_table__2LgDU\",\"search__container\":\"PrajaItems_search__container__1BI2n\",\"table__btn\":\"PrajaItems_table__btn__3w57D\",\"del\":\"PrajaItems_del__1H9wW\",\"filter__container\":\"PrajaItems_filter__container__uxxD_\",\"tab\":\"PrajaItems_tab__2DHii\",\"tab__active\":\"PrajaItems_tab__active__2GVIz\",\"tabs\":\"PrajaItems_tabs__3x1rB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3l3V2\",\"input__container\":\"Input_input__container__2KXSN\",\"label\":\"Input_label__29wor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__submit__button\":\"Button_form__submit__button__33yPZ\",\"btn\":\"Button_btn__13MRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__container\":\"Sklad1_title__container__1M5jj\",\"title\":\"Sklad1_title__2Xfi2\",\"table\":\"Sklad1_table__3QA0V\",\"search__container\":\"Sklad1_search__container__2EVhD\",\"table__btn\":\"Sklad1_table__btn__Ej-4m\",\"del\":\"Sklad1_del__1kBSM\",\"filter__container\":\"Sklad1_filter__container__1Rd4F\",\"tab\":\"Sklad1_tab__3zN79\",\"tab__active\":\"Sklad1_tab__active__1vkey\",\"tabs\":\"Sklad1_tabs__8qfz6\",\"i\":\"Sklad1_i__2o9jz\",\"create__worker\":\"Sklad1_create__worker__3m1o0\",\"exel__wrapper\":\"Sklad1_exel__wrapper__vzcDl\"};"],"sourceRoot":""}